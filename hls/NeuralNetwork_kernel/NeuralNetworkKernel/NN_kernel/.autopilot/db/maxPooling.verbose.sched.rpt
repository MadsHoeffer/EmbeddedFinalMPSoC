

================================================================
== Vitis HLS Report for 'maxPooling'
================================================================
* Date:           Sat Jan 14 11:17:06 2023

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:47 MST 2020)
* Project:        NeuralNetworkKernel
* Solution:       NN_kernel (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu3eg-sbva484-1-i


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  5.482 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|     none|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+---------+---------+-----------+-----------+-----------+--------+----------+
        |                    |  Latency (cycles) | Iteration |  Initiation Interval  |  Trip  |          |
        |      Loop Name     |   min   |   max   |  Latency  |  achieved |   target  |  Count | Pipelined|
        +--------------------+---------+---------+-----------+-----------+-----------+--------+----------+
        |- VITIS_LOOP_29_1   |        ?|        ?|  56 ~ 1043|          -|          -|       ?|        no|
        | + VITIS_LOOP_32_2  |        0|       99|          7|          3|          1|  0 ~ 32|       yes|
        | + VITIS_LOOP_32_2  |        0|       99|          7|          3|          1|  0 ~ 32|       yes|
        | + VITIS_LOOP_32_2  |        0|       99|          7|          3|          1|  0 ~ 32|       yes|
        | + VITIS_LOOP_32_2  |        0|       99|          7|          3|          1|  0 ~ 32|       yes|
        | + VITIS_LOOP_32_2  |        0|       99|          7|          3|          1|  0 ~ 32|       yes|
        | + VITIS_LOOP_32_2  |        0|       99|          7|          3|          1|  0 ~ 32|       yes|
        | + VITIS_LOOP_32_2  |        0|       99|          7|          3|          1|  0 ~ 32|       yes|
        | + VITIS_LOOP_32_2  |        0|       99|          7|          3|          1|  0 ~ 32|       yes|
        | + VITIS_LOOP_32_2  |        0|       99|          7|          3|          1|  0 ~ 32|       yes|
        | + VITIS_LOOP_32_2  |        5|      101|          7|          3|          1|  0 ~ 32|       yes|
        +--------------------+---------+---------+-----------+-----------+-----------+--------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 3, depth = 7
  * Pipeline-1: initiation interval (II) = 3, depth = 7
  * Pipeline-2: initiation interval (II) = 3, depth = 7
  * Pipeline-3: initiation interval (II) = 3, depth = 7
  * Pipeline-4: initiation interval (II) = 3, depth = 7
  * Pipeline-5: initiation interval (II) = 3, depth = 7
  * Pipeline-6: initiation interval (II) = 3, depth = 7
  * Pipeline-7: initiation interval (II) = 3, depth = 7
  * Pipeline-8: initiation interval (II) = 3, depth = 7
  * Pipeline-9: initiation interval (II) = 3, depth = 7


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 122
* Pipeline : 10
  Pipeline-0 : II = 3, D = 7, States = { 15 16 17 18 19 20 21 }
  Pipeline-1 : II = 3, D = 7, States = { 26 27 28 29 30 31 32 }
  Pipeline-2 : II = 3, D = 7, States = { 37 38 39 40 41 42 43 }
  Pipeline-3 : II = 3, D = 7, States = { 48 49 50 51 52 53 54 }
  Pipeline-4 : II = 3, D = 7, States = { 59 60 61 62 63 64 65 }
  Pipeline-5 : II = 3, D = 7, States = { 70 71 72 73 74 75 76 }
  Pipeline-6 : II = 3, D = 7, States = { 81 82 83 84 85 86 87 }
  Pipeline-7 : II = 3, D = 7, States = { 92 93 94 95 96 97 98 }
  Pipeline-8 : II = 3, D = 7, States = { 103 104 105 106 107 108 109 }
  Pipeline-9 : II = 3, D = 7, States = { 114 115 116 117 118 119 120 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 122 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 22 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 15 
22 --> 23 122 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 33 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 26 
33 --> 34 122 
34 --> 35 
35 --> 36 
36 --> 37 
37 --> 44 38 
38 --> 39 
39 --> 40 
40 --> 41 
41 --> 42 
42 --> 43 
43 --> 37 
44 --> 45 122 
45 --> 46 
46 --> 47 
47 --> 48 
48 --> 55 49 
49 --> 50 
50 --> 51 
51 --> 52 
52 --> 53 
53 --> 54 
54 --> 48 
55 --> 56 122 
56 --> 57 
57 --> 58 
58 --> 59 
59 --> 66 60 
60 --> 61 
61 --> 62 
62 --> 63 
63 --> 64 
64 --> 65 
65 --> 59 
66 --> 67 122 
67 --> 68 
68 --> 69 
69 --> 70 
70 --> 77 71 
71 --> 72 
72 --> 73 
73 --> 74 
74 --> 75 
75 --> 76 
76 --> 70 
77 --> 78 122 
78 --> 79 
79 --> 80 
80 --> 81 
81 --> 88 82 
82 --> 83 
83 --> 84 
84 --> 85 
85 --> 86 
86 --> 87 
87 --> 81 
88 --> 89 122 
89 --> 90 
90 --> 91 
91 --> 92 
92 --> 99 93 
93 --> 94 
94 --> 95 
95 --> 96 
96 --> 97 
97 --> 98 
98 --> 92 
99 --> 100 122 
100 --> 101 
101 --> 102 
102 --> 103 
103 --> 110 104 
104 --> 105 
105 --> 106 
106 --> 107 
107 --> 108 
108 --> 109 
109 --> 103 
110 --> 111 122 
111 --> 112 
112 --> 113 
113 --> 114 
114 --> 115 
115 --> 116 
116 --> 117 
117 --> 118 
118 --> 119 
119 --> 121 120 
120 --> 114 
121 --> 11 
122 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.50>
ST_1 : Operation 123 [1/1] (0.00ns)   --->   "%h_read = read i5 @_ssdm_op_Read.ap_auto.i5, i5 %h"   --->   Operation 123 'read' 'h_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 124 [1/1] (0.87ns)   --->   "%sub = add i5 %h_read, i5 31"   --->   Operation 124 'add' 'sub' <Predicate = true> <Delay = 0.87> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 125 [1/1] (0.00ns)   --->   "%zext_ln29_5 = zext i5 %sub" [../src/matmul.cpp:29]   --->   Operation 125 'zext' 'zext_ln29_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 126 [1/1] (0.88ns)   --->   "%add_ln29_29 = add i6 %zext_ln29_5, i6 19" [../src/matmul.cpp:29]   --->   Operation 126 'add' 'add_ln29_29' <Predicate = true> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 127 [10/10] (1.73ns)   --->   "%urem_ln29 = urem i6 %add_ln29_29, i6 20" [../src/matmul.cpp:29]   --->   Operation 127 'urem' 'urem_ln29' <Predicate = true> <Delay = 1.73> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 9> <II = 5> <Delay = 1.73> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 2 <SV = 1> <Delay = 1.73>
ST_2 : Operation 128 [9/10] (1.73ns)   --->   "%urem_ln29 = urem i6 %add_ln29_29, i6 20" [../src/matmul.cpp:29]   --->   Operation 128 'urem' 'urem_ln29' <Predicate = true> <Delay = 1.73> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 9> <II = 5> <Delay = 1.73> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 1.73>
ST_3 : Operation 129 [8/10] (1.73ns)   --->   "%urem_ln29 = urem i6 %add_ln29_29, i6 20" [../src/matmul.cpp:29]   --->   Operation 129 'urem' 'urem_ln29' <Predicate = true> <Delay = 1.73> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 9> <II = 5> <Delay = 1.73> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 1.73>
ST_4 : Operation 130 [7/10] (1.73ns)   --->   "%urem_ln29 = urem i6 %add_ln29_29, i6 20" [../src/matmul.cpp:29]   --->   Operation 130 'urem' 'urem_ln29' <Predicate = true> <Delay = 1.73> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 9> <II = 5> <Delay = 1.73> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 1.73>
ST_5 : Operation 131 [6/10] (1.73ns)   --->   "%urem_ln29 = urem i6 %add_ln29_29, i6 20" [../src/matmul.cpp:29]   --->   Operation 131 'urem' 'urem_ln29' <Predicate = true> <Delay = 1.73> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 9> <II = 5> <Delay = 1.73> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 1.73>
ST_6 : Operation 132 [5/10] (1.73ns)   --->   "%urem_ln29 = urem i6 %add_ln29_29, i6 20" [../src/matmul.cpp:29]   --->   Operation 132 'urem' 'urem_ln29' <Predicate = true> <Delay = 1.73> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 9> <II = 5> <Delay = 1.73> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 1.73>
ST_7 : Operation 133 [4/10] (1.73ns)   --->   "%urem_ln29 = urem i6 %add_ln29_29, i6 20" [../src/matmul.cpp:29]   --->   Operation 133 'urem' 'urem_ln29' <Predicate = true> <Delay = 1.73> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 9> <II = 5> <Delay = 1.73> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 1.73>
ST_8 : Operation 134 [3/10] (1.73ns)   --->   "%urem_ln29 = urem i6 %add_ln29_29, i6 20" [../src/matmul.cpp:29]   --->   Operation 134 'urem' 'urem_ln29' <Predicate = true> <Delay = 1.73> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 9> <II = 5> <Delay = 1.73> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 1.73>
ST_9 : Operation 135 [2/10] (1.73ns)   --->   "%urem_ln29 = urem i6 %add_ln29_29, i6 20" [../src/matmul.cpp:29]   --->   Operation 135 'urem' 'urem_ln29' <Predicate = true> <Delay = 1.73> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 9> <II = 5> <Delay = 1.73> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 2.62>
ST_10 : Operation 136 [1/1] (0.00ns)   --->   "%w_read = read i6 @_ssdm_op_Read.ap_auto.i6, i6 %w"   --->   Operation 136 'read' 'w_read' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 137 [1/1] (0.88ns)   --->   "%sub1 = add i6 %w_read, i6 63"   --->   Operation 137 'add' 'sub1' <Predicate = true> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 138 [1/1] (0.00ns)   --->   "%zext_ln29_1 = zext i6 %sub1" [../src/matmul.cpp:29]   --->   Operation 138 'zext' 'zext_ln29_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 139 [1/1] (0.88ns)   --->   "%add_ln29 = add i6 %w_read, i6 62" [../src/matmul.cpp:29]   --->   Operation 139 'add' 'add_ln29' <Predicate = true> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 140 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i5 @_ssdm_op_PartSelect.i5.i6.i32.i32, i6 %add_ln29, i32 1, i32 5" [../src/matmul.cpp:29]   --->   Operation 140 'partselect' 'trunc_ln' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 141 [1/1] (0.00ns)   --->   "%zext_ln29_2 = zext i6 %w_read" [../src/matmul.cpp:29]   --->   Operation 141 'zext' 'zext_ln29_2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 142 [1/1] (0.00ns)   --->   "%zext_ln29 = zext i5 %sub" [../src/matmul.cpp:29]   --->   Operation 142 'zext' 'zext_ln29' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 143 [1/1] (0.87ns)   --->   "%add_ln29_1 = add i5 %trunc_ln, i5 1" [../src/matmul.cpp:29]   --->   Operation 143 'add' 'add_ln29_1' <Predicate = true> <Delay = 0.87> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 144 [1/1] (0.00ns)   --->   "%zext_ln29_3 = zext i5 %add_ln29_1" [../src/matmul.cpp:29]   --->   Operation 144 'zext' 'zext_ln29_3' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 145 [1/1] (0.00ns)   --->   "%zext_ln29_4 = zext i5 %add_ln29_1" [../src/matmul.cpp:29]   --->   Operation 145 'zext' 'zext_ln29_4' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 146 [1/10] (1.73ns)   --->   "%urem_ln29 = urem i6 %add_ln29_29, i6 20" [../src/matmul.cpp:29]   --->   Operation 146 'urem' 'urem_ln29' <Predicate = true> <Delay = 1.73> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 9> <II = 5> <Delay = 1.73> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 147 [1/1] (0.00ns)   --->   "%trunc_ln29 = trunc i5 %urem_ln29" [../src/matmul.cpp:29]   --->   Operation 147 'trunc' 'trunc_ln29' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 148 [1/1] (0.00ns)   --->   "%zext_ln29_6 = zext i5 %trunc_ln29" [../src/matmul.cpp:29]   --->   Operation 148 'zext' 'zext_ln29_6' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 149 [1/1] (0.88ns)   --->   "%sub_ln29 = sub i6 %add_ln29_29, i6 %zext_ln29_6" [../src/matmul.cpp:29]   --->   Operation 149 'sub' 'sub_ln29' <Predicate = true> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 150 [1/1] (0.00ns)   --->   "%zext_ln29_7 = zext i6 %sub_ln29" [../src/matmul.cpp:29]   --->   Operation 150 'zext' 'zext_ln29_7' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 151 [1/1] (0.48ns)   --->   "%br_ln29 = br void" [../src/matmul.cpp:29]   --->   Operation 151 'br' 'br_ln29' <Predicate = true> <Delay = 0.48>

State 11 <SV = 10> <Delay = 1.48>
ST_11 : Operation 152 [1/1] (0.00ns)   --->   "%i_0 = phi i64 %add_ln29_28, void %._crit_edge.loopexit.9, i64 0, void %.lr.ph9" [../src/matmul.cpp:29]   --->   Operation 152 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 153 [1/1] (0.00ns)   --->   "%t_0 = phi i32 %add_ln29_27, void %._crit_edge.loopexit.9, i32 0, void %.lr.ph9" [../src/matmul.cpp:29]   --->   Operation 153 'phi' 't_0' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 154 [1/1] (1.48ns)   --->   "%icmp_ln29 = icmp_eq  i64 %i_0, i64 %zext_ln29_7" [../src/matmul.cpp:29]   --->   Operation 154 'icmp' 'icmp_ln29' <Predicate = true> <Delay = 1.48> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 155 [1/1] (0.00ns)   --->   "%br_ln29 = br i1 %icmp_ln29, void %.split4.0, void %._crit_edge10" [../src/matmul.cpp:29]   --->   Operation 155 'br' 'br_ln29' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 156 [1/1] (0.00ns)   --->   "%trunc_ln29_1 = trunc i64 %i_0" [../src/matmul.cpp:29]   --->   Operation 156 'trunc' 'trunc_ln29_1' <Predicate = (!icmp_ln29)> <Delay = 0.00>
ST_11 : Operation 157 [1/1] (0.00ns)   --->   "%empty = or i11 %trunc_ln29_1, i11 1" [../src/matmul.cpp:29]   --->   Operation 157 'or' 'empty' <Predicate = (!icmp_ln29)> <Delay = 0.00>
ST_11 : Operation 158 [4/4] (0.69ns) (root node of the DSP)   --->   "%empty_36 = mul i11 %trunc_ln29_1, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 158 'mul' 'empty_36' <Predicate = (!icmp_ln29)> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_11 : Operation 159 [4/4] (0.69ns) (root node of the DSP)   --->   "%empty_37 = mul i11 %empty, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 159 'mul' 'empty_37' <Predicate = (!icmp_ln29)> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_11 : Operation 160 [1/1] (0.88ns)   --->   "%add_ln32_19 = add i7 %zext_ln29_1, i7 1" [../src/matmul.cpp:32]   --->   Operation 160 'add' 'add_ln32_19' <Predicate = (!icmp_ln29)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 161 [1/1] (0.00ns)   --->   "%tmp = partselect i6 @_ssdm_op_PartSelect.i6.i7.i32.i32, i7 %add_ln32_19, i32 1, i32 6" [../src/matmul.cpp:32]   --->   Operation 161 'partselect' 'tmp' <Predicate = (!icmp_ln29)> <Delay = 0.00>

State 12 <SV = 11> <Delay = 0.69>
ST_12 : Operation 162 [3/4] (0.69ns) (root node of the DSP)   --->   "%empty_36 = mul i11 %trunc_ln29_1, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 162 'mul' 'empty_36' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_12 : Operation 163 [3/4] (0.69ns) (root node of the DSP)   --->   "%empty_37 = mul i11 %empty, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 163 'mul' 'empty_37' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 13 <SV = 12> <Delay = 0.69>
ST_13 : Operation 164 [2/4] (0.69ns) (root node of the DSP)   --->   "%empty_36 = mul i11 %trunc_ln29_1, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 164 'mul' 'empty_36' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_13 : Operation 165 [2/4] (0.69ns) (root node of the DSP)   --->   "%empty_37 = mul i11 %empty, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 165 'mul' 'empty_37' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 14 <SV = 13> <Delay = 0.48>
ST_14 : Operation 166 [1/1] (0.00ns)   --->   "%specloopname_ln28 = specloopname void @_ssdm_op_SpecLoopName, void @empty_4" [../src/matmul.cpp:28]   --->   Operation 166 'specloopname' 'specloopname_ln28' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 167 [1/4] (0.00ns) (root node of the DSP)   --->   "%empty_36 = mul i11 %trunc_ln29_1, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 167 'mul' 'empty_36' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_14 : Operation 168 [1/4] (0.00ns) (root node of the DSP)   --->   "%empty_37 = mul i11 %empty, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 168 'mul' 'empty_37' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_14 : Operation 169 [1/1] (0.00ns)   --->   "%trunc_ln32 = trunc i32 %t_0" [../src/matmul.cpp:32]   --->   Operation 169 'trunc' 'trunc_ln32' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 170 [1/1] (0.00ns)   --->   "%tmp_1 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i6.i1, i6 %tmp, i1 0" [../src/matmul.cpp:32]   --->   Operation 170 'bitconcatenate' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 171 [1/1] (0.00ns)   --->   "%zext_ln32 = zext i7 %tmp_1" [../src/matmul.cpp:32]   --->   Operation 171 'zext' 'zext_ln32' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 172 [1/1] (0.48ns)   --->   "%br_ln32 = br void" [../src/matmul.cpp:32]   --->   Operation 172 'br' 'br_ln32' <Predicate = true> <Delay = 0.48>

State 15 <SV = 14> <Delay = 2.29>
ST_15 : Operation 173 [1/1] (0.00ns)   --->   "%t_1_0 = phi i11 %add_ln34, void %.split.0_ifconv, i11 %trunc_ln32, void %.split4.0" [../src/matmul.cpp:34]   --->   Operation 173 'phi' 't_1_0' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 174 [1/1] (0.00ns)   --->   "%j_0 = phi i64 %add_ln32, void %.split.0_ifconv, i64 0, void %.split4.0" [../src/matmul.cpp:32]   --->   Operation 174 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 175 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 175 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 176 [1/1] (1.48ns)   --->   "%icmp_ln32 = icmp_eq  i64 %j_0, i64 %zext_ln32" [../src/matmul.cpp:32]   --->   Operation 176 'icmp' 'icmp_ln32' <Predicate = true> <Delay = 1.48> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 177 [1/1] (0.00ns)   --->   "%empty_38 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 0, i64 32, i64 0"   --->   Operation 177 'speclooptripcount' 'empty_38' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 178 [1/1] (0.00ns)   --->   "%br_ln32 = br i1 %icmp_ln32, void %.split.0_ifconv, void %._crit_edge.loopexit.0" [../src/matmul.cpp:32]   --->   Operation 178 'br' 'br_ln32' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 179 [1/1] (0.00ns)   --->   "%empty_39 = trunc i64 %j_0" [../src/matmul.cpp:32]   --->   Operation 179 'trunc' 'empty_39' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_15 : Operation 180 [1/1] (0.94ns)   --->   "%add_ln8 = add i11 %empty_39, i11 %empty_36" [../src/matmul.cpp:8]   --->   Operation 180 'add' 'add_ln8' <Predicate = (!icmp_ln32)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 181 [1/1] (0.00ns)   --->   "%zext_ln8 = zext i11 %add_ln8" [../src/matmul.cpp:8]   --->   Operation 181 'zext' 'zext_ln8' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_15 : Operation 182 [1/1] (0.00ns)   --->   "%arr_addr = getelementptr i32 %arr, i64 0, i64 %zext_ln8" [../src/matmul.cpp:8]   --->   Operation 182 'getelementptr' 'arr_addr' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_15 : Operation 183 [2/2] (1.35ns)   --->   "%arr_load = load i11 %arr_addr" [../src/matmul.cpp:8]   --->   Operation 183 'load' 'arr_load' <Predicate = (!icmp_ln32)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_15 : Operation 184 [1/1] (0.94ns)   --->   "%add_ln8_1 = add i11 %empty_39, i11 %empty_37" [../src/matmul.cpp:8]   --->   Operation 184 'add' 'add_ln8_1' <Predicate = (!icmp_ln32)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 185 [1/1] (0.00ns)   --->   "%zext_ln8_1 = zext i11 %add_ln8_1" [../src/matmul.cpp:8]   --->   Operation 185 'zext' 'zext_ln8_1' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_15 : Operation 186 [1/1] (0.00ns)   --->   "%arr_addr_1 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_1" [../src/matmul.cpp:8]   --->   Operation 186 'getelementptr' 'arr_addr_1' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_15 : Operation 187 [2/2] (1.35ns)   --->   "%arr_load_1 = load i11 %arr_addr_1" [../src/matmul.cpp:8]   --->   Operation 187 'load' 'arr_load_1' <Predicate = (!icmp_ln32)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>

State 16 <SV = 15> <Delay = 4.70>
ST_16 : Operation 188 [1/2] (1.35ns)   --->   "%arr_load = load i11 %arr_addr" [../src/matmul.cpp:8]   --->   Operation 188 'load' 'arr_load' <Predicate = (!icmp_ln32)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_16 : Operation 189 [1/2] (1.35ns)   --->   "%arr_load_1 = load i11 %arr_addr_1" [../src/matmul.cpp:8]   --->   Operation 189 'load' 'arr_load_1' <Predicate = (!icmp_ln32)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_16 : Operation 190 [1/1] (0.00ns)   --->   "%or_ln34 = or i11 %empty_39, i11 1" [../src/matmul.cpp:34]   --->   Operation 190 'or' 'or_ln34' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_16 : Operation 191 [1/1] (0.94ns)   --->   "%add_ln8_2 = add i11 %or_ln34, i11 %empty_36" [../src/matmul.cpp:8]   --->   Operation 191 'add' 'add_ln8_2' <Predicate = (!icmp_ln32)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 192 [1/1] (0.00ns)   --->   "%zext_ln8_2 = zext i11 %add_ln8_2" [../src/matmul.cpp:8]   --->   Operation 192 'zext' 'zext_ln8_2' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_16 : Operation 193 [1/1] (0.00ns)   --->   "%arr_addr_2 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_2" [../src/matmul.cpp:8]   --->   Operation 193 'getelementptr' 'arr_addr_2' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_16 : Operation 194 [2/2] (1.35ns)   --->   "%arr_load_2 = load i11 %arr_addr_2" [../src/matmul.cpp:8]   --->   Operation 194 'load' 'arr_load_2' <Predicate = (!icmp_ln32)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_16 : Operation 195 [1/1] (0.94ns)   --->   "%add_ln8_3 = add i11 %or_ln34, i11 %empty_37" [../src/matmul.cpp:8]   --->   Operation 195 'add' 'add_ln8_3' <Predicate = (!icmp_ln32)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 196 [1/1] (0.00ns)   --->   "%zext_ln8_3 = zext i11 %add_ln8_3" [../src/matmul.cpp:8]   --->   Operation 196 'zext' 'zext_ln8_3' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_16 : Operation 197 [1/1] (0.00ns)   --->   "%arr_addr_3 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_3" [../src/matmul.cpp:8]   --->   Operation 197 'getelementptr' 'arr_addr_3' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_16 : Operation 198 [2/2] (1.35ns)   --->   "%arr_load_3 = load i11 %arr_addr_3" [../src/matmul.cpp:8]   --->   Operation 198 'load' 'arr_load_3' <Predicate = (!icmp_ln32)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_16 : Operation 199 [2/2] (3.34ns)   --->   "%tmp_1036 = fcmp_ogt  i32 %arr_load, i32 %arr_load_1" [../src/matmul.cpp:13]   --->   Operation 199 'fcmp' 'tmp_1036' <Predicate = (!icmp_ln32)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 16> <Delay = 4.70>
ST_17 : Operation 200 [1/1] (1.47ns)   --->   "%add_ln32 = add i64 %j_0, i64 2" [../src/matmul.cpp:32]   --->   Operation 200 'add' 'add_ln32' <Predicate = (!icmp_ln32)> <Delay = 1.47> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 201 [1/2] (1.35ns)   --->   "%arr_load_2 = load i11 %arr_addr_2" [../src/matmul.cpp:8]   --->   Operation 201 'load' 'arr_load_2' <Predicate = (!icmp_ln32)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_17 : Operation 202 [1/2] (1.35ns)   --->   "%arr_load_3 = load i11 %arr_addr_3" [../src/matmul.cpp:8]   --->   Operation 202 'load' 'arr_load_3' <Predicate = (!icmp_ln32)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_17 : Operation 203 [1/1] (0.00ns)   --->   "%bitcast_ln13 = bitcast i32 %arr_load" [../src/matmul.cpp:13]   --->   Operation 203 'bitcast' 'bitcast_ln13' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_17 : Operation 204 [1/1] (0.00ns)   --->   "%tmp_s = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln13, i32 23, i32 30" [../src/matmul.cpp:13]   --->   Operation 204 'partselect' 'tmp_s' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_17 : Operation 205 [1/1] (0.00ns)   --->   "%trunc_ln13 = trunc i32 %bitcast_ln13" [../src/matmul.cpp:13]   --->   Operation 205 'trunc' 'trunc_ln13' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_17 : Operation 206 [1/1] (0.85ns)   --->   "%icmp_ln13 = icmp_ne  i8 %tmp_s, i8 255" [../src/matmul.cpp:13]   --->   Operation 206 'icmp' 'icmp_ln13' <Predicate = (!icmp_ln32)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 207 [1/1] (0.97ns)   --->   "%icmp_ln13_1 = icmp_eq  i23 %trunc_ln13, i23 0" [../src/matmul.cpp:13]   --->   Operation 207 'icmp' 'icmp_ln13_1' <Predicate = (!icmp_ln32)> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 208 [1/1] (0.33ns)   --->   "%or_ln13 = or i1 %icmp_ln13_1, i1 %icmp_ln13" [../src/matmul.cpp:13]   --->   Operation 208 'or' 'or_ln13' <Predicate = (!icmp_ln32)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 209 [1/2] (3.34ns)   --->   "%tmp_1036 = fcmp_ogt  i32 %arr_load, i32 %arr_load_1" [../src/matmul.cpp:13]   --->   Operation 209 'fcmp' 'tmp_1036' <Predicate = (!icmp_ln32)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 210 [2/2] (3.34ns)   --->   "%tmp_1038 = fcmp_ogt  i32 %arr_load, i32 %arr_load_2" [../src/matmul.cpp:13]   --->   Operation 210 'fcmp' 'tmp_1038' <Predicate = (!icmp_ln32)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 211 [2/2] (3.34ns)   --->   "%tmp_1040 = fcmp_ogt  i32 %arr_load, i32 %arr_load_3" [../src/matmul.cpp:13]   --->   Operation 211 'fcmp' 'tmp_1040' <Predicate = (!icmp_ln32)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 17> <Delay = 4.01>
ST_18 : Operation 212 [1/1] (0.00ns)   --->   "%bitcast_ln13_1 = bitcast i32 %arr_load_1" [../src/matmul.cpp:13]   --->   Operation 212 'bitcast' 'bitcast_ln13_1' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_18 : Operation 213 [1/1] (0.00ns)   --->   "%tmp_1035 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln13_1, i32 23, i32 30" [../src/matmul.cpp:13]   --->   Operation 213 'partselect' 'tmp_1035' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_18 : Operation 214 [1/1] (0.00ns)   --->   "%trunc_ln13_1 = trunc i32 %bitcast_ln13_1" [../src/matmul.cpp:13]   --->   Operation 214 'trunc' 'trunc_ln13_1' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_18 : Operation 215 [1/1] (0.85ns)   --->   "%icmp_ln13_2 = icmp_ne  i8 %tmp_1035, i8 255" [../src/matmul.cpp:13]   --->   Operation 215 'icmp' 'icmp_ln13_2' <Predicate = (!icmp_ln32)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 216 [1/1] (0.97ns)   --->   "%icmp_ln13_3 = icmp_eq  i23 %trunc_ln13_1, i23 0" [../src/matmul.cpp:13]   --->   Operation 216 'icmp' 'icmp_ln13_3' <Predicate = (!icmp_ln32)> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 217 [1/1] (0.33ns)   --->   "%or_ln13_1 = or i1 %icmp_ln13_3, i1 %icmp_ln13_2" [../src/matmul.cpp:13]   --->   Operation 217 'or' 'or_ln13_1' <Predicate = (!icmp_ln32)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 218 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_1)   --->   "%and_ln13 = and i1 %or_ln13, i1 %or_ln13_1" [../src/matmul.cpp:13]   --->   Operation 218 'and' 'and_ln13' <Predicate = (!icmp_ln32)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 219 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_1)   --->   "%and_ln13_2 = and i1 %and_ln13, i1 %tmp_1036" [../src/matmul.cpp:13]   --->   Operation 219 'and' 'and_ln13_2' <Predicate = (!icmp_ln32)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 220 [1/1] (0.00ns)   --->   "%bitcast_ln13_2 = bitcast i32 %arr_load_2" [../src/matmul.cpp:13]   --->   Operation 220 'bitcast' 'bitcast_ln13_2' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_18 : Operation 221 [1/1] (0.00ns)   --->   "%tmp_1037 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln13_2, i32 23, i32 30" [../src/matmul.cpp:13]   --->   Operation 221 'partselect' 'tmp_1037' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_18 : Operation 222 [1/1] (0.00ns)   --->   "%trunc_ln13_2 = trunc i32 %bitcast_ln13_2" [../src/matmul.cpp:13]   --->   Operation 222 'trunc' 'trunc_ln13_2' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_18 : Operation 223 [1/1] (0.85ns)   --->   "%icmp_ln13_4 = icmp_ne  i8 %tmp_1037, i8 255" [../src/matmul.cpp:13]   --->   Operation 223 'icmp' 'icmp_ln13_4' <Predicate = (!icmp_ln32)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 224 [1/1] (0.97ns)   --->   "%icmp_ln13_5 = icmp_eq  i23 %trunc_ln13_2, i23 0" [../src/matmul.cpp:13]   --->   Operation 224 'icmp' 'icmp_ln13_5' <Predicate = (!icmp_ln32)> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 225 [1/1] (0.33ns)   --->   "%or_ln13_2 = or i1 %icmp_ln13_5, i1 %icmp_ln13_4" [../src/matmul.cpp:13]   --->   Operation 225 'or' 'or_ln13_2' <Predicate = (!icmp_ln32)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 226 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_7)   --->   "%and_ln13_3 = and i1 %or_ln13, i1 %or_ln13_2" [../src/matmul.cpp:13]   --->   Operation 226 'and' 'and_ln13_3' <Predicate = (!icmp_ln32)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 227 [1/2] (3.34ns)   --->   "%tmp_1038 = fcmp_ogt  i32 %arr_load, i32 %arr_load_2" [../src/matmul.cpp:13]   --->   Operation 227 'fcmp' 'tmp_1038' <Predicate = (!icmp_ln32)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 228 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_7)   --->   "%and_ln13_4 = and i1 %and_ln13_3, i1 %tmp_1038" [../src/matmul.cpp:13]   --->   Operation 228 'and' 'and_ln13_4' <Predicate = (!icmp_ln32)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 229 [1/1] (0.00ns)   --->   "%bitcast_ln13_3 = bitcast i32 %arr_load_3" [../src/matmul.cpp:13]   --->   Operation 229 'bitcast' 'bitcast_ln13_3' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_18 : Operation 230 [1/1] (0.00ns)   --->   "%tmp_1039 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln13_3, i32 23, i32 30" [../src/matmul.cpp:13]   --->   Operation 230 'partselect' 'tmp_1039' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_18 : Operation 231 [1/1] (0.00ns)   --->   "%trunc_ln13_3 = trunc i32 %bitcast_ln13_3" [../src/matmul.cpp:13]   --->   Operation 231 'trunc' 'trunc_ln13_3' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_18 : Operation 232 [1/1] (0.85ns)   --->   "%icmp_ln13_6 = icmp_ne  i8 %tmp_1039, i8 255" [../src/matmul.cpp:13]   --->   Operation 232 'icmp' 'icmp_ln13_6' <Predicate = (!icmp_ln32)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 233 [1/1] (0.97ns)   --->   "%icmp_ln13_7 = icmp_eq  i23 %trunc_ln13_3, i23 0" [../src/matmul.cpp:13]   --->   Operation 233 'icmp' 'icmp_ln13_7' <Predicate = (!icmp_ln32)> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 234 [1/1] (0.33ns)   --->   "%or_ln13_3 = or i1 %icmp_ln13_7, i1 %icmp_ln13_6" [../src/matmul.cpp:13]   --->   Operation 234 'or' 'or_ln13_3' <Predicate = (!icmp_ln32)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 235 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_7)   --->   "%and_ln13_5 = and i1 %or_ln13, i1 %or_ln13_3" [../src/matmul.cpp:13]   --->   Operation 235 'and' 'and_ln13_5' <Predicate = (!icmp_ln32)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 236 [1/2] (3.34ns)   --->   "%tmp_1040 = fcmp_ogt  i32 %arr_load, i32 %arr_load_3" [../src/matmul.cpp:13]   --->   Operation 236 'fcmp' 'tmp_1040' <Predicate = (!icmp_ln32)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 237 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_7)   --->   "%and_ln13_6 = and i1 %and_ln13_5, i1 %tmp_1040" [../src/matmul.cpp:13]   --->   Operation 237 'and' 'and_ln13_6' <Predicate = (!icmp_ln32)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 238 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln13_7 = and i1 %and_ln13_4, i1 %and_ln13_6" [../src/matmul.cpp:13]   --->   Operation 238 'and' 'and_ln13_7' <Predicate = (!icmp_ln32)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 239 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln13_1 = and i1 %and_ln13_7, i1 %and_ln13_2" [../src/matmul.cpp:13]   --->   Operation 239 'and' 'and_ln13_1' <Predicate = (!icmp_ln32)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 240 [2/2] (3.34ns)   --->   "%tmp_1041 = fcmp_ogt  i32 %arr_load_1, i32 %arr_load_2" [../src/matmul.cpp:16]   --->   Operation 240 'fcmp' 'tmp_1041' <Predicate = (!icmp_ln32)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 241 [2/2] (3.34ns)   --->   "%tmp_1042 = fcmp_ogt  i32 %arr_load_1, i32 %arr_load_3" [../src/matmul.cpp:16]   --->   Operation 241 'fcmp' 'tmp_1042' <Predicate = (!icmp_ln32)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 18> <Delay = 4.12>
ST_19 : Operation 242 [1/1] (0.00ns) (grouped into LUT with out node and_ln16)   --->   "%and_ln16_10 = and i1 %or_ln13_1, i1 %or_ln13_2" [../src/matmul.cpp:16]   --->   Operation 242 'and' 'and_ln16_10' <Predicate = (!icmp_ln32)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 243 [1/2] (3.34ns)   --->   "%tmp_1041 = fcmp_ogt  i32 %arr_load_1, i32 %arr_load_2" [../src/matmul.cpp:16]   --->   Operation 243 'fcmp' 'tmp_1041' <Predicate = (!icmp_ln32)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 244 [1/1] (0.00ns) (grouped into LUT with out node and_ln16)   --->   "%and_ln16_11 = and i1 %and_ln16_10, i1 %tmp_1041" [../src/matmul.cpp:16]   --->   Operation 244 'and' 'and_ln16_11' <Predicate = (!icmp_ln32)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 245 [1/1] (0.00ns) (grouped into LUT with out node and_ln16)   --->   "%and_ln16_12 = and i1 %or_ln13_1, i1 %or_ln13_3" [../src/matmul.cpp:16]   --->   Operation 245 'and' 'and_ln16_12' <Predicate = (!icmp_ln32)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 246 [1/2] (3.34ns)   --->   "%tmp_1042 = fcmp_ogt  i32 %arr_load_1, i32 %arr_load_3" [../src/matmul.cpp:16]   --->   Operation 246 'fcmp' 'tmp_1042' <Predicate = (!icmp_ln32)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 247 [1/1] (0.00ns) (grouped into LUT with out node and_ln16)   --->   "%and_ln16_13 = and i1 %and_ln16_12, i1 %tmp_1042" [../src/matmul.cpp:16]   --->   Operation 247 'and' 'and_ln16_13' <Predicate = (!icmp_ln32)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 248 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln16 = and i1 %and_ln16_11, i1 %and_ln16_13" [../src/matmul.cpp:16]   --->   Operation 248 'and' 'and_ln16' <Predicate = (!icmp_ln32)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 249 [2/2] (3.34ns)   --->   "%tmp_1043 = fcmp_ogt  i32 %arr_load_2, i32 %arr_load_3" [../src/matmul.cpp:19]   --->   Operation 249 'fcmp' 'tmp_1043' <Predicate = (!icmp_ln32)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 250 [1/1] (0.00ns) (grouped into LUT with out node select_ln16)   --->   "%select_ln13 = select i1 %and_ln13_1, i11 %add_ln8, i11 %add_ln8_3" [../src/matmul.cpp:13]   --->   Operation 250 'select' 'select_ln13' <Predicate = (!icmp_ln32)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_19 : Operation 251 [1/1] (0.00ns) (grouped into LUT with out node select_ln16)   --->   "%xor_ln13 = xor i1 %and_ln13_1, i1 1" [../src/matmul.cpp:13]   --->   Operation 251 'xor' 'xor_ln13' <Predicate = (!icmp_ln32)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 252 [1/1] (0.00ns) (grouped into LUT with out node select_ln16)   --->   "%and_ln16_14 = and i1 %and_ln16, i1 %xor_ln13" [../src/matmul.cpp:16]   --->   Operation 252 'and' 'and_ln16_14' <Predicate = (!icmp_ln32)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 253 [1/1] (0.45ns) (out node of the LUT)   --->   "%select_ln16 = select i1 %and_ln16_14, i11 %add_ln8_1, i11 %select_ln13" [../src/matmul.cpp:16]   --->   Operation 253 'select' 'select_ln16' <Predicate = (!icmp_ln32)> <Delay = 0.45> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 20 <SV = 19> <Delay = 5.48>
ST_20 : Operation 254 [1/1] (0.00ns) (grouped into LUT with out node and_ln19_2)   --->   "%and_ln19 = and i1 %or_ln13_2, i1 %or_ln13_3" [../src/matmul.cpp:19]   --->   Operation 254 'and' 'and_ln19' <Predicate = (!icmp_ln32)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 255 [1/2] (3.34ns)   --->   "%tmp_1043 = fcmp_ogt  i32 %arr_load_2, i32 %arr_load_3" [../src/matmul.cpp:19]   --->   Operation 255 'fcmp' 'tmp_1043' <Predicate = (!icmp_ln32)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 256 [1/1] (0.00ns) (grouped into LUT with out node and_ln19_2)   --->   "%and_ln19_1 = and i1 %and_ln19, i1 %tmp_1043" [../src/matmul.cpp:19]   --->   Operation 256 'and' 'and_ln19_1' <Predicate = (!icmp_ln32)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 257 [1/1] (0.00ns) (grouped into LUT with out node and_ln19_2)   --->   "%or_ln16 = or i1 %and_ln13_1, i1 %and_ln16" [../src/matmul.cpp:16]   --->   Operation 257 'or' 'or_ln16' <Predicate = (!icmp_ln32)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 258 [1/1] (0.00ns) (grouped into LUT with out node and_ln19_2)   --->   "%xor_ln16 = xor i1 %or_ln16, i1 1" [../src/matmul.cpp:16]   --->   Operation 258 'xor' 'xor_ln16' <Predicate = (!icmp_ln32)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 259 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln19_2 = and i1 %and_ln19_1, i1 %xor_ln16" [../src/matmul.cpp:19]   --->   Operation 259 'and' 'and_ln19_2' <Predicate = (!icmp_ln32)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 260 [1/1] (0.45ns) (out node of the LUT)   --->   "%select_ln19 = select i1 %and_ln19_2, i11 %add_ln8_2, i11 %select_ln16" [../src/matmul.cpp:19]   --->   Operation 260 'select' 'select_ln19' <Predicate = (!icmp_ln32)> <Delay = 0.45> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_20 : Operation 261 [1/1] (0.00ns)   --->   "%zext_ln8_40 = zext i11 %select_ln19" [../src/matmul.cpp:8]   --->   Operation 261 'zext' 'zext_ln8_40' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_20 : Operation 262 [1/1] (0.00ns)   --->   "%arr_addr_40 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_40" [../src/matmul.cpp:8]   --->   Operation 262 'getelementptr' 'arr_addr_40' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_20 : Operation 263 [2/2] (1.35ns)   --->   "%arr_load_40 = load i11 %arr_addr_40" [../src/matmul.cpp:19]   --->   Operation 263 'load' 'arr_load_40' <Predicate = (!icmp_ln32)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>

State 21 <SV = 20> <Delay = 2.70>
ST_21 : Operation 264 [1/1] (0.00ns)   --->   "%t_1_0_cast = zext i11 %t_1_0" [../src/matmul.cpp:34]   --->   Operation 264 'zext' 't_1_0_cast' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_21 : Operation 265 [1/1] (0.00ns)   --->   "%specloopname_ln28 = specloopname void @_ssdm_op_SpecLoopName, void @empty_0" [../src/matmul.cpp:28]   --->   Operation 265 'specloopname' 'specloopname_ln28' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_21 : Operation 266 [1/2] (1.35ns)   --->   "%arr_load_40 = load i11 %arr_addr_40" [../src/matmul.cpp:19]   --->   Operation 266 'load' 'arr_load_40' <Predicate = (!icmp_ln32)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_21 : Operation 267 [1/1] (0.94ns)   --->   "%add_ln34 = add i11 %t_1_0, i11 1" [../src/matmul.cpp:34]   --->   Operation 267 'add' 'add_ln34' <Predicate = (!icmp_ln32)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 268 [1/1] (0.00ns)   --->   "%out_addr = getelementptr i32 %out_r, i64 0, i64 %t_1_0_cast" [../src/matmul.cpp:34]   --->   Operation 268 'getelementptr' 'out_addr' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_21 : Operation 269 [1/1] (1.35ns)   --->   "%store_ln34 = store i32 %arr_load_40, i11 %out_addr" [../src/matmul.cpp:34]   --->   Operation 269 'store' 'store_ln34' <Predicate = (!icmp_ln32)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_21 : Operation 270 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 270 'br' 'br_ln0' <Predicate = (!icmp_ln32)> <Delay = 0.00>

State 22 <SV = 15> <Delay = 1.48>
ST_22 : Operation 271 [1/1] (1.20ns)   --->   "%add_ln29_2 = add i32 %zext_ln29_3, i32 %t_0" [../src/matmul.cpp:29]   --->   Operation 271 'add' 'add_ln29_2' <Predicate = true> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 272 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln29_1)   --->   "%or_ln29 = or i64 %i_0, i64 2" [../src/matmul.cpp:29]   --->   Operation 272 'or' 'or_ln29' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 273 [1/1] (0.00ns)   --->   "%or_ln29_1 = or i11 %trunc_ln29_1, i11 2" [../src/matmul.cpp:29]   --->   Operation 273 'or' 'or_ln29_1' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 274 [1/1] (1.48ns) (out node of the LUT)   --->   "%icmp_ln29_1 = icmp_slt  i64 %or_ln29, i64 %zext_ln29" [../src/matmul.cpp:29]   --->   Operation 274 'icmp' 'icmp_ln29_1' <Predicate = true> <Delay = 1.48> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 275 [1/1] (0.00ns)   --->   "%br_ln29 = br i1 %icmp_ln29_1, void %._crit_edge10, void %.split4.1" [../src/matmul.cpp:29]   --->   Operation 275 'br' 'br_ln29' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 276 [1/1] (0.00ns)   --->   "%empty_40 = or i11 %trunc_ln29_1, i11 3" [../src/matmul.cpp:29]   --->   Operation 276 'or' 'empty_40' <Predicate = (icmp_ln29_1)> <Delay = 0.00>
ST_22 : Operation 277 [4/4] (0.69ns) (root node of the DSP)   --->   "%empty_41 = mul i11 %or_ln29_1, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 277 'mul' 'empty_41' <Predicate = (icmp_ln29_1)> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_22 : Operation 278 [4/4] (0.69ns) (root node of the DSP)   --->   "%empty_42 = mul i11 %empty_40, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 278 'mul' 'empty_42' <Predicate = (icmp_ln29_1)> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 23 <SV = 16> <Delay = 0.69>
ST_23 : Operation 279 [3/4] (0.69ns) (root node of the DSP)   --->   "%empty_41 = mul i11 %or_ln29_1, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 279 'mul' 'empty_41' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 280 [3/4] (0.69ns) (root node of the DSP)   --->   "%empty_42 = mul i11 %empty_40, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 280 'mul' 'empty_42' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 24 <SV = 17> <Delay = 0.69>
ST_24 : Operation 281 [2/4] (0.69ns) (root node of the DSP)   --->   "%empty_41 = mul i11 %or_ln29_1, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 281 'mul' 'empty_41' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 282 [2/4] (0.69ns) (root node of the DSP)   --->   "%empty_42 = mul i11 %empty_40, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 282 'mul' 'empty_42' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 25 <SV = 18> <Delay = 0.94>
ST_25 : Operation 283 [1/4] (0.00ns) (root node of the DSP)   --->   "%empty_41 = mul i11 %or_ln29_1, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 283 'mul' 'empty_41' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 284 [1/4] (0.00ns) (root node of the DSP)   --->   "%empty_42 = mul i11 %empty_40, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 284 'mul' 'empty_42' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 285 [1/1] (0.94ns)   --->   "%add_ln32_10 = add i11 %zext_ln29_4, i11 %trunc_ln32" [../src/matmul.cpp:32]   --->   Operation 285 'add' 'add_ln32_10' <Predicate = true> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 286 [1/1] (0.48ns)   --->   "%br_ln32 = br void" [../src/matmul.cpp:32]   --->   Operation 286 'br' 'br_ln32' <Predicate = true> <Delay = 0.48>

State 26 <SV = 19> <Delay = 2.29>
ST_26 : Operation 287 [1/1] (0.00ns)   --->   "%t_1_1 = phi i11 %add_ln34_1, void %.split.1_ifconv, i11 %add_ln32_10, void %.split4.1" [../src/matmul.cpp:34]   --->   Operation 287 'phi' 't_1_1' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 288 [1/1] (0.00ns)   --->   "%j_1 = phi i64 %add_ln32_1, void %.split.1_ifconv, i64 0, void %.split4.1" [../src/matmul.cpp:32]   --->   Operation 288 'phi' 'j_1' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 289 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 289 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 290 [1/1] (1.48ns)   --->   "%icmp_ln32_1 = icmp_eq  i64 %j_1, i64 %zext_ln32" [../src/matmul.cpp:32]   --->   Operation 290 'icmp' 'icmp_ln32_1' <Predicate = true> <Delay = 1.48> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 291 [1/1] (0.00ns)   --->   "%empty_43 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 0, i64 32, i64 0"   --->   Operation 291 'speclooptripcount' 'empty_43' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 292 [1/1] (0.00ns)   --->   "%br_ln32 = br i1 %icmp_ln32_1, void %.split.1_ifconv, void %._crit_edge.loopexit.1" [../src/matmul.cpp:32]   --->   Operation 292 'br' 'br_ln32' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 293 [1/1] (0.00ns)   --->   "%empty_44 = trunc i64 %j_1" [../src/matmul.cpp:32]   --->   Operation 293 'trunc' 'empty_44' <Predicate = (!icmp_ln32_1)> <Delay = 0.00>
ST_26 : Operation 294 [1/1] (0.94ns)   --->   "%add_ln8_4 = add i11 %empty_44, i11 %empty_41" [../src/matmul.cpp:8]   --->   Operation 294 'add' 'add_ln8_4' <Predicate = (!icmp_ln32_1)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 295 [1/1] (0.00ns)   --->   "%zext_ln8_4 = zext i11 %add_ln8_4" [../src/matmul.cpp:8]   --->   Operation 295 'zext' 'zext_ln8_4' <Predicate = (!icmp_ln32_1)> <Delay = 0.00>
ST_26 : Operation 296 [1/1] (0.00ns)   --->   "%arr_addr_4 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_4" [../src/matmul.cpp:8]   --->   Operation 296 'getelementptr' 'arr_addr_4' <Predicate = (!icmp_ln32_1)> <Delay = 0.00>
ST_26 : Operation 297 [2/2] (1.35ns)   --->   "%arr_load_4 = load i11 %arr_addr_4" [../src/matmul.cpp:8]   --->   Operation 297 'load' 'arr_load_4' <Predicate = (!icmp_ln32_1)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_26 : Operation 298 [1/1] (0.94ns)   --->   "%add_ln8_5 = add i11 %empty_44, i11 %empty_42" [../src/matmul.cpp:8]   --->   Operation 298 'add' 'add_ln8_5' <Predicate = (!icmp_ln32_1)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 299 [1/1] (0.00ns)   --->   "%zext_ln8_5 = zext i11 %add_ln8_5" [../src/matmul.cpp:8]   --->   Operation 299 'zext' 'zext_ln8_5' <Predicate = (!icmp_ln32_1)> <Delay = 0.00>
ST_26 : Operation 300 [1/1] (0.00ns)   --->   "%arr_addr_5 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_5" [../src/matmul.cpp:8]   --->   Operation 300 'getelementptr' 'arr_addr_5' <Predicate = (!icmp_ln32_1)> <Delay = 0.00>
ST_26 : Operation 301 [2/2] (1.35ns)   --->   "%arr_load_5 = load i11 %arr_addr_5" [../src/matmul.cpp:8]   --->   Operation 301 'load' 'arr_load_5' <Predicate = (!icmp_ln32_1)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>

State 27 <SV = 20> <Delay = 4.70>
ST_27 : Operation 302 [1/2] (1.35ns)   --->   "%arr_load_4 = load i11 %arr_addr_4" [../src/matmul.cpp:8]   --->   Operation 302 'load' 'arr_load_4' <Predicate = (!icmp_ln32_1)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_27 : Operation 303 [1/2] (1.35ns)   --->   "%arr_load_5 = load i11 %arr_addr_5" [../src/matmul.cpp:8]   --->   Operation 303 'load' 'arr_load_5' <Predicate = (!icmp_ln32_1)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_27 : Operation 304 [1/1] (0.00ns)   --->   "%or_ln34_1 = or i11 %empty_44, i11 1" [../src/matmul.cpp:34]   --->   Operation 304 'or' 'or_ln34_1' <Predicate = (!icmp_ln32_1)> <Delay = 0.00>
ST_27 : Operation 305 [1/1] (0.94ns)   --->   "%add_ln8_6 = add i11 %or_ln34_1, i11 %empty_41" [../src/matmul.cpp:8]   --->   Operation 305 'add' 'add_ln8_6' <Predicate = (!icmp_ln32_1)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 306 [1/1] (0.00ns)   --->   "%zext_ln8_6 = zext i11 %add_ln8_6" [../src/matmul.cpp:8]   --->   Operation 306 'zext' 'zext_ln8_6' <Predicate = (!icmp_ln32_1)> <Delay = 0.00>
ST_27 : Operation 307 [1/1] (0.00ns)   --->   "%arr_addr_6 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_6" [../src/matmul.cpp:8]   --->   Operation 307 'getelementptr' 'arr_addr_6' <Predicate = (!icmp_ln32_1)> <Delay = 0.00>
ST_27 : Operation 308 [2/2] (1.35ns)   --->   "%arr_load_6 = load i11 %arr_addr_6" [../src/matmul.cpp:8]   --->   Operation 308 'load' 'arr_load_6' <Predicate = (!icmp_ln32_1)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_27 : Operation 309 [1/1] (0.94ns)   --->   "%add_ln8_7 = add i11 %or_ln34_1, i11 %empty_42" [../src/matmul.cpp:8]   --->   Operation 309 'add' 'add_ln8_7' <Predicate = (!icmp_ln32_1)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 310 [1/1] (0.00ns)   --->   "%zext_ln8_7 = zext i11 %add_ln8_7" [../src/matmul.cpp:8]   --->   Operation 310 'zext' 'zext_ln8_7' <Predicate = (!icmp_ln32_1)> <Delay = 0.00>
ST_27 : Operation 311 [1/1] (0.00ns)   --->   "%arr_addr_7 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_7" [../src/matmul.cpp:8]   --->   Operation 311 'getelementptr' 'arr_addr_7' <Predicate = (!icmp_ln32_1)> <Delay = 0.00>
ST_27 : Operation 312 [2/2] (1.35ns)   --->   "%arr_load_7 = load i11 %arr_addr_7" [../src/matmul.cpp:8]   --->   Operation 312 'load' 'arr_load_7' <Predicate = (!icmp_ln32_1)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_27 : Operation 313 [2/2] (3.34ns)   --->   "%tmp_1046 = fcmp_ogt  i32 %arr_load_4, i32 %arr_load_5" [../src/matmul.cpp:13]   --->   Operation 313 'fcmp' 'tmp_1046' <Predicate = (!icmp_ln32_1)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 28 <SV = 21> <Delay = 4.70>
ST_28 : Operation 314 [1/1] (1.47ns)   --->   "%add_ln32_1 = add i64 %j_1, i64 2" [../src/matmul.cpp:32]   --->   Operation 314 'add' 'add_ln32_1' <Predicate = (!icmp_ln32_1)> <Delay = 1.47> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 315 [1/2] (1.35ns)   --->   "%arr_load_6 = load i11 %arr_addr_6" [../src/matmul.cpp:8]   --->   Operation 315 'load' 'arr_load_6' <Predicate = (!icmp_ln32_1)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_28 : Operation 316 [1/2] (1.35ns)   --->   "%arr_load_7 = load i11 %arr_addr_7" [../src/matmul.cpp:8]   --->   Operation 316 'load' 'arr_load_7' <Predicate = (!icmp_ln32_1)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_28 : Operation 317 [1/1] (0.00ns)   --->   "%bitcast_ln13_4 = bitcast i32 %arr_load_4" [../src/matmul.cpp:13]   --->   Operation 317 'bitcast' 'bitcast_ln13_4' <Predicate = (!icmp_ln32_1)> <Delay = 0.00>
ST_28 : Operation 318 [1/1] (0.00ns)   --->   "%tmp_1044 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln13_4, i32 23, i32 30" [../src/matmul.cpp:13]   --->   Operation 318 'partselect' 'tmp_1044' <Predicate = (!icmp_ln32_1)> <Delay = 0.00>
ST_28 : Operation 319 [1/1] (0.00ns)   --->   "%trunc_ln13_4 = trunc i32 %bitcast_ln13_4" [../src/matmul.cpp:13]   --->   Operation 319 'trunc' 'trunc_ln13_4' <Predicate = (!icmp_ln32_1)> <Delay = 0.00>
ST_28 : Operation 320 [1/1] (0.85ns)   --->   "%icmp_ln13_8 = icmp_ne  i8 %tmp_1044, i8 255" [../src/matmul.cpp:13]   --->   Operation 320 'icmp' 'icmp_ln13_8' <Predicate = (!icmp_ln32_1)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 321 [1/1] (0.97ns)   --->   "%icmp_ln13_9 = icmp_eq  i23 %trunc_ln13_4, i23 0" [../src/matmul.cpp:13]   --->   Operation 321 'icmp' 'icmp_ln13_9' <Predicate = (!icmp_ln32_1)> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 322 [1/1] (0.33ns)   --->   "%or_ln13_4 = or i1 %icmp_ln13_9, i1 %icmp_ln13_8" [../src/matmul.cpp:13]   --->   Operation 322 'or' 'or_ln13_4' <Predicate = (!icmp_ln32_1)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 323 [1/2] (3.34ns)   --->   "%tmp_1046 = fcmp_ogt  i32 %arr_load_4, i32 %arr_load_5" [../src/matmul.cpp:13]   --->   Operation 323 'fcmp' 'tmp_1046' <Predicate = (!icmp_ln32_1)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 324 [2/2] (3.34ns)   --->   "%tmp_1048 = fcmp_ogt  i32 %arr_load_4, i32 %arr_load_6" [../src/matmul.cpp:13]   --->   Operation 324 'fcmp' 'tmp_1048' <Predicate = (!icmp_ln32_1)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 325 [2/2] (3.34ns)   --->   "%tmp_1050 = fcmp_ogt  i32 %arr_load_4, i32 %arr_load_7" [../src/matmul.cpp:13]   --->   Operation 325 'fcmp' 'tmp_1050' <Predicate = (!icmp_ln32_1)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 29 <SV = 22> <Delay = 4.01>
ST_29 : Operation 326 [1/1] (0.00ns)   --->   "%bitcast_ln13_5 = bitcast i32 %arr_load_5" [../src/matmul.cpp:13]   --->   Operation 326 'bitcast' 'bitcast_ln13_5' <Predicate = (!icmp_ln32_1)> <Delay = 0.00>
ST_29 : Operation 327 [1/1] (0.00ns)   --->   "%tmp_1045 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln13_5, i32 23, i32 30" [../src/matmul.cpp:13]   --->   Operation 327 'partselect' 'tmp_1045' <Predicate = (!icmp_ln32_1)> <Delay = 0.00>
ST_29 : Operation 328 [1/1] (0.00ns)   --->   "%trunc_ln13_5 = trunc i32 %bitcast_ln13_5" [../src/matmul.cpp:13]   --->   Operation 328 'trunc' 'trunc_ln13_5' <Predicate = (!icmp_ln32_1)> <Delay = 0.00>
ST_29 : Operation 329 [1/1] (0.85ns)   --->   "%icmp_ln13_10 = icmp_ne  i8 %tmp_1045, i8 255" [../src/matmul.cpp:13]   --->   Operation 329 'icmp' 'icmp_ln13_10' <Predicate = (!icmp_ln32_1)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 330 [1/1] (0.97ns)   --->   "%icmp_ln13_11 = icmp_eq  i23 %trunc_ln13_5, i23 0" [../src/matmul.cpp:13]   --->   Operation 330 'icmp' 'icmp_ln13_11' <Predicate = (!icmp_ln32_1)> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 331 [1/1] (0.33ns)   --->   "%or_ln13_5 = or i1 %icmp_ln13_11, i1 %icmp_ln13_10" [../src/matmul.cpp:13]   --->   Operation 331 'or' 'or_ln13_5' <Predicate = (!icmp_ln32_1)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 332 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_11)   --->   "%and_ln13_8 = and i1 %or_ln13_4, i1 %or_ln13_5" [../src/matmul.cpp:13]   --->   Operation 332 'and' 'and_ln13_8' <Predicate = (!icmp_ln32_1)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 333 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_11)   --->   "%and_ln13_9 = and i1 %and_ln13_8, i1 %tmp_1046" [../src/matmul.cpp:13]   --->   Operation 333 'and' 'and_ln13_9' <Predicate = (!icmp_ln32_1)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 334 [1/1] (0.00ns)   --->   "%bitcast_ln13_6 = bitcast i32 %arr_load_6" [../src/matmul.cpp:13]   --->   Operation 334 'bitcast' 'bitcast_ln13_6' <Predicate = (!icmp_ln32_1)> <Delay = 0.00>
ST_29 : Operation 335 [1/1] (0.00ns)   --->   "%tmp_1047 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln13_6, i32 23, i32 30" [../src/matmul.cpp:13]   --->   Operation 335 'partselect' 'tmp_1047' <Predicate = (!icmp_ln32_1)> <Delay = 0.00>
ST_29 : Operation 336 [1/1] (0.00ns)   --->   "%trunc_ln13_6 = trunc i32 %bitcast_ln13_6" [../src/matmul.cpp:13]   --->   Operation 336 'trunc' 'trunc_ln13_6' <Predicate = (!icmp_ln32_1)> <Delay = 0.00>
ST_29 : Operation 337 [1/1] (0.85ns)   --->   "%icmp_ln13_12 = icmp_ne  i8 %tmp_1047, i8 255" [../src/matmul.cpp:13]   --->   Operation 337 'icmp' 'icmp_ln13_12' <Predicate = (!icmp_ln32_1)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 338 [1/1] (0.97ns)   --->   "%icmp_ln13_13 = icmp_eq  i23 %trunc_ln13_6, i23 0" [../src/matmul.cpp:13]   --->   Operation 338 'icmp' 'icmp_ln13_13' <Predicate = (!icmp_ln32_1)> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 339 [1/1] (0.33ns)   --->   "%or_ln13_6 = or i1 %icmp_ln13_13, i1 %icmp_ln13_12" [../src/matmul.cpp:13]   --->   Operation 339 'or' 'or_ln13_6' <Predicate = (!icmp_ln32_1)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 340 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_23)   --->   "%and_ln13_10 = and i1 %or_ln13_4, i1 %or_ln13_6" [../src/matmul.cpp:13]   --->   Operation 340 'and' 'and_ln13_10' <Predicate = (!icmp_ln32_1)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 341 [1/2] (3.34ns)   --->   "%tmp_1048 = fcmp_ogt  i32 %arr_load_4, i32 %arr_load_6" [../src/matmul.cpp:13]   --->   Operation 341 'fcmp' 'tmp_1048' <Predicate = (!icmp_ln32_1)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 342 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_23)   --->   "%and_ln13_20 = and i1 %and_ln13_10, i1 %tmp_1048" [../src/matmul.cpp:13]   --->   Operation 342 'and' 'and_ln13_20' <Predicate = (!icmp_ln32_1)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 343 [1/1] (0.00ns)   --->   "%bitcast_ln13_7 = bitcast i32 %arr_load_7" [../src/matmul.cpp:13]   --->   Operation 343 'bitcast' 'bitcast_ln13_7' <Predicate = (!icmp_ln32_1)> <Delay = 0.00>
ST_29 : Operation 344 [1/1] (0.00ns)   --->   "%tmp_1049 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln13_7, i32 23, i32 30" [../src/matmul.cpp:13]   --->   Operation 344 'partselect' 'tmp_1049' <Predicate = (!icmp_ln32_1)> <Delay = 0.00>
ST_29 : Operation 345 [1/1] (0.00ns)   --->   "%trunc_ln13_7 = trunc i32 %bitcast_ln13_7" [../src/matmul.cpp:13]   --->   Operation 345 'trunc' 'trunc_ln13_7' <Predicate = (!icmp_ln32_1)> <Delay = 0.00>
ST_29 : Operation 346 [1/1] (0.85ns)   --->   "%icmp_ln13_14 = icmp_ne  i8 %tmp_1049, i8 255" [../src/matmul.cpp:13]   --->   Operation 346 'icmp' 'icmp_ln13_14' <Predicate = (!icmp_ln32_1)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 347 [1/1] (0.97ns)   --->   "%icmp_ln13_15 = icmp_eq  i23 %trunc_ln13_7, i23 0" [../src/matmul.cpp:13]   --->   Operation 347 'icmp' 'icmp_ln13_15' <Predicate = (!icmp_ln32_1)> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 348 [1/1] (0.33ns)   --->   "%or_ln13_7 = or i1 %icmp_ln13_15, i1 %icmp_ln13_14" [../src/matmul.cpp:13]   --->   Operation 348 'or' 'or_ln13_7' <Predicate = (!icmp_ln32_1)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 349 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_23)   --->   "%and_ln13_21 = and i1 %or_ln13_4, i1 %or_ln13_7" [../src/matmul.cpp:13]   --->   Operation 349 'and' 'and_ln13_21' <Predicate = (!icmp_ln32_1)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 350 [1/2] (3.34ns)   --->   "%tmp_1050 = fcmp_ogt  i32 %arr_load_4, i32 %arr_load_7" [../src/matmul.cpp:13]   --->   Operation 350 'fcmp' 'tmp_1050' <Predicate = (!icmp_ln32_1)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 351 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_23)   --->   "%and_ln13_22 = and i1 %and_ln13_21, i1 %tmp_1050" [../src/matmul.cpp:13]   --->   Operation 351 'and' 'and_ln13_22' <Predicate = (!icmp_ln32_1)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 352 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln13_23 = and i1 %and_ln13_20, i1 %and_ln13_22" [../src/matmul.cpp:13]   --->   Operation 352 'and' 'and_ln13_23' <Predicate = (!icmp_ln32_1)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 353 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln13_11 = and i1 %and_ln13_23, i1 %and_ln13_9" [../src/matmul.cpp:13]   --->   Operation 353 'and' 'and_ln13_11' <Predicate = (!icmp_ln32_1)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 354 [2/2] (3.34ns)   --->   "%tmp_1051 = fcmp_ogt  i32 %arr_load_5, i32 %arr_load_6" [../src/matmul.cpp:16]   --->   Operation 354 'fcmp' 'tmp_1051' <Predicate = (!icmp_ln32_1)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 355 [2/2] (3.34ns)   --->   "%tmp_1052 = fcmp_ogt  i32 %arr_load_5, i32 %arr_load_7" [../src/matmul.cpp:16]   --->   Operation 355 'fcmp' 'tmp_1052' <Predicate = (!icmp_ln32_1)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 30 <SV = 23> <Delay = 4.12>
ST_30 : Operation 356 [1/1] (0.00ns) (grouped into LUT with out node and_ln16_1)   --->   "%and_ln16_15 = and i1 %or_ln13_5, i1 %or_ln13_6" [../src/matmul.cpp:16]   --->   Operation 356 'and' 'and_ln16_15' <Predicate = (!icmp_ln32_1)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 357 [1/2] (3.34ns)   --->   "%tmp_1051 = fcmp_ogt  i32 %arr_load_5, i32 %arr_load_6" [../src/matmul.cpp:16]   --->   Operation 357 'fcmp' 'tmp_1051' <Predicate = (!icmp_ln32_1)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 358 [1/1] (0.00ns) (grouped into LUT with out node and_ln16_1)   --->   "%and_ln16_16 = and i1 %and_ln16_15, i1 %tmp_1051" [../src/matmul.cpp:16]   --->   Operation 358 'and' 'and_ln16_16' <Predicate = (!icmp_ln32_1)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 359 [1/1] (0.00ns) (grouped into LUT with out node and_ln16_1)   --->   "%and_ln16_17 = and i1 %or_ln13_5, i1 %or_ln13_7" [../src/matmul.cpp:16]   --->   Operation 359 'and' 'and_ln16_17' <Predicate = (!icmp_ln32_1)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 360 [1/2] (3.34ns)   --->   "%tmp_1052 = fcmp_ogt  i32 %arr_load_5, i32 %arr_load_7" [../src/matmul.cpp:16]   --->   Operation 360 'fcmp' 'tmp_1052' <Predicate = (!icmp_ln32_1)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 361 [1/1] (0.00ns) (grouped into LUT with out node and_ln16_1)   --->   "%and_ln16_18 = and i1 %and_ln16_17, i1 %tmp_1052" [../src/matmul.cpp:16]   --->   Operation 361 'and' 'and_ln16_18' <Predicate = (!icmp_ln32_1)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 362 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln16_1 = and i1 %and_ln16_16, i1 %and_ln16_18" [../src/matmul.cpp:16]   --->   Operation 362 'and' 'and_ln16_1' <Predicate = (!icmp_ln32_1)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 363 [2/2] (3.34ns)   --->   "%tmp_1053 = fcmp_ogt  i32 %arr_load_6, i32 %arr_load_7" [../src/matmul.cpp:19]   --->   Operation 363 'fcmp' 'tmp_1053' <Predicate = (!icmp_ln32_1)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 364 [1/1] (0.00ns) (grouped into LUT with out node select_ln16_1)   --->   "%select_ln13_1 = select i1 %and_ln13_11, i11 %add_ln8_4, i11 %add_ln8_7" [../src/matmul.cpp:13]   --->   Operation 364 'select' 'select_ln13_1' <Predicate = (!icmp_ln32_1)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_30 : Operation 365 [1/1] (0.00ns) (grouped into LUT with out node select_ln16_1)   --->   "%xor_ln13_1 = xor i1 %and_ln13_11, i1 1" [../src/matmul.cpp:13]   --->   Operation 365 'xor' 'xor_ln13_1' <Predicate = (!icmp_ln32_1)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 366 [1/1] (0.00ns) (grouped into LUT with out node select_ln16_1)   --->   "%and_ln16_19 = and i1 %and_ln16_1, i1 %xor_ln13_1" [../src/matmul.cpp:16]   --->   Operation 366 'and' 'and_ln16_19' <Predicate = (!icmp_ln32_1)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 367 [1/1] (0.45ns) (out node of the LUT)   --->   "%select_ln16_1 = select i1 %and_ln16_19, i11 %add_ln8_5, i11 %select_ln13_1" [../src/matmul.cpp:16]   --->   Operation 367 'select' 'select_ln16_1' <Predicate = (!icmp_ln32_1)> <Delay = 0.45> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 31 <SV = 24> <Delay = 5.48>
ST_31 : Operation 368 [1/1] (0.00ns) (grouped into LUT with out node and_ln19_5)   --->   "%and_ln19_3 = and i1 %or_ln13_6, i1 %or_ln13_7" [../src/matmul.cpp:19]   --->   Operation 368 'and' 'and_ln19_3' <Predicate = (!icmp_ln32_1)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 369 [1/2] (3.34ns)   --->   "%tmp_1053 = fcmp_ogt  i32 %arr_load_6, i32 %arr_load_7" [../src/matmul.cpp:19]   --->   Operation 369 'fcmp' 'tmp_1053' <Predicate = (!icmp_ln32_1)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 370 [1/1] (0.00ns) (grouped into LUT with out node and_ln19_5)   --->   "%and_ln19_4 = and i1 %and_ln19_3, i1 %tmp_1053" [../src/matmul.cpp:19]   --->   Operation 370 'and' 'and_ln19_4' <Predicate = (!icmp_ln32_1)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 371 [1/1] (0.00ns) (grouped into LUT with out node and_ln19_5)   --->   "%or_ln16_1 = or i1 %and_ln13_11, i1 %and_ln16_1" [../src/matmul.cpp:16]   --->   Operation 371 'or' 'or_ln16_1' <Predicate = (!icmp_ln32_1)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 372 [1/1] (0.00ns) (grouped into LUT with out node and_ln19_5)   --->   "%xor_ln16_1 = xor i1 %or_ln16_1, i1 1" [../src/matmul.cpp:16]   --->   Operation 372 'xor' 'xor_ln16_1' <Predicate = (!icmp_ln32_1)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 373 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln19_5 = and i1 %and_ln19_4, i1 %xor_ln16_1" [../src/matmul.cpp:19]   --->   Operation 373 'and' 'and_ln19_5' <Predicate = (!icmp_ln32_1)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 374 [1/1] (0.45ns) (out node of the LUT)   --->   "%select_ln19_1 = select i1 %and_ln19_5, i11 %add_ln8_6, i11 %select_ln16_1" [../src/matmul.cpp:19]   --->   Operation 374 'select' 'select_ln19_1' <Predicate = (!icmp_ln32_1)> <Delay = 0.45> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_31 : Operation 375 [1/1] (0.00ns)   --->   "%zext_ln8_41 = zext i11 %select_ln19_1" [../src/matmul.cpp:8]   --->   Operation 375 'zext' 'zext_ln8_41' <Predicate = (!icmp_ln32_1)> <Delay = 0.00>
ST_31 : Operation 376 [1/1] (0.00ns)   --->   "%arr_addr_41 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_41" [../src/matmul.cpp:8]   --->   Operation 376 'getelementptr' 'arr_addr_41' <Predicate = (!icmp_ln32_1)> <Delay = 0.00>
ST_31 : Operation 377 [2/2] (1.35ns)   --->   "%arr_load_41 = load i11 %arr_addr_41" [../src/matmul.cpp:19]   --->   Operation 377 'load' 'arr_load_41' <Predicate = (!icmp_ln32_1)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>

State 32 <SV = 25> <Delay = 2.70>
ST_32 : Operation 378 [1/1] (0.00ns)   --->   "%t_1_1_cast = zext i11 %t_1_1" [../src/matmul.cpp:34]   --->   Operation 378 'zext' 't_1_1_cast' <Predicate = (!icmp_ln32_1)> <Delay = 0.00>
ST_32 : Operation 379 [1/1] (0.00ns)   --->   "%specloopname_ln28 = specloopname void @_ssdm_op_SpecLoopName, void @empty_0" [../src/matmul.cpp:28]   --->   Operation 379 'specloopname' 'specloopname_ln28' <Predicate = (!icmp_ln32_1)> <Delay = 0.00>
ST_32 : Operation 380 [1/2] (1.35ns)   --->   "%arr_load_41 = load i11 %arr_addr_41" [../src/matmul.cpp:19]   --->   Operation 380 'load' 'arr_load_41' <Predicate = (!icmp_ln32_1)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_32 : Operation 381 [1/1] (0.94ns)   --->   "%add_ln34_1 = add i11 %t_1_1, i11 1" [../src/matmul.cpp:34]   --->   Operation 381 'add' 'add_ln34_1' <Predicate = (!icmp_ln32_1)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 382 [1/1] (0.00ns)   --->   "%out_addr_1 = getelementptr i32 %out_r, i64 0, i64 %t_1_1_cast" [../src/matmul.cpp:34]   --->   Operation 382 'getelementptr' 'out_addr_1' <Predicate = (!icmp_ln32_1)> <Delay = 0.00>
ST_32 : Operation 383 [1/1] (1.35ns)   --->   "%store_ln34 = store i32 %arr_load_41, i11 %out_addr_1" [../src/matmul.cpp:34]   --->   Operation 383 'store' 'store_ln34' <Predicate = (!icmp_ln32_1)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_32 : Operation 384 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 384 'br' 'br_ln0' <Predicate = (!icmp_ln32_1)> <Delay = 0.00>

State 33 <SV = 20> <Delay = 2.95>
ST_33 : Operation 385 [1/1] (0.00ns)   --->   "%trunc_ln29_2 = trunc i32 %add_ln29_2" [../src/matmul.cpp:29]   --->   Operation 385 'trunc' 'trunc_ln29_2' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 386 [1/1] (1.20ns)   --->   "%add_ln29_3 = add i32 %zext_ln29_3, i32 %add_ln29_2" [../src/matmul.cpp:29]   --->   Operation 386 'add' 'add_ln29_3' <Predicate = true> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 387 [1/1] (1.47ns)   --->   "%add_ln29_4 = add i64 %i_0, i64 4" [../src/matmul.cpp:29]   --->   Operation 387 'add' 'add_ln29_4' <Predicate = true> <Delay = 1.47> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 388 [1/1] (0.94ns)   --->   "%add_ln29_5 = add i11 %trunc_ln29_1, i11 4" [../src/matmul.cpp:29]   --->   Operation 388 'add' 'add_ln29_5' <Predicate = true> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 389 [1/1] (1.48ns)   --->   "%icmp_ln29_2 = icmp_slt  i64 %add_ln29_4, i64 %zext_ln29" [../src/matmul.cpp:29]   --->   Operation 389 'icmp' 'icmp_ln29_2' <Predicate = true> <Delay = 1.48> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 390 [1/1] (0.00ns)   --->   "%br_ln29 = br i1 %icmp_ln29_2, void %._crit_edge10, void %.split4.2" [../src/matmul.cpp:29]   --->   Operation 390 'br' 'br_ln29' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 391 [1/1] (0.00ns)   --->   "%empty_45 = or i11 %add_ln29_5, i11 1" [../src/matmul.cpp:29]   --->   Operation 391 'or' 'empty_45' <Predicate = (icmp_ln29_2)> <Delay = 0.00>
ST_33 : Operation 392 [4/4] (0.69ns) (root node of the DSP)   --->   "%empty_46 = mul i11 %add_ln29_5, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 392 'mul' 'empty_46' <Predicate = (icmp_ln29_2)> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_33 : Operation 393 [4/4] (0.69ns) (root node of the DSP)   --->   "%empty_47 = mul i11 %empty_45, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 393 'mul' 'empty_47' <Predicate = (icmp_ln29_2)> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 34 <SV = 21> <Delay = 0.69>
ST_34 : Operation 394 [3/4] (0.69ns) (root node of the DSP)   --->   "%empty_46 = mul i11 %add_ln29_5, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 394 'mul' 'empty_46' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_34 : Operation 395 [3/4] (0.69ns) (root node of the DSP)   --->   "%empty_47 = mul i11 %empty_45, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 395 'mul' 'empty_47' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 35 <SV = 22> <Delay = 0.69>
ST_35 : Operation 396 [2/4] (0.69ns) (root node of the DSP)   --->   "%empty_46 = mul i11 %add_ln29_5, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 396 'mul' 'empty_46' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_35 : Operation 397 [2/4] (0.69ns) (root node of the DSP)   --->   "%empty_47 = mul i11 %empty_45, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 397 'mul' 'empty_47' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 36 <SV = 23> <Delay = 0.94>
ST_36 : Operation 398 [1/4] (0.00ns) (root node of the DSP)   --->   "%empty_46 = mul i11 %add_ln29_5, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 398 'mul' 'empty_46' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_36 : Operation 399 [1/4] (0.00ns) (root node of the DSP)   --->   "%empty_47 = mul i11 %empty_45, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 399 'mul' 'empty_47' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_36 : Operation 400 [1/1] (0.94ns)   --->   "%add_ln32_11 = add i11 %zext_ln29_4, i11 %trunc_ln29_2" [../src/matmul.cpp:32]   --->   Operation 400 'add' 'add_ln32_11' <Predicate = true> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 401 [1/1] (0.48ns)   --->   "%br_ln32 = br void" [../src/matmul.cpp:32]   --->   Operation 401 'br' 'br_ln32' <Predicate = true> <Delay = 0.48>

State 37 <SV = 24> <Delay = 2.29>
ST_37 : Operation 402 [1/1] (0.00ns)   --->   "%t_1_2 = phi i11 %add_ln34_2, void %.split.2_ifconv, i11 %add_ln32_11, void %.split4.2" [../src/matmul.cpp:34]   --->   Operation 402 'phi' 't_1_2' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 403 [1/1] (0.00ns)   --->   "%j_2 = phi i64 %add_ln32_2, void %.split.2_ifconv, i64 0, void %.split4.2" [../src/matmul.cpp:32]   --->   Operation 403 'phi' 'j_2' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 404 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 404 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 405 [1/1] (1.48ns)   --->   "%icmp_ln32_2 = icmp_eq  i64 %j_2, i64 %zext_ln32" [../src/matmul.cpp:32]   --->   Operation 405 'icmp' 'icmp_ln32_2' <Predicate = true> <Delay = 1.48> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 406 [1/1] (0.00ns)   --->   "%empty_48 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 0, i64 32, i64 0"   --->   Operation 406 'speclooptripcount' 'empty_48' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 407 [1/1] (0.00ns)   --->   "%br_ln32 = br i1 %icmp_ln32_2, void %.split.2_ifconv, void %._crit_edge.loopexit.2" [../src/matmul.cpp:32]   --->   Operation 407 'br' 'br_ln32' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 408 [1/1] (0.00ns)   --->   "%empty_49 = trunc i64 %j_2" [../src/matmul.cpp:32]   --->   Operation 408 'trunc' 'empty_49' <Predicate = (!icmp_ln32_2)> <Delay = 0.00>
ST_37 : Operation 409 [1/1] (0.94ns)   --->   "%add_ln8_8 = add i11 %empty_49, i11 %empty_46" [../src/matmul.cpp:8]   --->   Operation 409 'add' 'add_ln8_8' <Predicate = (!icmp_ln32_2)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 410 [1/1] (0.00ns)   --->   "%zext_ln8_8 = zext i11 %add_ln8_8" [../src/matmul.cpp:8]   --->   Operation 410 'zext' 'zext_ln8_8' <Predicate = (!icmp_ln32_2)> <Delay = 0.00>
ST_37 : Operation 411 [1/1] (0.00ns)   --->   "%arr_addr_8 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_8" [../src/matmul.cpp:8]   --->   Operation 411 'getelementptr' 'arr_addr_8' <Predicate = (!icmp_ln32_2)> <Delay = 0.00>
ST_37 : Operation 412 [2/2] (1.35ns)   --->   "%arr_load_8 = load i11 %arr_addr_8" [../src/matmul.cpp:8]   --->   Operation 412 'load' 'arr_load_8' <Predicate = (!icmp_ln32_2)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_37 : Operation 413 [1/1] (0.94ns)   --->   "%add_ln8_9 = add i11 %empty_49, i11 %empty_47" [../src/matmul.cpp:8]   --->   Operation 413 'add' 'add_ln8_9' <Predicate = (!icmp_ln32_2)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 414 [1/1] (0.00ns)   --->   "%zext_ln8_9 = zext i11 %add_ln8_9" [../src/matmul.cpp:8]   --->   Operation 414 'zext' 'zext_ln8_9' <Predicate = (!icmp_ln32_2)> <Delay = 0.00>
ST_37 : Operation 415 [1/1] (0.00ns)   --->   "%arr_addr_9 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_9" [../src/matmul.cpp:8]   --->   Operation 415 'getelementptr' 'arr_addr_9' <Predicate = (!icmp_ln32_2)> <Delay = 0.00>
ST_37 : Operation 416 [2/2] (1.35ns)   --->   "%arr_load_9 = load i11 %arr_addr_9" [../src/matmul.cpp:8]   --->   Operation 416 'load' 'arr_load_9' <Predicate = (!icmp_ln32_2)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>

State 38 <SV = 25> <Delay = 4.70>
ST_38 : Operation 417 [1/2] (1.35ns)   --->   "%arr_load_8 = load i11 %arr_addr_8" [../src/matmul.cpp:8]   --->   Operation 417 'load' 'arr_load_8' <Predicate = (!icmp_ln32_2)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_38 : Operation 418 [1/2] (1.35ns)   --->   "%arr_load_9 = load i11 %arr_addr_9" [../src/matmul.cpp:8]   --->   Operation 418 'load' 'arr_load_9' <Predicate = (!icmp_ln32_2)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_38 : Operation 419 [1/1] (0.00ns)   --->   "%or_ln34_2 = or i11 %empty_49, i11 1" [../src/matmul.cpp:34]   --->   Operation 419 'or' 'or_ln34_2' <Predicate = (!icmp_ln32_2)> <Delay = 0.00>
ST_38 : Operation 420 [1/1] (0.94ns)   --->   "%add_ln8_10 = add i11 %or_ln34_2, i11 %empty_46" [../src/matmul.cpp:8]   --->   Operation 420 'add' 'add_ln8_10' <Predicate = (!icmp_ln32_2)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 421 [1/1] (0.00ns)   --->   "%zext_ln8_10 = zext i11 %add_ln8_10" [../src/matmul.cpp:8]   --->   Operation 421 'zext' 'zext_ln8_10' <Predicate = (!icmp_ln32_2)> <Delay = 0.00>
ST_38 : Operation 422 [1/1] (0.00ns)   --->   "%arr_addr_10 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_10" [../src/matmul.cpp:8]   --->   Operation 422 'getelementptr' 'arr_addr_10' <Predicate = (!icmp_ln32_2)> <Delay = 0.00>
ST_38 : Operation 423 [2/2] (1.35ns)   --->   "%arr_load_10 = load i11 %arr_addr_10" [../src/matmul.cpp:8]   --->   Operation 423 'load' 'arr_load_10' <Predicate = (!icmp_ln32_2)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_38 : Operation 424 [1/1] (0.94ns)   --->   "%add_ln8_11 = add i11 %or_ln34_2, i11 %empty_47" [../src/matmul.cpp:8]   --->   Operation 424 'add' 'add_ln8_11' <Predicate = (!icmp_ln32_2)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 425 [1/1] (0.00ns)   --->   "%zext_ln8_11 = zext i11 %add_ln8_11" [../src/matmul.cpp:8]   --->   Operation 425 'zext' 'zext_ln8_11' <Predicate = (!icmp_ln32_2)> <Delay = 0.00>
ST_38 : Operation 426 [1/1] (0.00ns)   --->   "%arr_addr_11 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_11" [../src/matmul.cpp:8]   --->   Operation 426 'getelementptr' 'arr_addr_11' <Predicate = (!icmp_ln32_2)> <Delay = 0.00>
ST_38 : Operation 427 [2/2] (1.35ns)   --->   "%arr_load_11 = load i11 %arr_addr_11" [../src/matmul.cpp:8]   --->   Operation 427 'load' 'arr_load_11' <Predicate = (!icmp_ln32_2)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_38 : Operation 428 [2/2] (3.34ns)   --->   "%tmp_1056 = fcmp_ogt  i32 %arr_load_8, i32 %arr_load_9" [../src/matmul.cpp:13]   --->   Operation 428 'fcmp' 'tmp_1056' <Predicate = (!icmp_ln32_2)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 39 <SV = 26> <Delay = 4.70>
ST_39 : Operation 429 [1/1] (1.47ns)   --->   "%add_ln32_2 = add i64 %j_2, i64 2" [../src/matmul.cpp:32]   --->   Operation 429 'add' 'add_ln32_2' <Predicate = (!icmp_ln32_2)> <Delay = 1.47> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 430 [1/2] (1.35ns)   --->   "%arr_load_10 = load i11 %arr_addr_10" [../src/matmul.cpp:8]   --->   Operation 430 'load' 'arr_load_10' <Predicate = (!icmp_ln32_2)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_39 : Operation 431 [1/2] (1.35ns)   --->   "%arr_load_11 = load i11 %arr_addr_11" [../src/matmul.cpp:8]   --->   Operation 431 'load' 'arr_load_11' <Predicate = (!icmp_ln32_2)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_39 : Operation 432 [1/1] (0.00ns)   --->   "%bitcast_ln13_8 = bitcast i32 %arr_load_8" [../src/matmul.cpp:13]   --->   Operation 432 'bitcast' 'bitcast_ln13_8' <Predicate = (!icmp_ln32_2)> <Delay = 0.00>
ST_39 : Operation 433 [1/1] (0.00ns)   --->   "%tmp_1054 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln13_8, i32 23, i32 30" [../src/matmul.cpp:13]   --->   Operation 433 'partselect' 'tmp_1054' <Predicate = (!icmp_ln32_2)> <Delay = 0.00>
ST_39 : Operation 434 [1/1] (0.00ns)   --->   "%trunc_ln13_8 = trunc i32 %bitcast_ln13_8" [../src/matmul.cpp:13]   --->   Operation 434 'trunc' 'trunc_ln13_8' <Predicate = (!icmp_ln32_2)> <Delay = 0.00>
ST_39 : Operation 435 [1/1] (0.85ns)   --->   "%icmp_ln13_16 = icmp_ne  i8 %tmp_1054, i8 255" [../src/matmul.cpp:13]   --->   Operation 435 'icmp' 'icmp_ln13_16' <Predicate = (!icmp_ln32_2)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 436 [1/1] (0.97ns)   --->   "%icmp_ln13_17 = icmp_eq  i23 %trunc_ln13_8, i23 0" [../src/matmul.cpp:13]   --->   Operation 436 'icmp' 'icmp_ln13_17' <Predicate = (!icmp_ln32_2)> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 437 [1/1] (0.33ns)   --->   "%or_ln13_8 = or i1 %icmp_ln13_17, i1 %icmp_ln13_16" [../src/matmul.cpp:13]   --->   Operation 437 'or' 'or_ln13_8' <Predicate = (!icmp_ln32_2)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 438 [1/2] (3.34ns)   --->   "%tmp_1056 = fcmp_ogt  i32 %arr_load_8, i32 %arr_load_9" [../src/matmul.cpp:13]   --->   Operation 438 'fcmp' 'tmp_1056' <Predicate = (!icmp_ln32_2)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 439 [2/2] (3.34ns)   --->   "%tmp_1058 = fcmp_ogt  i32 %arr_load_8, i32 %arr_load_10" [../src/matmul.cpp:13]   --->   Operation 439 'fcmp' 'tmp_1058' <Predicate = (!icmp_ln32_2)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 440 [2/2] (3.34ns)   --->   "%tmp_1060 = fcmp_ogt  i32 %arr_load_8, i32 %arr_load_11" [../src/matmul.cpp:13]   --->   Operation 440 'fcmp' 'tmp_1060' <Predicate = (!icmp_ln32_2)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 40 <SV = 27> <Delay = 4.01>
ST_40 : Operation 441 [1/1] (0.00ns)   --->   "%bitcast_ln13_9 = bitcast i32 %arr_load_9" [../src/matmul.cpp:13]   --->   Operation 441 'bitcast' 'bitcast_ln13_9' <Predicate = (!icmp_ln32_2)> <Delay = 0.00>
ST_40 : Operation 442 [1/1] (0.00ns)   --->   "%tmp_1055 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln13_9, i32 23, i32 30" [../src/matmul.cpp:13]   --->   Operation 442 'partselect' 'tmp_1055' <Predicate = (!icmp_ln32_2)> <Delay = 0.00>
ST_40 : Operation 443 [1/1] (0.00ns)   --->   "%trunc_ln13_9 = trunc i32 %bitcast_ln13_9" [../src/matmul.cpp:13]   --->   Operation 443 'trunc' 'trunc_ln13_9' <Predicate = (!icmp_ln32_2)> <Delay = 0.00>
ST_40 : Operation 444 [1/1] (0.85ns)   --->   "%icmp_ln13_18 = icmp_ne  i8 %tmp_1055, i8 255" [../src/matmul.cpp:13]   --->   Operation 444 'icmp' 'icmp_ln13_18' <Predicate = (!icmp_ln32_2)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 445 [1/1] (0.97ns)   --->   "%icmp_ln13_19 = icmp_eq  i23 %trunc_ln13_9, i23 0" [../src/matmul.cpp:13]   --->   Operation 445 'icmp' 'icmp_ln13_19' <Predicate = (!icmp_ln32_2)> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 446 [1/1] (0.33ns)   --->   "%or_ln13_9 = or i1 %icmp_ln13_19, i1 %icmp_ln13_18" [../src/matmul.cpp:13]   --->   Operation 446 'or' 'or_ln13_9' <Predicate = (!icmp_ln32_2)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 447 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_12)   --->   "%and_ln13_24 = and i1 %or_ln13_8, i1 %or_ln13_9" [../src/matmul.cpp:13]   --->   Operation 447 'and' 'and_ln13_24' <Predicate = (!icmp_ln32_2)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 448 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_12)   --->   "%and_ln13_25 = and i1 %and_ln13_24, i1 %tmp_1056" [../src/matmul.cpp:13]   --->   Operation 448 'and' 'and_ln13_25' <Predicate = (!icmp_ln32_2)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 449 [1/1] (0.00ns)   --->   "%bitcast_ln13_10 = bitcast i32 %arr_load_10" [../src/matmul.cpp:13]   --->   Operation 449 'bitcast' 'bitcast_ln13_10' <Predicate = (!icmp_ln32_2)> <Delay = 0.00>
ST_40 : Operation 450 [1/1] (0.00ns)   --->   "%tmp_1057 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln13_10, i32 23, i32 30" [../src/matmul.cpp:13]   --->   Operation 450 'partselect' 'tmp_1057' <Predicate = (!icmp_ln32_2)> <Delay = 0.00>
ST_40 : Operation 451 [1/1] (0.00ns)   --->   "%trunc_ln13_10 = trunc i32 %bitcast_ln13_10" [../src/matmul.cpp:13]   --->   Operation 451 'trunc' 'trunc_ln13_10' <Predicate = (!icmp_ln32_2)> <Delay = 0.00>
ST_40 : Operation 452 [1/1] (0.85ns)   --->   "%icmp_ln13_20 = icmp_ne  i8 %tmp_1057, i8 255" [../src/matmul.cpp:13]   --->   Operation 452 'icmp' 'icmp_ln13_20' <Predicate = (!icmp_ln32_2)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 453 [1/1] (0.97ns)   --->   "%icmp_ln13_21 = icmp_eq  i23 %trunc_ln13_10, i23 0" [../src/matmul.cpp:13]   --->   Operation 453 'icmp' 'icmp_ln13_21' <Predicate = (!icmp_ln32_2)> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 454 [1/1] (0.33ns)   --->   "%or_ln13_10 = or i1 %icmp_ln13_21, i1 %icmp_ln13_20" [../src/matmul.cpp:13]   --->   Operation 454 'or' 'or_ln13_10' <Predicate = (!icmp_ln32_2)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 455 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_30)   --->   "%and_ln13_26 = and i1 %or_ln13_8, i1 %or_ln13_10" [../src/matmul.cpp:13]   --->   Operation 455 'and' 'and_ln13_26' <Predicate = (!icmp_ln32_2)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 456 [1/2] (3.34ns)   --->   "%tmp_1058 = fcmp_ogt  i32 %arr_load_8, i32 %arr_load_10" [../src/matmul.cpp:13]   --->   Operation 456 'fcmp' 'tmp_1058' <Predicate = (!icmp_ln32_2)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 457 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_30)   --->   "%and_ln13_27 = and i1 %and_ln13_26, i1 %tmp_1058" [../src/matmul.cpp:13]   --->   Operation 457 'and' 'and_ln13_27' <Predicate = (!icmp_ln32_2)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 458 [1/1] (0.00ns)   --->   "%bitcast_ln13_11 = bitcast i32 %arr_load_11" [../src/matmul.cpp:13]   --->   Operation 458 'bitcast' 'bitcast_ln13_11' <Predicate = (!icmp_ln32_2)> <Delay = 0.00>
ST_40 : Operation 459 [1/1] (0.00ns)   --->   "%tmp_1059 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln13_11, i32 23, i32 30" [../src/matmul.cpp:13]   --->   Operation 459 'partselect' 'tmp_1059' <Predicate = (!icmp_ln32_2)> <Delay = 0.00>
ST_40 : Operation 460 [1/1] (0.00ns)   --->   "%trunc_ln13_11 = trunc i32 %bitcast_ln13_11" [../src/matmul.cpp:13]   --->   Operation 460 'trunc' 'trunc_ln13_11' <Predicate = (!icmp_ln32_2)> <Delay = 0.00>
ST_40 : Operation 461 [1/1] (0.85ns)   --->   "%icmp_ln13_22 = icmp_ne  i8 %tmp_1059, i8 255" [../src/matmul.cpp:13]   --->   Operation 461 'icmp' 'icmp_ln13_22' <Predicate = (!icmp_ln32_2)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 462 [1/1] (0.97ns)   --->   "%icmp_ln13_23 = icmp_eq  i23 %trunc_ln13_11, i23 0" [../src/matmul.cpp:13]   --->   Operation 462 'icmp' 'icmp_ln13_23' <Predicate = (!icmp_ln32_2)> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 463 [1/1] (0.33ns)   --->   "%or_ln13_11 = or i1 %icmp_ln13_23, i1 %icmp_ln13_22" [../src/matmul.cpp:13]   --->   Operation 463 'or' 'or_ln13_11' <Predicate = (!icmp_ln32_2)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 464 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_30)   --->   "%and_ln13_28 = and i1 %or_ln13_8, i1 %or_ln13_11" [../src/matmul.cpp:13]   --->   Operation 464 'and' 'and_ln13_28' <Predicate = (!icmp_ln32_2)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 465 [1/2] (3.34ns)   --->   "%tmp_1060 = fcmp_ogt  i32 %arr_load_8, i32 %arr_load_11" [../src/matmul.cpp:13]   --->   Operation 465 'fcmp' 'tmp_1060' <Predicate = (!icmp_ln32_2)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 466 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_30)   --->   "%and_ln13_29 = and i1 %and_ln13_28, i1 %tmp_1060" [../src/matmul.cpp:13]   --->   Operation 466 'and' 'and_ln13_29' <Predicate = (!icmp_ln32_2)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 467 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln13_30 = and i1 %and_ln13_27, i1 %and_ln13_29" [../src/matmul.cpp:13]   --->   Operation 467 'and' 'and_ln13_30' <Predicate = (!icmp_ln32_2)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 468 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln13_12 = and i1 %and_ln13_30, i1 %and_ln13_25" [../src/matmul.cpp:13]   --->   Operation 468 'and' 'and_ln13_12' <Predicate = (!icmp_ln32_2)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 469 [2/2] (3.34ns)   --->   "%tmp_1061 = fcmp_ogt  i32 %arr_load_9, i32 %arr_load_10" [../src/matmul.cpp:16]   --->   Operation 469 'fcmp' 'tmp_1061' <Predicate = (!icmp_ln32_2)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 470 [2/2] (3.34ns)   --->   "%tmp_1062 = fcmp_ogt  i32 %arr_load_9, i32 %arr_load_11" [../src/matmul.cpp:16]   --->   Operation 470 'fcmp' 'tmp_1062' <Predicate = (!icmp_ln32_2)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 41 <SV = 28> <Delay = 4.12>
ST_41 : Operation 471 [1/1] (0.00ns) (grouped into LUT with out node and_ln16_2)   --->   "%and_ln16_20 = and i1 %or_ln13_9, i1 %or_ln13_10" [../src/matmul.cpp:16]   --->   Operation 471 'and' 'and_ln16_20' <Predicate = (!icmp_ln32_2)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 472 [1/2] (3.34ns)   --->   "%tmp_1061 = fcmp_ogt  i32 %arr_load_9, i32 %arr_load_10" [../src/matmul.cpp:16]   --->   Operation 472 'fcmp' 'tmp_1061' <Predicate = (!icmp_ln32_2)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 473 [1/1] (0.00ns) (grouped into LUT with out node and_ln16_2)   --->   "%and_ln16_21 = and i1 %and_ln16_20, i1 %tmp_1061" [../src/matmul.cpp:16]   --->   Operation 473 'and' 'and_ln16_21' <Predicate = (!icmp_ln32_2)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 474 [1/1] (0.00ns) (grouped into LUT with out node and_ln16_2)   --->   "%and_ln16_22 = and i1 %or_ln13_9, i1 %or_ln13_11" [../src/matmul.cpp:16]   --->   Operation 474 'and' 'and_ln16_22' <Predicate = (!icmp_ln32_2)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 475 [1/2] (3.34ns)   --->   "%tmp_1062 = fcmp_ogt  i32 %arr_load_9, i32 %arr_load_11" [../src/matmul.cpp:16]   --->   Operation 475 'fcmp' 'tmp_1062' <Predicate = (!icmp_ln32_2)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 476 [1/1] (0.00ns) (grouped into LUT with out node and_ln16_2)   --->   "%and_ln16_23 = and i1 %and_ln16_22, i1 %tmp_1062" [../src/matmul.cpp:16]   --->   Operation 476 'and' 'and_ln16_23' <Predicate = (!icmp_ln32_2)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 477 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln16_2 = and i1 %and_ln16_21, i1 %and_ln16_23" [../src/matmul.cpp:16]   --->   Operation 477 'and' 'and_ln16_2' <Predicate = (!icmp_ln32_2)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 478 [2/2] (3.34ns)   --->   "%tmp_1063 = fcmp_ogt  i32 %arr_load_10, i32 %arr_load_11" [../src/matmul.cpp:19]   --->   Operation 478 'fcmp' 'tmp_1063' <Predicate = (!icmp_ln32_2)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 479 [1/1] (0.00ns) (grouped into LUT with out node select_ln16_2)   --->   "%select_ln13_2 = select i1 %and_ln13_12, i11 %add_ln8_8, i11 %add_ln8_11" [../src/matmul.cpp:13]   --->   Operation 479 'select' 'select_ln13_2' <Predicate = (!icmp_ln32_2)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_41 : Operation 480 [1/1] (0.00ns) (grouped into LUT with out node select_ln16_2)   --->   "%xor_ln13_2 = xor i1 %and_ln13_12, i1 1" [../src/matmul.cpp:13]   --->   Operation 480 'xor' 'xor_ln13_2' <Predicate = (!icmp_ln32_2)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 481 [1/1] (0.00ns) (grouped into LUT with out node select_ln16_2)   --->   "%and_ln16_24 = and i1 %and_ln16_2, i1 %xor_ln13_2" [../src/matmul.cpp:16]   --->   Operation 481 'and' 'and_ln16_24' <Predicate = (!icmp_ln32_2)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 482 [1/1] (0.45ns) (out node of the LUT)   --->   "%select_ln16_2 = select i1 %and_ln16_24, i11 %add_ln8_9, i11 %select_ln13_2" [../src/matmul.cpp:16]   --->   Operation 482 'select' 'select_ln16_2' <Predicate = (!icmp_ln32_2)> <Delay = 0.45> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 42 <SV = 29> <Delay = 5.48>
ST_42 : Operation 483 [1/1] (0.00ns) (grouped into LUT with out node and_ln19_8)   --->   "%and_ln19_6 = and i1 %or_ln13_10, i1 %or_ln13_11" [../src/matmul.cpp:19]   --->   Operation 483 'and' 'and_ln19_6' <Predicate = (!icmp_ln32_2)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 484 [1/2] (3.34ns)   --->   "%tmp_1063 = fcmp_ogt  i32 %arr_load_10, i32 %arr_load_11" [../src/matmul.cpp:19]   --->   Operation 484 'fcmp' 'tmp_1063' <Predicate = (!icmp_ln32_2)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 485 [1/1] (0.00ns) (grouped into LUT with out node and_ln19_8)   --->   "%and_ln19_7 = and i1 %and_ln19_6, i1 %tmp_1063" [../src/matmul.cpp:19]   --->   Operation 485 'and' 'and_ln19_7' <Predicate = (!icmp_ln32_2)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 486 [1/1] (0.00ns) (grouped into LUT with out node and_ln19_8)   --->   "%or_ln16_2 = or i1 %and_ln13_12, i1 %and_ln16_2" [../src/matmul.cpp:16]   --->   Operation 486 'or' 'or_ln16_2' <Predicate = (!icmp_ln32_2)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 487 [1/1] (0.00ns) (grouped into LUT with out node and_ln19_8)   --->   "%xor_ln16_2 = xor i1 %or_ln16_2, i1 1" [../src/matmul.cpp:16]   --->   Operation 487 'xor' 'xor_ln16_2' <Predicate = (!icmp_ln32_2)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 488 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln19_8 = and i1 %and_ln19_7, i1 %xor_ln16_2" [../src/matmul.cpp:19]   --->   Operation 488 'and' 'and_ln19_8' <Predicate = (!icmp_ln32_2)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 489 [1/1] (0.45ns) (out node of the LUT)   --->   "%select_ln19_2 = select i1 %and_ln19_8, i11 %add_ln8_10, i11 %select_ln16_2" [../src/matmul.cpp:19]   --->   Operation 489 'select' 'select_ln19_2' <Predicate = (!icmp_ln32_2)> <Delay = 0.45> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_42 : Operation 490 [1/1] (0.00ns)   --->   "%zext_ln8_42 = zext i11 %select_ln19_2" [../src/matmul.cpp:8]   --->   Operation 490 'zext' 'zext_ln8_42' <Predicate = (!icmp_ln32_2)> <Delay = 0.00>
ST_42 : Operation 491 [1/1] (0.00ns)   --->   "%arr_addr_42 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_42" [../src/matmul.cpp:8]   --->   Operation 491 'getelementptr' 'arr_addr_42' <Predicate = (!icmp_ln32_2)> <Delay = 0.00>
ST_42 : Operation 492 [2/2] (1.35ns)   --->   "%arr_load_42 = load i11 %arr_addr_42" [../src/matmul.cpp:19]   --->   Operation 492 'load' 'arr_load_42' <Predicate = (!icmp_ln32_2)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>

State 43 <SV = 30> <Delay = 2.70>
ST_43 : Operation 493 [1/1] (0.00ns)   --->   "%t_1_2_cast = zext i11 %t_1_2" [../src/matmul.cpp:34]   --->   Operation 493 'zext' 't_1_2_cast' <Predicate = (!icmp_ln32_2)> <Delay = 0.00>
ST_43 : Operation 494 [1/1] (0.00ns)   --->   "%specloopname_ln28 = specloopname void @_ssdm_op_SpecLoopName, void @empty_0" [../src/matmul.cpp:28]   --->   Operation 494 'specloopname' 'specloopname_ln28' <Predicate = (!icmp_ln32_2)> <Delay = 0.00>
ST_43 : Operation 495 [1/2] (1.35ns)   --->   "%arr_load_42 = load i11 %arr_addr_42" [../src/matmul.cpp:19]   --->   Operation 495 'load' 'arr_load_42' <Predicate = (!icmp_ln32_2)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_43 : Operation 496 [1/1] (0.94ns)   --->   "%add_ln34_2 = add i11 %t_1_2, i11 1" [../src/matmul.cpp:34]   --->   Operation 496 'add' 'add_ln34_2' <Predicate = (!icmp_ln32_2)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 497 [1/1] (0.00ns)   --->   "%out_addr_2 = getelementptr i32 %out_r, i64 0, i64 %t_1_2_cast" [../src/matmul.cpp:34]   --->   Operation 497 'getelementptr' 'out_addr_2' <Predicate = (!icmp_ln32_2)> <Delay = 0.00>
ST_43 : Operation 498 [1/1] (1.35ns)   --->   "%store_ln34 = store i32 %arr_load_42, i11 %out_addr_2" [../src/matmul.cpp:34]   --->   Operation 498 'store' 'store_ln34' <Predicate = (!icmp_ln32_2)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_43 : Operation 499 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 499 'br' 'br_ln0' <Predicate = (!icmp_ln32_2)> <Delay = 0.00>

State 44 <SV = 25> <Delay = 2.95>
ST_44 : Operation 500 [1/1] (0.00ns)   --->   "%trunc_ln29_3 = trunc i32 %add_ln29_3" [../src/matmul.cpp:29]   --->   Operation 500 'trunc' 'trunc_ln29_3' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 501 [1/1] (1.20ns)   --->   "%add_ln29_6 = add i32 %zext_ln29_3, i32 %add_ln29_3" [../src/matmul.cpp:29]   --->   Operation 501 'add' 'add_ln29_6' <Predicate = true> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 502 [1/1] (1.47ns)   --->   "%add_ln29_7 = add i64 %i_0, i64 6" [../src/matmul.cpp:29]   --->   Operation 502 'add' 'add_ln29_7' <Predicate = true> <Delay = 1.47> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 503 [1/1] (0.94ns)   --->   "%add_ln29_8 = add i11 %trunc_ln29_1, i11 6" [../src/matmul.cpp:29]   --->   Operation 503 'add' 'add_ln29_8' <Predicate = true> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 504 [1/1] (1.48ns)   --->   "%icmp_ln29_3 = icmp_slt  i64 %add_ln29_7, i64 %zext_ln29" [../src/matmul.cpp:29]   --->   Operation 504 'icmp' 'icmp_ln29_3' <Predicate = true> <Delay = 1.48> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 505 [1/1] (0.00ns)   --->   "%br_ln29 = br i1 %icmp_ln29_3, void %._crit_edge10, void %.split4.3" [../src/matmul.cpp:29]   --->   Operation 505 'br' 'br_ln29' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 506 [1/1] (0.00ns)   --->   "%empty_50 = or i11 %add_ln29_8, i11 1" [../src/matmul.cpp:29]   --->   Operation 506 'or' 'empty_50' <Predicate = (icmp_ln29_3)> <Delay = 0.00>
ST_44 : Operation 507 [4/4] (0.69ns) (root node of the DSP)   --->   "%empty_51 = mul i11 %add_ln29_8, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 507 'mul' 'empty_51' <Predicate = (icmp_ln29_3)> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_44 : Operation 508 [4/4] (0.69ns) (root node of the DSP)   --->   "%empty_52 = mul i11 %empty_50, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 508 'mul' 'empty_52' <Predicate = (icmp_ln29_3)> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 45 <SV = 26> <Delay = 0.69>
ST_45 : Operation 509 [3/4] (0.69ns) (root node of the DSP)   --->   "%empty_51 = mul i11 %add_ln29_8, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 509 'mul' 'empty_51' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_45 : Operation 510 [3/4] (0.69ns) (root node of the DSP)   --->   "%empty_52 = mul i11 %empty_50, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 510 'mul' 'empty_52' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 46 <SV = 27> <Delay = 0.69>
ST_46 : Operation 511 [2/4] (0.69ns) (root node of the DSP)   --->   "%empty_51 = mul i11 %add_ln29_8, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 511 'mul' 'empty_51' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_46 : Operation 512 [2/4] (0.69ns) (root node of the DSP)   --->   "%empty_52 = mul i11 %empty_50, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 512 'mul' 'empty_52' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 47 <SV = 28> <Delay = 0.94>
ST_47 : Operation 513 [1/4] (0.00ns) (root node of the DSP)   --->   "%empty_51 = mul i11 %add_ln29_8, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 513 'mul' 'empty_51' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_47 : Operation 514 [1/4] (0.00ns) (root node of the DSP)   --->   "%empty_52 = mul i11 %empty_50, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 514 'mul' 'empty_52' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_47 : Operation 515 [1/1] (0.94ns)   --->   "%add_ln32_12 = add i11 %zext_ln29_4, i11 %trunc_ln29_3" [../src/matmul.cpp:32]   --->   Operation 515 'add' 'add_ln32_12' <Predicate = true> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 516 [1/1] (0.48ns)   --->   "%br_ln32 = br void" [../src/matmul.cpp:32]   --->   Operation 516 'br' 'br_ln32' <Predicate = true> <Delay = 0.48>

State 48 <SV = 29> <Delay = 2.29>
ST_48 : Operation 517 [1/1] (0.00ns)   --->   "%t_1_3 = phi i11 %add_ln34_3, void %.split.3_ifconv, i11 %add_ln32_12, void %.split4.3" [../src/matmul.cpp:34]   --->   Operation 517 'phi' 't_1_3' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 518 [1/1] (0.00ns)   --->   "%j_3 = phi i64 %add_ln32_3, void %.split.3_ifconv, i64 0, void %.split4.3" [../src/matmul.cpp:32]   --->   Operation 518 'phi' 'j_3' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 519 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 519 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 520 [1/1] (1.48ns)   --->   "%icmp_ln32_3 = icmp_eq  i64 %j_3, i64 %zext_ln32" [../src/matmul.cpp:32]   --->   Operation 520 'icmp' 'icmp_ln32_3' <Predicate = true> <Delay = 1.48> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 521 [1/1] (0.00ns)   --->   "%empty_53 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 0, i64 32, i64 0"   --->   Operation 521 'speclooptripcount' 'empty_53' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 522 [1/1] (0.00ns)   --->   "%br_ln32 = br i1 %icmp_ln32_3, void %.split.3_ifconv, void %._crit_edge.loopexit.3" [../src/matmul.cpp:32]   --->   Operation 522 'br' 'br_ln32' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 523 [1/1] (0.00ns)   --->   "%empty_54 = trunc i64 %j_3" [../src/matmul.cpp:32]   --->   Operation 523 'trunc' 'empty_54' <Predicate = (!icmp_ln32_3)> <Delay = 0.00>
ST_48 : Operation 524 [1/1] (0.94ns)   --->   "%add_ln8_12 = add i11 %empty_54, i11 %empty_51" [../src/matmul.cpp:8]   --->   Operation 524 'add' 'add_ln8_12' <Predicate = (!icmp_ln32_3)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 525 [1/1] (0.00ns)   --->   "%zext_ln8_12 = zext i11 %add_ln8_12" [../src/matmul.cpp:8]   --->   Operation 525 'zext' 'zext_ln8_12' <Predicate = (!icmp_ln32_3)> <Delay = 0.00>
ST_48 : Operation 526 [1/1] (0.00ns)   --->   "%arr_addr_12 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_12" [../src/matmul.cpp:8]   --->   Operation 526 'getelementptr' 'arr_addr_12' <Predicate = (!icmp_ln32_3)> <Delay = 0.00>
ST_48 : Operation 527 [2/2] (1.35ns)   --->   "%arr_load_12 = load i11 %arr_addr_12" [../src/matmul.cpp:8]   --->   Operation 527 'load' 'arr_load_12' <Predicate = (!icmp_ln32_3)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_48 : Operation 528 [1/1] (0.94ns)   --->   "%add_ln8_13 = add i11 %empty_54, i11 %empty_52" [../src/matmul.cpp:8]   --->   Operation 528 'add' 'add_ln8_13' <Predicate = (!icmp_ln32_3)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 529 [1/1] (0.00ns)   --->   "%zext_ln8_13 = zext i11 %add_ln8_13" [../src/matmul.cpp:8]   --->   Operation 529 'zext' 'zext_ln8_13' <Predicate = (!icmp_ln32_3)> <Delay = 0.00>
ST_48 : Operation 530 [1/1] (0.00ns)   --->   "%arr_addr_13 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_13" [../src/matmul.cpp:8]   --->   Operation 530 'getelementptr' 'arr_addr_13' <Predicate = (!icmp_ln32_3)> <Delay = 0.00>
ST_48 : Operation 531 [2/2] (1.35ns)   --->   "%arr_load_13 = load i11 %arr_addr_13" [../src/matmul.cpp:8]   --->   Operation 531 'load' 'arr_load_13' <Predicate = (!icmp_ln32_3)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>

State 49 <SV = 30> <Delay = 4.70>
ST_49 : Operation 532 [1/2] (1.35ns)   --->   "%arr_load_12 = load i11 %arr_addr_12" [../src/matmul.cpp:8]   --->   Operation 532 'load' 'arr_load_12' <Predicate = (!icmp_ln32_3)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_49 : Operation 533 [1/2] (1.35ns)   --->   "%arr_load_13 = load i11 %arr_addr_13" [../src/matmul.cpp:8]   --->   Operation 533 'load' 'arr_load_13' <Predicate = (!icmp_ln32_3)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_49 : Operation 534 [1/1] (0.00ns)   --->   "%or_ln34_3 = or i11 %empty_54, i11 1" [../src/matmul.cpp:34]   --->   Operation 534 'or' 'or_ln34_3' <Predicate = (!icmp_ln32_3)> <Delay = 0.00>
ST_49 : Operation 535 [1/1] (0.94ns)   --->   "%add_ln8_14 = add i11 %or_ln34_3, i11 %empty_51" [../src/matmul.cpp:8]   --->   Operation 535 'add' 'add_ln8_14' <Predicate = (!icmp_ln32_3)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 536 [1/1] (0.00ns)   --->   "%zext_ln8_14 = zext i11 %add_ln8_14" [../src/matmul.cpp:8]   --->   Operation 536 'zext' 'zext_ln8_14' <Predicate = (!icmp_ln32_3)> <Delay = 0.00>
ST_49 : Operation 537 [1/1] (0.00ns)   --->   "%arr_addr_14 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_14" [../src/matmul.cpp:8]   --->   Operation 537 'getelementptr' 'arr_addr_14' <Predicate = (!icmp_ln32_3)> <Delay = 0.00>
ST_49 : Operation 538 [2/2] (1.35ns)   --->   "%arr_load_14 = load i11 %arr_addr_14" [../src/matmul.cpp:8]   --->   Operation 538 'load' 'arr_load_14' <Predicate = (!icmp_ln32_3)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_49 : Operation 539 [1/1] (0.94ns)   --->   "%add_ln8_15 = add i11 %or_ln34_3, i11 %empty_52" [../src/matmul.cpp:8]   --->   Operation 539 'add' 'add_ln8_15' <Predicate = (!icmp_ln32_3)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 540 [1/1] (0.00ns)   --->   "%zext_ln8_15 = zext i11 %add_ln8_15" [../src/matmul.cpp:8]   --->   Operation 540 'zext' 'zext_ln8_15' <Predicate = (!icmp_ln32_3)> <Delay = 0.00>
ST_49 : Operation 541 [1/1] (0.00ns)   --->   "%arr_addr_15 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_15" [../src/matmul.cpp:8]   --->   Operation 541 'getelementptr' 'arr_addr_15' <Predicate = (!icmp_ln32_3)> <Delay = 0.00>
ST_49 : Operation 542 [2/2] (1.35ns)   --->   "%arr_load_15 = load i11 %arr_addr_15" [../src/matmul.cpp:8]   --->   Operation 542 'load' 'arr_load_15' <Predicate = (!icmp_ln32_3)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_49 : Operation 543 [2/2] (3.34ns)   --->   "%tmp_1066 = fcmp_ogt  i32 %arr_load_12, i32 %arr_load_13" [../src/matmul.cpp:13]   --->   Operation 543 'fcmp' 'tmp_1066' <Predicate = (!icmp_ln32_3)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 50 <SV = 31> <Delay = 4.70>
ST_50 : Operation 544 [1/1] (1.47ns)   --->   "%add_ln32_3 = add i64 %j_3, i64 2" [../src/matmul.cpp:32]   --->   Operation 544 'add' 'add_ln32_3' <Predicate = (!icmp_ln32_3)> <Delay = 1.47> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 545 [1/2] (1.35ns)   --->   "%arr_load_14 = load i11 %arr_addr_14" [../src/matmul.cpp:8]   --->   Operation 545 'load' 'arr_load_14' <Predicate = (!icmp_ln32_3)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_50 : Operation 546 [1/2] (1.35ns)   --->   "%arr_load_15 = load i11 %arr_addr_15" [../src/matmul.cpp:8]   --->   Operation 546 'load' 'arr_load_15' <Predicate = (!icmp_ln32_3)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_50 : Operation 547 [1/1] (0.00ns)   --->   "%bitcast_ln13_12 = bitcast i32 %arr_load_12" [../src/matmul.cpp:13]   --->   Operation 547 'bitcast' 'bitcast_ln13_12' <Predicate = (!icmp_ln32_3)> <Delay = 0.00>
ST_50 : Operation 548 [1/1] (0.00ns)   --->   "%tmp_1064 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln13_12, i32 23, i32 30" [../src/matmul.cpp:13]   --->   Operation 548 'partselect' 'tmp_1064' <Predicate = (!icmp_ln32_3)> <Delay = 0.00>
ST_50 : Operation 549 [1/1] (0.00ns)   --->   "%trunc_ln13_12 = trunc i32 %bitcast_ln13_12" [../src/matmul.cpp:13]   --->   Operation 549 'trunc' 'trunc_ln13_12' <Predicate = (!icmp_ln32_3)> <Delay = 0.00>
ST_50 : Operation 550 [1/1] (0.85ns)   --->   "%icmp_ln13_24 = icmp_ne  i8 %tmp_1064, i8 255" [../src/matmul.cpp:13]   --->   Operation 550 'icmp' 'icmp_ln13_24' <Predicate = (!icmp_ln32_3)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 551 [1/1] (0.97ns)   --->   "%icmp_ln13_25 = icmp_eq  i23 %trunc_ln13_12, i23 0" [../src/matmul.cpp:13]   --->   Operation 551 'icmp' 'icmp_ln13_25' <Predicate = (!icmp_ln32_3)> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 552 [1/1] (0.33ns)   --->   "%or_ln13_12 = or i1 %icmp_ln13_25, i1 %icmp_ln13_24" [../src/matmul.cpp:13]   --->   Operation 552 'or' 'or_ln13_12' <Predicate = (!icmp_ln32_3)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 553 [1/2] (3.34ns)   --->   "%tmp_1066 = fcmp_ogt  i32 %arr_load_12, i32 %arr_load_13" [../src/matmul.cpp:13]   --->   Operation 553 'fcmp' 'tmp_1066' <Predicate = (!icmp_ln32_3)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 554 [2/2] (3.34ns)   --->   "%tmp_1068 = fcmp_ogt  i32 %arr_load_12, i32 %arr_load_14" [../src/matmul.cpp:13]   --->   Operation 554 'fcmp' 'tmp_1068' <Predicate = (!icmp_ln32_3)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 555 [2/2] (3.34ns)   --->   "%tmp_1070 = fcmp_ogt  i32 %arr_load_12, i32 %arr_load_15" [../src/matmul.cpp:13]   --->   Operation 555 'fcmp' 'tmp_1070' <Predicate = (!icmp_ln32_3)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 51 <SV = 32> <Delay = 4.01>
ST_51 : Operation 556 [1/1] (0.00ns)   --->   "%bitcast_ln13_13 = bitcast i32 %arr_load_13" [../src/matmul.cpp:13]   --->   Operation 556 'bitcast' 'bitcast_ln13_13' <Predicate = (!icmp_ln32_3)> <Delay = 0.00>
ST_51 : Operation 557 [1/1] (0.00ns)   --->   "%tmp_1065 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln13_13, i32 23, i32 30" [../src/matmul.cpp:13]   --->   Operation 557 'partselect' 'tmp_1065' <Predicate = (!icmp_ln32_3)> <Delay = 0.00>
ST_51 : Operation 558 [1/1] (0.00ns)   --->   "%trunc_ln13_13 = trunc i32 %bitcast_ln13_13" [../src/matmul.cpp:13]   --->   Operation 558 'trunc' 'trunc_ln13_13' <Predicate = (!icmp_ln32_3)> <Delay = 0.00>
ST_51 : Operation 559 [1/1] (0.85ns)   --->   "%icmp_ln13_26 = icmp_ne  i8 %tmp_1065, i8 255" [../src/matmul.cpp:13]   --->   Operation 559 'icmp' 'icmp_ln13_26' <Predicate = (!icmp_ln32_3)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 560 [1/1] (0.97ns)   --->   "%icmp_ln13_27 = icmp_eq  i23 %trunc_ln13_13, i23 0" [../src/matmul.cpp:13]   --->   Operation 560 'icmp' 'icmp_ln13_27' <Predicate = (!icmp_ln32_3)> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 561 [1/1] (0.33ns)   --->   "%or_ln13_13 = or i1 %icmp_ln13_27, i1 %icmp_ln13_26" [../src/matmul.cpp:13]   --->   Operation 561 'or' 'or_ln13_13' <Predicate = (!icmp_ln32_3)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 562 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_13)   --->   "%and_ln13_31 = and i1 %or_ln13_12, i1 %or_ln13_13" [../src/matmul.cpp:13]   --->   Operation 562 'and' 'and_ln13_31' <Predicate = (!icmp_ln32_3)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 563 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_13)   --->   "%and_ln13_32 = and i1 %and_ln13_31, i1 %tmp_1066" [../src/matmul.cpp:13]   --->   Operation 563 'and' 'and_ln13_32' <Predicate = (!icmp_ln32_3)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 564 [1/1] (0.00ns)   --->   "%bitcast_ln13_14 = bitcast i32 %arr_load_14" [../src/matmul.cpp:13]   --->   Operation 564 'bitcast' 'bitcast_ln13_14' <Predicate = (!icmp_ln32_3)> <Delay = 0.00>
ST_51 : Operation 565 [1/1] (0.00ns)   --->   "%tmp_1067 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln13_14, i32 23, i32 30" [../src/matmul.cpp:13]   --->   Operation 565 'partselect' 'tmp_1067' <Predicate = (!icmp_ln32_3)> <Delay = 0.00>
ST_51 : Operation 566 [1/1] (0.00ns)   --->   "%trunc_ln13_14 = trunc i32 %bitcast_ln13_14" [../src/matmul.cpp:13]   --->   Operation 566 'trunc' 'trunc_ln13_14' <Predicate = (!icmp_ln32_3)> <Delay = 0.00>
ST_51 : Operation 567 [1/1] (0.85ns)   --->   "%icmp_ln13_28 = icmp_ne  i8 %tmp_1067, i8 255" [../src/matmul.cpp:13]   --->   Operation 567 'icmp' 'icmp_ln13_28' <Predicate = (!icmp_ln32_3)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 568 [1/1] (0.97ns)   --->   "%icmp_ln13_29 = icmp_eq  i23 %trunc_ln13_14, i23 0" [../src/matmul.cpp:13]   --->   Operation 568 'icmp' 'icmp_ln13_29' <Predicate = (!icmp_ln32_3)> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 569 [1/1] (0.33ns)   --->   "%or_ln13_14 = or i1 %icmp_ln13_29, i1 %icmp_ln13_28" [../src/matmul.cpp:13]   --->   Operation 569 'or' 'or_ln13_14' <Predicate = (!icmp_ln32_3)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 570 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_37)   --->   "%and_ln13_33 = and i1 %or_ln13_12, i1 %or_ln13_14" [../src/matmul.cpp:13]   --->   Operation 570 'and' 'and_ln13_33' <Predicate = (!icmp_ln32_3)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 571 [1/2] (3.34ns)   --->   "%tmp_1068 = fcmp_ogt  i32 %arr_load_12, i32 %arr_load_14" [../src/matmul.cpp:13]   --->   Operation 571 'fcmp' 'tmp_1068' <Predicate = (!icmp_ln32_3)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 572 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_37)   --->   "%and_ln13_34 = and i1 %and_ln13_33, i1 %tmp_1068" [../src/matmul.cpp:13]   --->   Operation 572 'and' 'and_ln13_34' <Predicate = (!icmp_ln32_3)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 573 [1/1] (0.00ns)   --->   "%bitcast_ln13_15 = bitcast i32 %arr_load_15" [../src/matmul.cpp:13]   --->   Operation 573 'bitcast' 'bitcast_ln13_15' <Predicate = (!icmp_ln32_3)> <Delay = 0.00>
ST_51 : Operation 574 [1/1] (0.00ns)   --->   "%tmp_1069 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln13_15, i32 23, i32 30" [../src/matmul.cpp:13]   --->   Operation 574 'partselect' 'tmp_1069' <Predicate = (!icmp_ln32_3)> <Delay = 0.00>
ST_51 : Operation 575 [1/1] (0.00ns)   --->   "%trunc_ln13_15 = trunc i32 %bitcast_ln13_15" [../src/matmul.cpp:13]   --->   Operation 575 'trunc' 'trunc_ln13_15' <Predicate = (!icmp_ln32_3)> <Delay = 0.00>
ST_51 : Operation 576 [1/1] (0.85ns)   --->   "%icmp_ln13_30 = icmp_ne  i8 %tmp_1069, i8 255" [../src/matmul.cpp:13]   --->   Operation 576 'icmp' 'icmp_ln13_30' <Predicate = (!icmp_ln32_3)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 577 [1/1] (0.97ns)   --->   "%icmp_ln13_31 = icmp_eq  i23 %trunc_ln13_15, i23 0" [../src/matmul.cpp:13]   --->   Operation 577 'icmp' 'icmp_ln13_31' <Predicate = (!icmp_ln32_3)> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 578 [1/1] (0.33ns)   --->   "%or_ln13_15 = or i1 %icmp_ln13_31, i1 %icmp_ln13_30" [../src/matmul.cpp:13]   --->   Operation 578 'or' 'or_ln13_15' <Predicate = (!icmp_ln32_3)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 579 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_37)   --->   "%and_ln13_35 = and i1 %or_ln13_12, i1 %or_ln13_15" [../src/matmul.cpp:13]   --->   Operation 579 'and' 'and_ln13_35' <Predicate = (!icmp_ln32_3)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 580 [1/2] (3.34ns)   --->   "%tmp_1070 = fcmp_ogt  i32 %arr_load_12, i32 %arr_load_15" [../src/matmul.cpp:13]   --->   Operation 580 'fcmp' 'tmp_1070' <Predicate = (!icmp_ln32_3)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 581 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_37)   --->   "%and_ln13_36 = and i1 %and_ln13_35, i1 %tmp_1070" [../src/matmul.cpp:13]   --->   Operation 581 'and' 'and_ln13_36' <Predicate = (!icmp_ln32_3)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 582 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln13_37 = and i1 %and_ln13_34, i1 %and_ln13_36" [../src/matmul.cpp:13]   --->   Operation 582 'and' 'and_ln13_37' <Predicate = (!icmp_ln32_3)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 583 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln13_13 = and i1 %and_ln13_37, i1 %and_ln13_32" [../src/matmul.cpp:13]   --->   Operation 583 'and' 'and_ln13_13' <Predicate = (!icmp_ln32_3)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 584 [2/2] (3.34ns)   --->   "%tmp_1071 = fcmp_ogt  i32 %arr_load_13, i32 %arr_load_14" [../src/matmul.cpp:16]   --->   Operation 584 'fcmp' 'tmp_1071' <Predicate = (!icmp_ln32_3)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 585 [2/2] (3.34ns)   --->   "%tmp_1072 = fcmp_ogt  i32 %arr_load_13, i32 %arr_load_15" [../src/matmul.cpp:16]   --->   Operation 585 'fcmp' 'tmp_1072' <Predicate = (!icmp_ln32_3)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 52 <SV = 33> <Delay = 4.12>
ST_52 : Operation 586 [1/1] (0.00ns) (grouped into LUT with out node and_ln16_3)   --->   "%and_ln16_25 = and i1 %or_ln13_13, i1 %or_ln13_14" [../src/matmul.cpp:16]   --->   Operation 586 'and' 'and_ln16_25' <Predicate = (!icmp_ln32_3)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 587 [1/2] (3.34ns)   --->   "%tmp_1071 = fcmp_ogt  i32 %arr_load_13, i32 %arr_load_14" [../src/matmul.cpp:16]   --->   Operation 587 'fcmp' 'tmp_1071' <Predicate = (!icmp_ln32_3)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 588 [1/1] (0.00ns) (grouped into LUT with out node and_ln16_3)   --->   "%and_ln16_26 = and i1 %and_ln16_25, i1 %tmp_1071" [../src/matmul.cpp:16]   --->   Operation 588 'and' 'and_ln16_26' <Predicate = (!icmp_ln32_3)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 589 [1/1] (0.00ns) (grouped into LUT with out node and_ln16_3)   --->   "%and_ln16_27 = and i1 %or_ln13_13, i1 %or_ln13_15" [../src/matmul.cpp:16]   --->   Operation 589 'and' 'and_ln16_27' <Predicate = (!icmp_ln32_3)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 590 [1/2] (3.34ns)   --->   "%tmp_1072 = fcmp_ogt  i32 %arr_load_13, i32 %arr_load_15" [../src/matmul.cpp:16]   --->   Operation 590 'fcmp' 'tmp_1072' <Predicate = (!icmp_ln32_3)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 591 [1/1] (0.00ns) (grouped into LUT with out node and_ln16_3)   --->   "%and_ln16_28 = and i1 %and_ln16_27, i1 %tmp_1072" [../src/matmul.cpp:16]   --->   Operation 591 'and' 'and_ln16_28' <Predicate = (!icmp_ln32_3)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 592 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln16_3 = and i1 %and_ln16_26, i1 %and_ln16_28" [../src/matmul.cpp:16]   --->   Operation 592 'and' 'and_ln16_3' <Predicate = (!icmp_ln32_3)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 593 [2/2] (3.34ns)   --->   "%tmp_1073 = fcmp_ogt  i32 %arr_load_14, i32 %arr_load_15" [../src/matmul.cpp:19]   --->   Operation 593 'fcmp' 'tmp_1073' <Predicate = (!icmp_ln32_3)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 594 [1/1] (0.00ns) (grouped into LUT with out node select_ln16_3)   --->   "%select_ln13_3 = select i1 %and_ln13_13, i11 %add_ln8_12, i11 %add_ln8_15" [../src/matmul.cpp:13]   --->   Operation 594 'select' 'select_ln13_3' <Predicate = (!icmp_ln32_3)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_52 : Operation 595 [1/1] (0.00ns) (grouped into LUT with out node select_ln16_3)   --->   "%xor_ln13_3 = xor i1 %and_ln13_13, i1 1" [../src/matmul.cpp:13]   --->   Operation 595 'xor' 'xor_ln13_3' <Predicate = (!icmp_ln32_3)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 596 [1/1] (0.00ns) (grouped into LUT with out node select_ln16_3)   --->   "%and_ln16_29 = and i1 %and_ln16_3, i1 %xor_ln13_3" [../src/matmul.cpp:16]   --->   Operation 596 'and' 'and_ln16_29' <Predicate = (!icmp_ln32_3)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 597 [1/1] (0.45ns) (out node of the LUT)   --->   "%select_ln16_3 = select i1 %and_ln16_29, i11 %add_ln8_13, i11 %select_ln13_3" [../src/matmul.cpp:16]   --->   Operation 597 'select' 'select_ln16_3' <Predicate = (!icmp_ln32_3)> <Delay = 0.45> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 53 <SV = 34> <Delay = 5.48>
ST_53 : Operation 598 [1/1] (0.00ns) (grouped into LUT with out node and_ln19_11)   --->   "%and_ln19_9 = and i1 %or_ln13_14, i1 %or_ln13_15" [../src/matmul.cpp:19]   --->   Operation 598 'and' 'and_ln19_9' <Predicate = (!icmp_ln32_3)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 599 [1/2] (3.34ns)   --->   "%tmp_1073 = fcmp_ogt  i32 %arr_load_14, i32 %arr_load_15" [../src/matmul.cpp:19]   --->   Operation 599 'fcmp' 'tmp_1073' <Predicate = (!icmp_ln32_3)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 600 [1/1] (0.00ns) (grouped into LUT with out node and_ln19_11)   --->   "%and_ln19_10 = and i1 %and_ln19_9, i1 %tmp_1073" [../src/matmul.cpp:19]   --->   Operation 600 'and' 'and_ln19_10' <Predicate = (!icmp_ln32_3)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 601 [1/1] (0.00ns) (grouped into LUT with out node and_ln19_11)   --->   "%or_ln16_3 = or i1 %and_ln13_13, i1 %and_ln16_3" [../src/matmul.cpp:16]   --->   Operation 601 'or' 'or_ln16_3' <Predicate = (!icmp_ln32_3)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 602 [1/1] (0.00ns) (grouped into LUT with out node and_ln19_11)   --->   "%xor_ln16_3 = xor i1 %or_ln16_3, i1 1" [../src/matmul.cpp:16]   --->   Operation 602 'xor' 'xor_ln16_3' <Predicate = (!icmp_ln32_3)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 603 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln19_11 = and i1 %and_ln19_10, i1 %xor_ln16_3" [../src/matmul.cpp:19]   --->   Operation 603 'and' 'and_ln19_11' <Predicate = (!icmp_ln32_3)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 604 [1/1] (0.45ns) (out node of the LUT)   --->   "%select_ln19_3 = select i1 %and_ln19_11, i11 %add_ln8_14, i11 %select_ln16_3" [../src/matmul.cpp:19]   --->   Operation 604 'select' 'select_ln19_3' <Predicate = (!icmp_ln32_3)> <Delay = 0.45> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_53 : Operation 605 [1/1] (0.00ns)   --->   "%zext_ln8_43 = zext i11 %select_ln19_3" [../src/matmul.cpp:8]   --->   Operation 605 'zext' 'zext_ln8_43' <Predicate = (!icmp_ln32_3)> <Delay = 0.00>
ST_53 : Operation 606 [1/1] (0.00ns)   --->   "%arr_addr_43 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_43" [../src/matmul.cpp:8]   --->   Operation 606 'getelementptr' 'arr_addr_43' <Predicate = (!icmp_ln32_3)> <Delay = 0.00>
ST_53 : Operation 607 [2/2] (1.35ns)   --->   "%arr_load_43 = load i11 %arr_addr_43" [../src/matmul.cpp:19]   --->   Operation 607 'load' 'arr_load_43' <Predicate = (!icmp_ln32_3)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>

State 54 <SV = 35> <Delay = 2.70>
ST_54 : Operation 608 [1/1] (0.00ns)   --->   "%t_1_3_cast = zext i11 %t_1_3" [../src/matmul.cpp:34]   --->   Operation 608 'zext' 't_1_3_cast' <Predicate = (!icmp_ln32_3)> <Delay = 0.00>
ST_54 : Operation 609 [1/1] (0.00ns)   --->   "%specloopname_ln28 = specloopname void @_ssdm_op_SpecLoopName, void @empty_0" [../src/matmul.cpp:28]   --->   Operation 609 'specloopname' 'specloopname_ln28' <Predicate = (!icmp_ln32_3)> <Delay = 0.00>
ST_54 : Operation 610 [1/2] (1.35ns)   --->   "%arr_load_43 = load i11 %arr_addr_43" [../src/matmul.cpp:19]   --->   Operation 610 'load' 'arr_load_43' <Predicate = (!icmp_ln32_3)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_54 : Operation 611 [1/1] (0.94ns)   --->   "%add_ln34_3 = add i11 %t_1_3, i11 1" [../src/matmul.cpp:34]   --->   Operation 611 'add' 'add_ln34_3' <Predicate = (!icmp_ln32_3)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 612 [1/1] (0.00ns)   --->   "%out_addr_3 = getelementptr i32 %out_r, i64 0, i64 %t_1_3_cast" [../src/matmul.cpp:34]   --->   Operation 612 'getelementptr' 'out_addr_3' <Predicate = (!icmp_ln32_3)> <Delay = 0.00>
ST_54 : Operation 613 [1/1] (1.35ns)   --->   "%store_ln34 = store i32 %arr_load_43, i11 %out_addr_3" [../src/matmul.cpp:34]   --->   Operation 613 'store' 'store_ln34' <Predicate = (!icmp_ln32_3)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_54 : Operation 614 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 614 'br' 'br_ln0' <Predicate = (!icmp_ln32_3)> <Delay = 0.00>

State 55 <SV = 30> <Delay = 2.95>
ST_55 : Operation 615 [1/1] (0.00ns)   --->   "%trunc_ln29_4 = trunc i32 %add_ln29_6" [../src/matmul.cpp:29]   --->   Operation 615 'trunc' 'trunc_ln29_4' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 616 [1/1] (1.20ns)   --->   "%add_ln29_9 = add i32 %zext_ln29_3, i32 %add_ln29_6" [../src/matmul.cpp:29]   --->   Operation 616 'add' 'add_ln29_9' <Predicate = true> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 617 [1/1] (1.47ns)   --->   "%add_ln29_10 = add i64 %i_0, i64 8" [../src/matmul.cpp:29]   --->   Operation 617 'add' 'add_ln29_10' <Predicate = true> <Delay = 1.47> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 618 [1/1] (0.94ns)   --->   "%add_ln29_11 = add i11 %trunc_ln29_1, i11 8" [../src/matmul.cpp:29]   --->   Operation 618 'add' 'add_ln29_11' <Predicate = true> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 619 [1/1] (1.48ns)   --->   "%icmp_ln29_4 = icmp_slt  i64 %add_ln29_10, i64 %zext_ln29" [../src/matmul.cpp:29]   --->   Operation 619 'icmp' 'icmp_ln29_4' <Predicate = true> <Delay = 1.48> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 620 [1/1] (0.00ns)   --->   "%br_ln29 = br i1 %icmp_ln29_4, void %._crit_edge10, void %.split4.4" [../src/matmul.cpp:29]   --->   Operation 620 'br' 'br_ln29' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 621 [1/1] (0.00ns)   --->   "%empty_55 = or i11 %add_ln29_11, i11 1" [../src/matmul.cpp:29]   --->   Operation 621 'or' 'empty_55' <Predicate = (icmp_ln29_4)> <Delay = 0.00>
ST_55 : Operation 622 [4/4] (0.69ns) (root node of the DSP)   --->   "%empty_56 = mul i11 %add_ln29_11, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 622 'mul' 'empty_56' <Predicate = (icmp_ln29_4)> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_55 : Operation 623 [4/4] (0.69ns) (root node of the DSP)   --->   "%empty_57 = mul i11 %empty_55, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 623 'mul' 'empty_57' <Predicate = (icmp_ln29_4)> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_55 : Operation 624 [1/1] (0.94ns)   --->   "%add_ln32_13 = add i11 %zext_ln29_4, i11 %trunc_ln29_4" [../src/matmul.cpp:32]   --->   Operation 624 'add' 'add_ln32_13' <Predicate = (icmp_ln29_4)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 56 <SV = 31> <Delay = 0.69>
ST_56 : Operation 625 [3/4] (0.69ns) (root node of the DSP)   --->   "%empty_56 = mul i11 %add_ln29_11, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 625 'mul' 'empty_56' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_56 : Operation 626 [3/4] (0.69ns) (root node of the DSP)   --->   "%empty_57 = mul i11 %empty_55, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 626 'mul' 'empty_57' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 57 <SV = 32> <Delay = 0.69>
ST_57 : Operation 627 [2/4] (0.69ns) (root node of the DSP)   --->   "%empty_56 = mul i11 %add_ln29_11, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 627 'mul' 'empty_56' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_57 : Operation 628 [2/4] (0.69ns) (root node of the DSP)   --->   "%empty_57 = mul i11 %empty_55, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 628 'mul' 'empty_57' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 58 <SV = 33> <Delay = 0.48>
ST_58 : Operation 629 [1/4] (0.00ns) (root node of the DSP)   --->   "%empty_56 = mul i11 %add_ln29_11, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 629 'mul' 'empty_56' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_58 : Operation 630 [1/4] (0.00ns) (root node of the DSP)   --->   "%empty_57 = mul i11 %empty_55, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 630 'mul' 'empty_57' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_58 : Operation 631 [1/1] (0.48ns)   --->   "%br_ln32 = br void" [../src/matmul.cpp:32]   --->   Operation 631 'br' 'br_ln32' <Predicate = true> <Delay = 0.48>

State 59 <SV = 34> <Delay = 2.29>
ST_59 : Operation 632 [1/1] (0.00ns)   --->   "%t_1_4 = phi i11 %add_ln34_4, void %.split.4_ifconv, i11 %add_ln32_13, void %.split4.4" [../src/matmul.cpp:34]   --->   Operation 632 'phi' 't_1_4' <Predicate = true> <Delay = 0.00>
ST_59 : Operation 633 [1/1] (0.00ns)   --->   "%j_4 = phi i64 %add_ln32_4, void %.split.4_ifconv, i64 0, void %.split4.4" [../src/matmul.cpp:32]   --->   Operation 633 'phi' 'j_4' <Predicate = true> <Delay = 0.00>
ST_59 : Operation 634 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 634 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_59 : Operation 635 [1/1] (1.48ns)   --->   "%icmp_ln32_4 = icmp_eq  i64 %j_4, i64 %zext_ln32" [../src/matmul.cpp:32]   --->   Operation 635 'icmp' 'icmp_ln32_4' <Predicate = true> <Delay = 1.48> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_59 : Operation 636 [1/1] (0.00ns)   --->   "%empty_58 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 0, i64 32, i64 0"   --->   Operation 636 'speclooptripcount' 'empty_58' <Predicate = true> <Delay = 0.00>
ST_59 : Operation 637 [1/1] (0.00ns)   --->   "%br_ln32 = br i1 %icmp_ln32_4, void %.split.4_ifconv, void %._crit_edge.loopexit.4" [../src/matmul.cpp:32]   --->   Operation 637 'br' 'br_ln32' <Predicate = true> <Delay = 0.00>
ST_59 : Operation 638 [1/1] (1.47ns)   --->   "%add_ln32_4 = add i64 %j_4, i64 2" [../src/matmul.cpp:32]   --->   Operation 638 'add' 'add_ln32_4' <Predicate = (!icmp_ln32_4)> <Delay = 1.47> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_59 : Operation 639 [1/1] (0.00ns)   --->   "%empty_59 = trunc i64 %j_4" [../src/matmul.cpp:32]   --->   Operation 639 'trunc' 'empty_59' <Predicate = (!icmp_ln32_4)> <Delay = 0.00>
ST_59 : Operation 640 [1/1] (0.94ns)   --->   "%add_ln8_16 = add i11 %empty_59, i11 %empty_56" [../src/matmul.cpp:8]   --->   Operation 640 'add' 'add_ln8_16' <Predicate = (!icmp_ln32_4)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_59 : Operation 641 [1/1] (0.00ns)   --->   "%zext_ln8_16 = zext i11 %add_ln8_16" [../src/matmul.cpp:8]   --->   Operation 641 'zext' 'zext_ln8_16' <Predicate = (!icmp_ln32_4)> <Delay = 0.00>
ST_59 : Operation 642 [1/1] (0.00ns)   --->   "%arr_addr_16 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_16" [../src/matmul.cpp:8]   --->   Operation 642 'getelementptr' 'arr_addr_16' <Predicate = (!icmp_ln32_4)> <Delay = 0.00>
ST_59 : Operation 643 [2/2] (1.35ns)   --->   "%arr_load_16 = load i11 %arr_addr_16" [../src/matmul.cpp:8]   --->   Operation 643 'load' 'arr_load_16' <Predicate = (!icmp_ln32_4)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_59 : Operation 644 [1/1] (0.94ns)   --->   "%add_ln8_17 = add i11 %empty_59, i11 %empty_57" [../src/matmul.cpp:8]   --->   Operation 644 'add' 'add_ln8_17' <Predicate = (!icmp_ln32_4)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_59 : Operation 645 [1/1] (0.00ns)   --->   "%zext_ln8_17 = zext i11 %add_ln8_17" [../src/matmul.cpp:8]   --->   Operation 645 'zext' 'zext_ln8_17' <Predicate = (!icmp_ln32_4)> <Delay = 0.00>
ST_59 : Operation 646 [1/1] (0.00ns)   --->   "%arr_addr_17 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_17" [../src/matmul.cpp:8]   --->   Operation 646 'getelementptr' 'arr_addr_17' <Predicate = (!icmp_ln32_4)> <Delay = 0.00>
ST_59 : Operation 647 [2/2] (1.35ns)   --->   "%arr_load_17 = load i11 %arr_addr_17" [../src/matmul.cpp:8]   --->   Operation 647 'load' 'arr_load_17' <Predicate = (!icmp_ln32_4)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>

State 60 <SV = 35> <Delay = 4.70>
ST_60 : Operation 648 [1/2] (1.35ns)   --->   "%arr_load_16 = load i11 %arr_addr_16" [../src/matmul.cpp:8]   --->   Operation 648 'load' 'arr_load_16' <Predicate = (!icmp_ln32_4)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_60 : Operation 649 [1/2] (1.35ns)   --->   "%arr_load_17 = load i11 %arr_addr_17" [../src/matmul.cpp:8]   --->   Operation 649 'load' 'arr_load_17' <Predicate = (!icmp_ln32_4)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_60 : Operation 650 [1/1] (0.00ns)   --->   "%or_ln34_4 = or i11 %empty_59, i11 1" [../src/matmul.cpp:34]   --->   Operation 650 'or' 'or_ln34_4' <Predicate = (!icmp_ln32_4)> <Delay = 0.00>
ST_60 : Operation 651 [1/1] (0.94ns)   --->   "%add_ln8_18 = add i11 %or_ln34_4, i11 %empty_56" [../src/matmul.cpp:8]   --->   Operation 651 'add' 'add_ln8_18' <Predicate = (!icmp_ln32_4)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_60 : Operation 652 [1/1] (0.00ns)   --->   "%zext_ln8_18 = zext i11 %add_ln8_18" [../src/matmul.cpp:8]   --->   Operation 652 'zext' 'zext_ln8_18' <Predicate = (!icmp_ln32_4)> <Delay = 0.00>
ST_60 : Operation 653 [1/1] (0.00ns)   --->   "%arr_addr_18 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_18" [../src/matmul.cpp:8]   --->   Operation 653 'getelementptr' 'arr_addr_18' <Predicate = (!icmp_ln32_4)> <Delay = 0.00>
ST_60 : Operation 654 [2/2] (1.35ns)   --->   "%arr_load_18 = load i11 %arr_addr_18" [../src/matmul.cpp:8]   --->   Operation 654 'load' 'arr_load_18' <Predicate = (!icmp_ln32_4)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_60 : Operation 655 [1/1] (0.94ns)   --->   "%add_ln8_19 = add i11 %or_ln34_4, i11 %empty_57" [../src/matmul.cpp:8]   --->   Operation 655 'add' 'add_ln8_19' <Predicate = (!icmp_ln32_4)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_60 : Operation 656 [1/1] (0.00ns)   --->   "%zext_ln8_19 = zext i11 %add_ln8_19" [../src/matmul.cpp:8]   --->   Operation 656 'zext' 'zext_ln8_19' <Predicate = (!icmp_ln32_4)> <Delay = 0.00>
ST_60 : Operation 657 [1/1] (0.00ns)   --->   "%arr_addr_19 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_19" [../src/matmul.cpp:8]   --->   Operation 657 'getelementptr' 'arr_addr_19' <Predicate = (!icmp_ln32_4)> <Delay = 0.00>
ST_60 : Operation 658 [2/2] (1.35ns)   --->   "%arr_load_19 = load i11 %arr_addr_19" [../src/matmul.cpp:8]   --->   Operation 658 'load' 'arr_load_19' <Predicate = (!icmp_ln32_4)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_60 : Operation 659 [2/2] (3.34ns)   --->   "%tmp_1076 = fcmp_ogt  i32 %arr_load_16, i32 %arr_load_17" [../src/matmul.cpp:13]   --->   Operation 659 'fcmp' 'tmp_1076' <Predicate = (!icmp_ln32_4)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 61 <SV = 36> <Delay = 4.70>
ST_61 : Operation 660 [1/2] (1.35ns)   --->   "%arr_load_18 = load i11 %arr_addr_18" [../src/matmul.cpp:8]   --->   Operation 660 'load' 'arr_load_18' <Predicate = (!icmp_ln32_4)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_61 : Operation 661 [1/2] (1.35ns)   --->   "%arr_load_19 = load i11 %arr_addr_19" [../src/matmul.cpp:8]   --->   Operation 661 'load' 'arr_load_19' <Predicate = (!icmp_ln32_4)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_61 : Operation 662 [1/1] (0.00ns)   --->   "%bitcast_ln13_16 = bitcast i32 %arr_load_16" [../src/matmul.cpp:13]   --->   Operation 662 'bitcast' 'bitcast_ln13_16' <Predicate = (!icmp_ln32_4)> <Delay = 0.00>
ST_61 : Operation 663 [1/1] (0.00ns)   --->   "%tmp_1074 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln13_16, i32 23, i32 30" [../src/matmul.cpp:13]   --->   Operation 663 'partselect' 'tmp_1074' <Predicate = (!icmp_ln32_4)> <Delay = 0.00>
ST_61 : Operation 664 [1/1] (0.00ns)   --->   "%trunc_ln13_16 = trunc i32 %bitcast_ln13_16" [../src/matmul.cpp:13]   --->   Operation 664 'trunc' 'trunc_ln13_16' <Predicate = (!icmp_ln32_4)> <Delay = 0.00>
ST_61 : Operation 665 [1/1] (0.85ns)   --->   "%icmp_ln13_32 = icmp_ne  i8 %tmp_1074, i8 255" [../src/matmul.cpp:13]   --->   Operation 665 'icmp' 'icmp_ln13_32' <Predicate = (!icmp_ln32_4)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_61 : Operation 666 [1/1] (0.97ns)   --->   "%icmp_ln13_33 = icmp_eq  i23 %trunc_ln13_16, i23 0" [../src/matmul.cpp:13]   --->   Operation 666 'icmp' 'icmp_ln13_33' <Predicate = (!icmp_ln32_4)> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_61 : Operation 667 [1/1] (0.33ns)   --->   "%or_ln13_16 = or i1 %icmp_ln13_33, i1 %icmp_ln13_32" [../src/matmul.cpp:13]   --->   Operation 667 'or' 'or_ln13_16' <Predicate = (!icmp_ln32_4)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_61 : Operation 668 [1/2] (3.34ns)   --->   "%tmp_1076 = fcmp_ogt  i32 %arr_load_16, i32 %arr_load_17" [../src/matmul.cpp:13]   --->   Operation 668 'fcmp' 'tmp_1076' <Predicate = (!icmp_ln32_4)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_61 : Operation 669 [2/2] (3.34ns)   --->   "%tmp_1078 = fcmp_ogt  i32 %arr_load_16, i32 %arr_load_18" [../src/matmul.cpp:13]   --->   Operation 669 'fcmp' 'tmp_1078' <Predicate = (!icmp_ln32_4)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_61 : Operation 670 [2/2] (3.34ns)   --->   "%tmp_1080 = fcmp_ogt  i32 %arr_load_16, i32 %arr_load_19" [../src/matmul.cpp:13]   --->   Operation 670 'fcmp' 'tmp_1080' <Predicate = (!icmp_ln32_4)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 62 <SV = 37> <Delay = 4.01>
ST_62 : Operation 671 [1/1] (0.00ns)   --->   "%bitcast_ln13_17 = bitcast i32 %arr_load_17" [../src/matmul.cpp:13]   --->   Operation 671 'bitcast' 'bitcast_ln13_17' <Predicate = (!icmp_ln32_4)> <Delay = 0.00>
ST_62 : Operation 672 [1/1] (0.00ns)   --->   "%tmp_1075 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln13_17, i32 23, i32 30" [../src/matmul.cpp:13]   --->   Operation 672 'partselect' 'tmp_1075' <Predicate = (!icmp_ln32_4)> <Delay = 0.00>
ST_62 : Operation 673 [1/1] (0.00ns)   --->   "%trunc_ln13_17 = trunc i32 %bitcast_ln13_17" [../src/matmul.cpp:13]   --->   Operation 673 'trunc' 'trunc_ln13_17' <Predicate = (!icmp_ln32_4)> <Delay = 0.00>
ST_62 : Operation 674 [1/1] (0.85ns)   --->   "%icmp_ln13_34 = icmp_ne  i8 %tmp_1075, i8 255" [../src/matmul.cpp:13]   --->   Operation 674 'icmp' 'icmp_ln13_34' <Predicate = (!icmp_ln32_4)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_62 : Operation 675 [1/1] (0.97ns)   --->   "%icmp_ln13_35 = icmp_eq  i23 %trunc_ln13_17, i23 0" [../src/matmul.cpp:13]   --->   Operation 675 'icmp' 'icmp_ln13_35' <Predicate = (!icmp_ln32_4)> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_62 : Operation 676 [1/1] (0.33ns)   --->   "%or_ln13_17 = or i1 %icmp_ln13_35, i1 %icmp_ln13_34" [../src/matmul.cpp:13]   --->   Operation 676 'or' 'or_ln13_17' <Predicate = (!icmp_ln32_4)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_62 : Operation 677 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_14)   --->   "%and_ln13_38 = and i1 %or_ln13_16, i1 %or_ln13_17" [../src/matmul.cpp:13]   --->   Operation 677 'and' 'and_ln13_38' <Predicate = (!icmp_ln32_4)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_62 : Operation 678 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_14)   --->   "%and_ln13_39 = and i1 %and_ln13_38, i1 %tmp_1076" [../src/matmul.cpp:13]   --->   Operation 678 'and' 'and_ln13_39' <Predicate = (!icmp_ln32_4)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_62 : Operation 679 [1/1] (0.00ns)   --->   "%bitcast_ln13_18 = bitcast i32 %arr_load_18" [../src/matmul.cpp:13]   --->   Operation 679 'bitcast' 'bitcast_ln13_18' <Predicate = (!icmp_ln32_4)> <Delay = 0.00>
ST_62 : Operation 680 [1/1] (0.00ns)   --->   "%tmp_1077 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln13_18, i32 23, i32 30" [../src/matmul.cpp:13]   --->   Operation 680 'partselect' 'tmp_1077' <Predicate = (!icmp_ln32_4)> <Delay = 0.00>
ST_62 : Operation 681 [1/1] (0.00ns)   --->   "%trunc_ln13_18 = trunc i32 %bitcast_ln13_18" [../src/matmul.cpp:13]   --->   Operation 681 'trunc' 'trunc_ln13_18' <Predicate = (!icmp_ln32_4)> <Delay = 0.00>
ST_62 : Operation 682 [1/1] (0.85ns)   --->   "%icmp_ln13_36 = icmp_ne  i8 %tmp_1077, i8 255" [../src/matmul.cpp:13]   --->   Operation 682 'icmp' 'icmp_ln13_36' <Predicate = (!icmp_ln32_4)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_62 : Operation 683 [1/1] (0.97ns)   --->   "%icmp_ln13_37 = icmp_eq  i23 %trunc_ln13_18, i23 0" [../src/matmul.cpp:13]   --->   Operation 683 'icmp' 'icmp_ln13_37' <Predicate = (!icmp_ln32_4)> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_62 : Operation 684 [1/1] (0.33ns)   --->   "%or_ln13_18 = or i1 %icmp_ln13_37, i1 %icmp_ln13_36" [../src/matmul.cpp:13]   --->   Operation 684 'or' 'or_ln13_18' <Predicate = (!icmp_ln32_4)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_62 : Operation 685 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_44)   --->   "%and_ln13_40 = and i1 %or_ln13_16, i1 %or_ln13_18" [../src/matmul.cpp:13]   --->   Operation 685 'and' 'and_ln13_40' <Predicate = (!icmp_ln32_4)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_62 : Operation 686 [1/2] (3.34ns)   --->   "%tmp_1078 = fcmp_ogt  i32 %arr_load_16, i32 %arr_load_18" [../src/matmul.cpp:13]   --->   Operation 686 'fcmp' 'tmp_1078' <Predicate = (!icmp_ln32_4)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_62 : Operation 687 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_44)   --->   "%and_ln13_41 = and i1 %and_ln13_40, i1 %tmp_1078" [../src/matmul.cpp:13]   --->   Operation 687 'and' 'and_ln13_41' <Predicate = (!icmp_ln32_4)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_62 : Operation 688 [1/1] (0.00ns)   --->   "%bitcast_ln13_19 = bitcast i32 %arr_load_19" [../src/matmul.cpp:13]   --->   Operation 688 'bitcast' 'bitcast_ln13_19' <Predicate = (!icmp_ln32_4)> <Delay = 0.00>
ST_62 : Operation 689 [1/1] (0.00ns)   --->   "%tmp_1079 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln13_19, i32 23, i32 30" [../src/matmul.cpp:13]   --->   Operation 689 'partselect' 'tmp_1079' <Predicate = (!icmp_ln32_4)> <Delay = 0.00>
ST_62 : Operation 690 [1/1] (0.00ns)   --->   "%trunc_ln13_19 = trunc i32 %bitcast_ln13_19" [../src/matmul.cpp:13]   --->   Operation 690 'trunc' 'trunc_ln13_19' <Predicate = (!icmp_ln32_4)> <Delay = 0.00>
ST_62 : Operation 691 [1/1] (0.85ns)   --->   "%icmp_ln13_38 = icmp_ne  i8 %tmp_1079, i8 255" [../src/matmul.cpp:13]   --->   Operation 691 'icmp' 'icmp_ln13_38' <Predicate = (!icmp_ln32_4)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_62 : Operation 692 [1/1] (0.97ns)   --->   "%icmp_ln13_39 = icmp_eq  i23 %trunc_ln13_19, i23 0" [../src/matmul.cpp:13]   --->   Operation 692 'icmp' 'icmp_ln13_39' <Predicate = (!icmp_ln32_4)> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_62 : Operation 693 [1/1] (0.33ns)   --->   "%or_ln13_19 = or i1 %icmp_ln13_39, i1 %icmp_ln13_38" [../src/matmul.cpp:13]   --->   Operation 693 'or' 'or_ln13_19' <Predicate = (!icmp_ln32_4)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_62 : Operation 694 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_44)   --->   "%and_ln13_42 = and i1 %or_ln13_16, i1 %or_ln13_19" [../src/matmul.cpp:13]   --->   Operation 694 'and' 'and_ln13_42' <Predicate = (!icmp_ln32_4)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_62 : Operation 695 [1/2] (3.34ns)   --->   "%tmp_1080 = fcmp_ogt  i32 %arr_load_16, i32 %arr_load_19" [../src/matmul.cpp:13]   --->   Operation 695 'fcmp' 'tmp_1080' <Predicate = (!icmp_ln32_4)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_62 : Operation 696 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_44)   --->   "%and_ln13_43 = and i1 %and_ln13_42, i1 %tmp_1080" [../src/matmul.cpp:13]   --->   Operation 696 'and' 'and_ln13_43' <Predicate = (!icmp_ln32_4)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_62 : Operation 697 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln13_44 = and i1 %and_ln13_41, i1 %and_ln13_43" [../src/matmul.cpp:13]   --->   Operation 697 'and' 'and_ln13_44' <Predicate = (!icmp_ln32_4)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_62 : Operation 698 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln13_14 = and i1 %and_ln13_44, i1 %and_ln13_39" [../src/matmul.cpp:13]   --->   Operation 698 'and' 'and_ln13_14' <Predicate = (!icmp_ln32_4)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_62 : Operation 699 [2/2] (3.34ns)   --->   "%tmp_1081 = fcmp_ogt  i32 %arr_load_17, i32 %arr_load_18" [../src/matmul.cpp:16]   --->   Operation 699 'fcmp' 'tmp_1081' <Predicate = (!icmp_ln32_4)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_62 : Operation 700 [2/2] (3.34ns)   --->   "%tmp_1082 = fcmp_ogt  i32 %arr_load_17, i32 %arr_load_19" [../src/matmul.cpp:16]   --->   Operation 700 'fcmp' 'tmp_1082' <Predicate = (!icmp_ln32_4)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 63 <SV = 38> <Delay = 4.12>
ST_63 : Operation 701 [1/1] (0.00ns) (grouped into LUT with out node and_ln16_4)   --->   "%and_ln16_30 = and i1 %or_ln13_17, i1 %or_ln13_18" [../src/matmul.cpp:16]   --->   Operation 701 'and' 'and_ln16_30' <Predicate = (!icmp_ln32_4)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_63 : Operation 702 [1/2] (3.34ns)   --->   "%tmp_1081 = fcmp_ogt  i32 %arr_load_17, i32 %arr_load_18" [../src/matmul.cpp:16]   --->   Operation 702 'fcmp' 'tmp_1081' <Predicate = (!icmp_ln32_4)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_63 : Operation 703 [1/1] (0.00ns) (grouped into LUT with out node and_ln16_4)   --->   "%and_ln16_31 = and i1 %and_ln16_30, i1 %tmp_1081" [../src/matmul.cpp:16]   --->   Operation 703 'and' 'and_ln16_31' <Predicate = (!icmp_ln32_4)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_63 : Operation 704 [1/1] (0.00ns) (grouped into LUT with out node and_ln16_4)   --->   "%and_ln16_32 = and i1 %or_ln13_17, i1 %or_ln13_19" [../src/matmul.cpp:16]   --->   Operation 704 'and' 'and_ln16_32' <Predicate = (!icmp_ln32_4)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_63 : Operation 705 [1/2] (3.34ns)   --->   "%tmp_1082 = fcmp_ogt  i32 %arr_load_17, i32 %arr_load_19" [../src/matmul.cpp:16]   --->   Operation 705 'fcmp' 'tmp_1082' <Predicate = (!icmp_ln32_4)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_63 : Operation 706 [1/1] (0.00ns) (grouped into LUT with out node and_ln16_4)   --->   "%and_ln16_33 = and i1 %and_ln16_32, i1 %tmp_1082" [../src/matmul.cpp:16]   --->   Operation 706 'and' 'and_ln16_33' <Predicate = (!icmp_ln32_4)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_63 : Operation 707 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln16_4 = and i1 %and_ln16_31, i1 %and_ln16_33" [../src/matmul.cpp:16]   --->   Operation 707 'and' 'and_ln16_4' <Predicate = (!icmp_ln32_4)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_63 : Operation 708 [2/2] (3.34ns)   --->   "%tmp_1083 = fcmp_ogt  i32 %arr_load_18, i32 %arr_load_19" [../src/matmul.cpp:19]   --->   Operation 708 'fcmp' 'tmp_1083' <Predicate = (!icmp_ln32_4)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_63 : Operation 709 [1/1] (0.00ns) (grouped into LUT with out node select_ln16_4)   --->   "%select_ln13_4 = select i1 %and_ln13_14, i11 %add_ln8_16, i11 %add_ln8_19" [../src/matmul.cpp:13]   --->   Operation 709 'select' 'select_ln13_4' <Predicate = (!icmp_ln32_4)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_63 : Operation 710 [1/1] (0.00ns) (grouped into LUT with out node select_ln16_4)   --->   "%xor_ln13_4 = xor i1 %and_ln13_14, i1 1" [../src/matmul.cpp:13]   --->   Operation 710 'xor' 'xor_ln13_4' <Predicate = (!icmp_ln32_4)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_63 : Operation 711 [1/1] (0.00ns) (grouped into LUT with out node select_ln16_4)   --->   "%and_ln16_34 = and i1 %and_ln16_4, i1 %xor_ln13_4" [../src/matmul.cpp:16]   --->   Operation 711 'and' 'and_ln16_34' <Predicate = (!icmp_ln32_4)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_63 : Operation 712 [1/1] (0.45ns) (out node of the LUT)   --->   "%select_ln16_4 = select i1 %and_ln16_34, i11 %add_ln8_17, i11 %select_ln13_4" [../src/matmul.cpp:16]   --->   Operation 712 'select' 'select_ln16_4' <Predicate = (!icmp_ln32_4)> <Delay = 0.45> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 64 <SV = 39> <Delay = 5.48>
ST_64 : Operation 713 [1/1] (0.00ns) (grouped into LUT with out node and_ln19_14)   --->   "%and_ln19_12 = and i1 %or_ln13_18, i1 %or_ln13_19" [../src/matmul.cpp:19]   --->   Operation 713 'and' 'and_ln19_12' <Predicate = (!icmp_ln32_4)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_64 : Operation 714 [1/2] (3.34ns)   --->   "%tmp_1083 = fcmp_ogt  i32 %arr_load_18, i32 %arr_load_19" [../src/matmul.cpp:19]   --->   Operation 714 'fcmp' 'tmp_1083' <Predicate = (!icmp_ln32_4)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_64 : Operation 715 [1/1] (0.00ns) (grouped into LUT with out node and_ln19_14)   --->   "%and_ln19_13 = and i1 %and_ln19_12, i1 %tmp_1083" [../src/matmul.cpp:19]   --->   Operation 715 'and' 'and_ln19_13' <Predicate = (!icmp_ln32_4)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_64 : Operation 716 [1/1] (0.00ns) (grouped into LUT with out node and_ln19_14)   --->   "%or_ln16_4 = or i1 %and_ln13_14, i1 %and_ln16_4" [../src/matmul.cpp:16]   --->   Operation 716 'or' 'or_ln16_4' <Predicate = (!icmp_ln32_4)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_64 : Operation 717 [1/1] (0.00ns) (grouped into LUT with out node and_ln19_14)   --->   "%xor_ln16_4 = xor i1 %or_ln16_4, i1 1" [../src/matmul.cpp:16]   --->   Operation 717 'xor' 'xor_ln16_4' <Predicate = (!icmp_ln32_4)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_64 : Operation 718 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln19_14 = and i1 %and_ln19_13, i1 %xor_ln16_4" [../src/matmul.cpp:19]   --->   Operation 718 'and' 'and_ln19_14' <Predicate = (!icmp_ln32_4)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_64 : Operation 719 [1/1] (0.45ns) (out node of the LUT)   --->   "%select_ln19_4 = select i1 %and_ln19_14, i11 %add_ln8_18, i11 %select_ln16_4" [../src/matmul.cpp:19]   --->   Operation 719 'select' 'select_ln19_4' <Predicate = (!icmp_ln32_4)> <Delay = 0.45> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_64 : Operation 720 [1/1] (0.00ns)   --->   "%zext_ln8_44 = zext i11 %select_ln19_4" [../src/matmul.cpp:8]   --->   Operation 720 'zext' 'zext_ln8_44' <Predicate = (!icmp_ln32_4)> <Delay = 0.00>
ST_64 : Operation 721 [1/1] (0.00ns)   --->   "%arr_addr_44 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_44" [../src/matmul.cpp:8]   --->   Operation 721 'getelementptr' 'arr_addr_44' <Predicate = (!icmp_ln32_4)> <Delay = 0.00>
ST_64 : Operation 722 [2/2] (1.35ns)   --->   "%arr_load_44 = load i11 %arr_addr_44" [../src/matmul.cpp:19]   --->   Operation 722 'load' 'arr_load_44' <Predicate = (!icmp_ln32_4)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>

State 65 <SV = 40> <Delay = 2.70>
ST_65 : Operation 723 [1/1] (0.00ns)   --->   "%t_1_4_cast = zext i11 %t_1_4" [../src/matmul.cpp:34]   --->   Operation 723 'zext' 't_1_4_cast' <Predicate = (!icmp_ln32_4)> <Delay = 0.00>
ST_65 : Operation 724 [1/1] (0.00ns)   --->   "%specloopname_ln28 = specloopname void @_ssdm_op_SpecLoopName, void @empty_0" [../src/matmul.cpp:28]   --->   Operation 724 'specloopname' 'specloopname_ln28' <Predicate = (!icmp_ln32_4)> <Delay = 0.00>
ST_65 : Operation 725 [1/2] (1.35ns)   --->   "%arr_load_44 = load i11 %arr_addr_44" [../src/matmul.cpp:19]   --->   Operation 725 'load' 'arr_load_44' <Predicate = (!icmp_ln32_4)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_65 : Operation 726 [1/1] (0.94ns)   --->   "%add_ln34_4 = add i11 %t_1_4, i11 1" [../src/matmul.cpp:34]   --->   Operation 726 'add' 'add_ln34_4' <Predicate = (!icmp_ln32_4)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_65 : Operation 727 [1/1] (0.00ns)   --->   "%out_addr_4 = getelementptr i32 %out_r, i64 0, i64 %t_1_4_cast" [../src/matmul.cpp:34]   --->   Operation 727 'getelementptr' 'out_addr_4' <Predicate = (!icmp_ln32_4)> <Delay = 0.00>
ST_65 : Operation 728 [1/1] (1.35ns)   --->   "%store_ln34 = store i32 %arr_load_44, i11 %out_addr_4" [../src/matmul.cpp:34]   --->   Operation 728 'store' 'store_ln34' <Predicate = (!icmp_ln32_4)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_65 : Operation 729 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 729 'br' 'br_ln0' <Predicate = (!icmp_ln32_4)> <Delay = 0.00>

State 66 <SV = 35> <Delay = 2.95>
ST_66 : Operation 730 [1/1] (0.00ns)   --->   "%trunc_ln29_5 = trunc i32 %add_ln29_9" [../src/matmul.cpp:29]   --->   Operation 730 'trunc' 'trunc_ln29_5' <Predicate = true> <Delay = 0.00>
ST_66 : Operation 731 [1/1] (1.20ns)   --->   "%add_ln29_12 = add i32 %zext_ln29_3, i32 %add_ln29_9" [../src/matmul.cpp:29]   --->   Operation 731 'add' 'add_ln29_12' <Predicate = true> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_66 : Operation 732 [1/1] (1.47ns)   --->   "%add_ln29_13 = add i64 %i_0, i64 10" [../src/matmul.cpp:29]   --->   Operation 732 'add' 'add_ln29_13' <Predicate = true> <Delay = 1.47> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_66 : Operation 733 [1/1] (0.94ns)   --->   "%add_ln29_14 = add i11 %trunc_ln29_1, i11 10" [../src/matmul.cpp:29]   --->   Operation 733 'add' 'add_ln29_14' <Predicate = true> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_66 : Operation 734 [1/1] (1.48ns)   --->   "%icmp_ln29_5 = icmp_slt  i64 %add_ln29_13, i64 %zext_ln29" [../src/matmul.cpp:29]   --->   Operation 734 'icmp' 'icmp_ln29_5' <Predicate = true> <Delay = 1.48> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_66 : Operation 735 [1/1] (0.00ns)   --->   "%br_ln29 = br i1 %icmp_ln29_5, void %._crit_edge10, void %.split4.5" [../src/matmul.cpp:29]   --->   Operation 735 'br' 'br_ln29' <Predicate = true> <Delay = 0.00>
ST_66 : Operation 736 [1/1] (0.00ns)   --->   "%empty_60 = or i11 %add_ln29_14, i11 1" [../src/matmul.cpp:29]   --->   Operation 736 'or' 'empty_60' <Predicate = (icmp_ln29_5)> <Delay = 0.00>
ST_66 : Operation 737 [4/4] (0.69ns) (root node of the DSP)   --->   "%empty_61 = mul i11 %add_ln29_14, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 737 'mul' 'empty_61' <Predicate = (icmp_ln29_5)> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_66 : Operation 738 [4/4] (0.69ns) (root node of the DSP)   --->   "%empty_62 = mul i11 %empty_60, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 738 'mul' 'empty_62' <Predicate = (icmp_ln29_5)> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_66 : Operation 739 [1/1] (0.94ns)   --->   "%add_ln32_14 = add i11 %zext_ln29_4, i11 %trunc_ln29_5" [../src/matmul.cpp:32]   --->   Operation 739 'add' 'add_ln32_14' <Predicate = (icmp_ln29_5)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 67 <SV = 36> <Delay = 0.69>
ST_67 : Operation 740 [3/4] (0.69ns) (root node of the DSP)   --->   "%empty_61 = mul i11 %add_ln29_14, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 740 'mul' 'empty_61' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_67 : Operation 741 [3/4] (0.69ns) (root node of the DSP)   --->   "%empty_62 = mul i11 %empty_60, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 741 'mul' 'empty_62' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 68 <SV = 37> <Delay = 0.69>
ST_68 : Operation 742 [2/4] (0.69ns) (root node of the DSP)   --->   "%empty_61 = mul i11 %add_ln29_14, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 742 'mul' 'empty_61' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_68 : Operation 743 [2/4] (0.69ns) (root node of the DSP)   --->   "%empty_62 = mul i11 %empty_60, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 743 'mul' 'empty_62' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 69 <SV = 38> <Delay = 0.48>
ST_69 : Operation 744 [1/4] (0.00ns) (root node of the DSP)   --->   "%empty_61 = mul i11 %add_ln29_14, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 744 'mul' 'empty_61' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_69 : Operation 745 [1/4] (0.00ns) (root node of the DSP)   --->   "%empty_62 = mul i11 %empty_60, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 745 'mul' 'empty_62' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_69 : Operation 746 [1/1] (0.48ns)   --->   "%br_ln32 = br void" [../src/matmul.cpp:32]   --->   Operation 746 'br' 'br_ln32' <Predicate = true> <Delay = 0.48>

State 70 <SV = 39> <Delay = 2.29>
ST_70 : Operation 747 [1/1] (0.00ns)   --->   "%t_1_5 = phi i11 %add_ln34_5, void %.split.5_ifconv, i11 %add_ln32_14, void %.split4.5" [../src/matmul.cpp:34]   --->   Operation 747 'phi' 't_1_5' <Predicate = true> <Delay = 0.00>
ST_70 : Operation 748 [1/1] (0.00ns)   --->   "%j_5 = phi i64 %add_ln32_5, void %.split.5_ifconv, i64 0, void %.split4.5" [../src/matmul.cpp:32]   --->   Operation 748 'phi' 'j_5' <Predicate = true> <Delay = 0.00>
ST_70 : Operation 749 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 749 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_70 : Operation 750 [1/1] (1.48ns)   --->   "%icmp_ln32_5 = icmp_eq  i64 %j_5, i64 %zext_ln32" [../src/matmul.cpp:32]   --->   Operation 750 'icmp' 'icmp_ln32_5' <Predicate = true> <Delay = 1.48> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_70 : Operation 751 [1/1] (0.00ns)   --->   "%empty_63 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 0, i64 32, i64 0"   --->   Operation 751 'speclooptripcount' 'empty_63' <Predicate = true> <Delay = 0.00>
ST_70 : Operation 752 [1/1] (0.00ns)   --->   "%br_ln32 = br i1 %icmp_ln32_5, void %.split.5_ifconv, void %._crit_edge.loopexit.5" [../src/matmul.cpp:32]   --->   Operation 752 'br' 'br_ln32' <Predicate = true> <Delay = 0.00>
ST_70 : Operation 753 [1/1] (0.00ns)   --->   "%empty_64 = trunc i64 %j_5" [../src/matmul.cpp:32]   --->   Operation 753 'trunc' 'empty_64' <Predicate = (!icmp_ln32_5)> <Delay = 0.00>
ST_70 : Operation 754 [1/1] (0.94ns)   --->   "%add_ln8_20 = add i11 %empty_64, i11 %empty_61" [../src/matmul.cpp:8]   --->   Operation 754 'add' 'add_ln8_20' <Predicate = (!icmp_ln32_5)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_70 : Operation 755 [1/1] (0.00ns)   --->   "%zext_ln8_20 = zext i11 %add_ln8_20" [../src/matmul.cpp:8]   --->   Operation 755 'zext' 'zext_ln8_20' <Predicate = (!icmp_ln32_5)> <Delay = 0.00>
ST_70 : Operation 756 [1/1] (0.00ns)   --->   "%arr_addr_20 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_20" [../src/matmul.cpp:8]   --->   Operation 756 'getelementptr' 'arr_addr_20' <Predicate = (!icmp_ln32_5)> <Delay = 0.00>
ST_70 : Operation 757 [2/2] (1.35ns)   --->   "%arr_load_20 = load i11 %arr_addr_20" [../src/matmul.cpp:8]   --->   Operation 757 'load' 'arr_load_20' <Predicate = (!icmp_ln32_5)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_70 : Operation 758 [1/1] (0.94ns)   --->   "%add_ln8_21 = add i11 %empty_64, i11 %empty_62" [../src/matmul.cpp:8]   --->   Operation 758 'add' 'add_ln8_21' <Predicate = (!icmp_ln32_5)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_70 : Operation 759 [1/1] (0.00ns)   --->   "%zext_ln8_21 = zext i11 %add_ln8_21" [../src/matmul.cpp:8]   --->   Operation 759 'zext' 'zext_ln8_21' <Predicate = (!icmp_ln32_5)> <Delay = 0.00>
ST_70 : Operation 760 [1/1] (0.00ns)   --->   "%arr_addr_21 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_21" [../src/matmul.cpp:8]   --->   Operation 760 'getelementptr' 'arr_addr_21' <Predicate = (!icmp_ln32_5)> <Delay = 0.00>
ST_70 : Operation 761 [2/2] (1.35ns)   --->   "%arr_load_21 = load i11 %arr_addr_21" [../src/matmul.cpp:8]   --->   Operation 761 'load' 'arr_load_21' <Predicate = (!icmp_ln32_5)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>

State 71 <SV = 40> <Delay = 4.70>
ST_71 : Operation 762 [1/2] (1.35ns)   --->   "%arr_load_20 = load i11 %arr_addr_20" [../src/matmul.cpp:8]   --->   Operation 762 'load' 'arr_load_20' <Predicate = (!icmp_ln32_5)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_71 : Operation 763 [1/2] (1.35ns)   --->   "%arr_load_21 = load i11 %arr_addr_21" [../src/matmul.cpp:8]   --->   Operation 763 'load' 'arr_load_21' <Predicate = (!icmp_ln32_5)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_71 : Operation 764 [1/1] (0.00ns)   --->   "%or_ln34_5 = or i11 %empty_64, i11 1" [../src/matmul.cpp:34]   --->   Operation 764 'or' 'or_ln34_5' <Predicate = (!icmp_ln32_5)> <Delay = 0.00>
ST_71 : Operation 765 [1/1] (0.94ns)   --->   "%add_ln8_22 = add i11 %or_ln34_5, i11 %empty_61" [../src/matmul.cpp:8]   --->   Operation 765 'add' 'add_ln8_22' <Predicate = (!icmp_ln32_5)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_71 : Operation 766 [1/1] (0.00ns)   --->   "%zext_ln8_22 = zext i11 %add_ln8_22" [../src/matmul.cpp:8]   --->   Operation 766 'zext' 'zext_ln8_22' <Predicate = (!icmp_ln32_5)> <Delay = 0.00>
ST_71 : Operation 767 [1/1] (0.00ns)   --->   "%arr_addr_22 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_22" [../src/matmul.cpp:8]   --->   Operation 767 'getelementptr' 'arr_addr_22' <Predicate = (!icmp_ln32_5)> <Delay = 0.00>
ST_71 : Operation 768 [2/2] (1.35ns)   --->   "%arr_load_22 = load i11 %arr_addr_22" [../src/matmul.cpp:8]   --->   Operation 768 'load' 'arr_load_22' <Predicate = (!icmp_ln32_5)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_71 : Operation 769 [1/1] (0.94ns)   --->   "%add_ln8_23 = add i11 %or_ln34_5, i11 %empty_62" [../src/matmul.cpp:8]   --->   Operation 769 'add' 'add_ln8_23' <Predicate = (!icmp_ln32_5)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_71 : Operation 770 [1/1] (0.00ns)   --->   "%zext_ln8_23 = zext i11 %add_ln8_23" [../src/matmul.cpp:8]   --->   Operation 770 'zext' 'zext_ln8_23' <Predicate = (!icmp_ln32_5)> <Delay = 0.00>
ST_71 : Operation 771 [1/1] (0.00ns)   --->   "%arr_addr_23 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_23" [../src/matmul.cpp:8]   --->   Operation 771 'getelementptr' 'arr_addr_23' <Predicate = (!icmp_ln32_5)> <Delay = 0.00>
ST_71 : Operation 772 [2/2] (1.35ns)   --->   "%arr_load_23 = load i11 %arr_addr_23" [../src/matmul.cpp:8]   --->   Operation 772 'load' 'arr_load_23' <Predicate = (!icmp_ln32_5)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_71 : Operation 773 [2/2] (3.34ns)   --->   "%tmp_1086 = fcmp_ogt  i32 %arr_load_20, i32 %arr_load_21" [../src/matmul.cpp:13]   --->   Operation 773 'fcmp' 'tmp_1086' <Predicate = (!icmp_ln32_5)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 72 <SV = 41> <Delay = 4.70>
ST_72 : Operation 774 [1/1] (1.47ns)   --->   "%add_ln32_5 = add i64 %j_5, i64 2" [../src/matmul.cpp:32]   --->   Operation 774 'add' 'add_ln32_5' <Predicate = (!icmp_ln32_5)> <Delay = 1.47> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_72 : Operation 775 [1/2] (1.35ns)   --->   "%arr_load_22 = load i11 %arr_addr_22" [../src/matmul.cpp:8]   --->   Operation 775 'load' 'arr_load_22' <Predicate = (!icmp_ln32_5)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_72 : Operation 776 [1/2] (1.35ns)   --->   "%arr_load_23 = load i11 %arr_addr_23" [../src/matmul.cpp:8]   --->   Operation 776 'load' 'arr_load_23' <Predicate = (!icmp_ln32_5)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_72 : Operation 777 [1/1] (0.00ns)   --->   "%bitcast_ln13_20 = bitcast i32 %arr_load_20" [../src/matmul.cpp:13]   --->   Operation 777 'bitcast' 'bitcast_ln13_20' <Predicate = (!icmp_ln32_5)> <Delay = 0.00>
ST_72 : Operation 778 [1/1] (0.00ns)   --->   "%tmp_1084 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln13_20, i32 23, i32 30" [../src/matmul.cpp:13]   --->   Operation 778 'partselect' 'tmp_1084' <Predicate = (!icmp_ln32_5)> <Delay = 0.00>
ST_72 : Operation 779 [1/1] (0.00ns)   --->   "%trunc_ln13_20 = trunc i32 %bitcast_ln13_20" [../src/matmul.cpp:13]   --->   Operation 779 'trunc' 'trunc_ln13_20' <Predicate = (!icmp_ln32_5)> <Delay = 0.00>
ST_72 : Operation 780 [1/1] (0.85ns)   --->   "%icmp_ln13_40 = icmp_ne  i8 %tmp_1084, i8 255" [../src/matmul.cpp:13]   --->   Operation 780 'icmp' 'icmp_ln13_40' <Predicate = (!icmp_ln32_5)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_72 : Operation 781 [1/1] (0.97ns)   --->   "%icmp_ln13_41 = icmp_eq  i23 %trunc_ln13_20, i23 0" [../src/matmul.cpp:13]   --->   Operation 781 'icmp' 'icmp_ln13_41' <Predicate = (!icmp_ln32_5)> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_72 : Operation 782 [1/1] (0.33ns)   --->   "%or_ln13_20 = or i1 %icmp_ln13_41, i1 %icmp_ln13_40" [../src/matmul.cpp:13]   --->   Operation 782 'or' 'or_ln13_20' <Predicate = (!icmp_ln32_5)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_72 : Operation 783 [1/2] (3.34ns)   --->   "%tmp_1086 = fcmp_ogt  i32 %arr_load_20, i32 %arr_load_21" [../src/matmul.cpp:13]   --->   Operation 783 'fcmp' 'tmp_1086' <Predicate = (!icmp_ln32_5)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_72 : Operation 784 [2/2] (3.34ns)   --->   "%tmp_1088 = fcmp_ogt  i32 %arr_load_20, i32 %arr_load_22" [../src/matmul.cpp:13]   --->   Operation 784 'fcmp' 'tmp_1088' <Predicate = (!icmp_ln32_5)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_72 : Operation 785 [2/2] (3.34ns)   --->   "%tmp_1090 = fcmp_ogt  i32 %arr_load_20, i32 %arr_load_23" [../src/matmul.cpp:13]   --->   Operation 785 'fcmp' 'tmp_1090' <Predicate = (!icmp_ln32_5)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 73 <SV = 42> <Delay = 4.01>
ST_73 : Operation 786 [1/1] (0.00ns)   --->   "%bitcast_ln13_21 = bitcast i32 %arr_load_21" [../src/matmul.cpp:13]   --->   Operation 786 'bitcast' 'bitcast_ln13_21' <Predicate = (!icmp_ln32_5)> <Delay = 0.00>
ST_73 : Operation 787 [1/1] (0.00ns)   --->   "%tmp_1085 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln13_21, i32 23, i32 30" [../src/matmul.cpp:13]   --->   Operation 787 'partselect' 'tmp_1085' <Predicate = (!icmp_ln32_5)> <Delay = 0.00>
ST_73 : Operation 788 [1/1] (0.00ns)   --->   "%trunc_ln13_21 = trunc i32 %bitcast_ln13_21" [../src/matmul.cpp:13]   --->   Operation 788 'trunc' 'trunc_ln13_21' <Predicate = (!icmp_ln32_5)> <Delay = 0.00>
ST_73 : Operation 789 [1/1] (0.85ns)   --->   "%icmp_ln13_42 = icmp_ne  i8 %tmp_1085, i8 255" [../src/matmul.cpp:13]   --->   Operation 789 'icmp' 'icmp_ln13_42' <Predicate = (!icmp_ln32_5)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_73 : Operation 790 [1/1] (0.97ns)   --->   "%icmp_ln13_43 = icmp_eq  i23 %trunc_ln13_21, i23 0" [../src/matmul.cpp:13]   --->   Operation 790 'icmp' 'icmp_ln13_43' <Predicate = (!icmp_ln32_5)> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_73 : Operation 791 [1/1] (0.33ns)   --->   "%or_ln13_21 = or i1 %icmp_ln13_43, i1 %icmp_ln13_42" [../src/matmul.cpp:13]   --->   Operation 791 'or' 'or_ln13_21' <Predicate = (!icmp_ln32_5)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_73 : Operation 792 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_15)   --->   "%and_ln13_45 = and i1 %or_ln13_20, i1 %or_ln13_21" [../src/matmul.cpp:13]   --->   Operation 792 'and' 'and_ln13_45' <Predicate = (!icmp_ln32_5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_73 : Operation 793 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_15)   --->   "%and_ln13_46 = and i1 %and_ln13_45, i1 %tmp_1086" [../src/matmul.cpp:13]   --->   Operation 793 'and' 'and_ln13_46' <Predicate = (!icmp_ln32_5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_73 : Operation 794 [1/1] (0.00ns)   --->   "%bitcast_ln13_22 = bitcast i32 %arr_load_22" [../src/matmul.cpp:13]   --->   Operation 794 'bitcast' 'bitcast_ln13_22' <Predicate = (!icmp_ln32_5)> <Delay = 0.00>
ST_73 : Operation 795 [1/1] (0.00ns)   --->   "%tmp_1087 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln13_22, i32 23, i32 30" [../src/matmul.cpp:13]   --->   Operation 795 'partselect' 'tmp_1087' <Predicate = (!icmp_ln32_5)> <Delay = 0.00>
ST_73 : Operation 796 [1/1] (0.00ns)   --->   "%trunc_ln13_22 = trunc i32 %bitcast_ln13_22" [../src/matmul.cpp:13]   --->   Operation 796 'trunc' 'trunc_ln13_22' <Predicate = (!icmp_ln32_5)> <Delay = 0.00>
ST_73 : Operation 797 [1/1] (0.85ns)   --->   "%icmp_ln13_44 = icmp_ne  i8 %tmp_1087, i8 255" [../src/matmul.cpp:13]   --->   Operation 797 'icmp' 'icmp_ln13_44' <Predicate = (!icmp_ln32_5)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_73 : Operation 798 [1/1] (0.97ns)   --->   "%icmp_ln13_45 = icmp_eq  i23 %trunc_ln13_22, i23 0" [../src/matmul.cpp:13]   --->   Operation 798 'icmp' 'icmp_ln13_45' <Predicate = (!icmp_ln32_5)> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_73 : Operation 799 [1/1] (0.33ns)   --->   "%or_ln13_22 = or i1 %icmp_ln13_45, i1 %icmp_ln13_44" [../src/matmul.cpp:13]   --->   Operation 799 'or' 'or_ln13_22' <Predicate = (!icmp_ln32_5)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_73 : Operation 800 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_51)   --->   "%and_ln13_47 = and i1 %or_ln13_20, i1 %or_ln13_22" [../src/matmul.cpp:13]   --->   Operation 800 'and' 'and_ln13_47' <Predicate = (!icmp_ln32_5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_73 : Operation 801 [1/2] (3.34ns)   --->   "%tmp_1088 = fcmp_ogt  i32 %arr_load_20, i32 %arr_load_22" [../src/matmul.cpp:13]   --->   Operation 801 'fcmp' 'tmp_1088' <Predicate = (!icmp_ln32_5)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_73 : Operation 802 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_51)   --->   "%and_ln13_48 = and i1 %and_ln13_47, i1 %tmp_1088" [../src/matmul.cpp:13]   --->   Operation 802 'and' 'and_ln13_48' <Predicate = (!icmp_ln32_5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_73 : Operation 803 [1/1] (0.00ns)   --->   "%bitcast_ln13_23 = bitcast i32 %arr_load_23" [../src/matmul.cpp:13]   --->   Operation 803 'bitcast' 'bitcast_ln13_23' <Predicate = (!icmp_ln32_5)> <Delay = 0.00>
ST_73 : Operation 804 [1/1] (0.00ns)   --->   "%tmp_1089 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln13_23, i32 23, i32 30" [../src/matmul.cpp:13]   --->   Operation 804 'partselect' 'tmp_1089' <Predicate = (!icmp_ln32_5)> <Delay = 0.00>
ST_73 : Operation 805 [1/1] (0.00ns)   --->   "%trunc_ln13_23 = trunc i32 %bitcast_ln13_23" [../src/matmul.cpp:13]   --->   Operation 805 'trunc' 'trunc_ln13_23' <Predicate = (!icmp_ln32_5)> <Delay = 0.00>
ST_73 : Operation 806 [1/1] (0.85ns)   --->   "%icmp_ln13_46 = icmp_ne  i8 %tmp_1089, i8 255" [../src/matmul.cpp:13]   --->   Operation 806 'icmp' 'icmp_ln13_46' <Predicate = (!icmp_ln32_5)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_73 : Operation 807 [1/1] (0.97ns)   --->   "%icmp_ln13_47 = icmp_eq  i23 %trunc_ln13_23, i23 0" [../src/matmul.cpp:13]   --->   Operation 807 'icmp' 'icmp_ln13_47' <Predicate = (!icmp_ln32_5)> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_73 : Operation 808 [1/1] (0.33ns)   --->   "%or_ln13_23 = or i1 %icmp_ln13_47, i1 %icmp_ln13_46" [../src/matmul.cpp:13]   --->   Operation 808 'or' 'or_ln13_23' <Predicate = (!icmp_ln32_5)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_73 : Operation 809 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_51)   --->   "%and_ln13_49 = and i1 %or_ln13_20, i1 %or_ln13_23" [../src/matmul.cpp:13]   --->   Operation 809 'and' 'and_ln13_49' <Predicate = (!icmp_ln32_5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_73 : Operation 810 [1/2] (3.34ns)   --->   "%tmp_1090 = fcmp_ogt  i32 %arr_load_20, i32 %arr_load_23" [../src/matmul.cpp:13]   --->   Operation 810 'fcmp' 'tmp_1090' <Predicate = (!icmp_ln32_5)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_73 : Operation 811 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_51)   --->   "%and_ln13_50 = and i1 %and_ln13_49, i1 %tmp_1090" [../src/matmul.cpp:13]   --->   Operation 811 'and' 'and_ln13_50' <Predicate = (!icmp_ln32_5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_73 : Operation 812 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln13_51 = and i1 %and_ln13_48, i1 %and_ln13_50" [../src/matmul.cpp:13]   --->   Operation 812 'and' 'and_ln13_51' <Predicate = (!icmp_ln32_5)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_73 : Operation 813 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln13_15 = and i1 %and_ln13_51, i1 %and_ln13_46" [../src/matmul.cpp:13]   --->   Operation 813 'and' 'and_ln13_15' <Predicate = (!icmp_ln32_5)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_73 : Operation 814 [2/2] (3.34ns)   --->   "%tmp_1091 = fcmp_ogt  i32 %arr_load_21, i32 %arr_load_22" [../src/matmul.cpp:16]   --->   Operation 814 'fcmp' 'tmp_1091' <Predicate = (!icmp_ln32_5)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_73 : Operation 815 [2/2] (3.34ns)   --->   "%tmp_1092 = fcmp_ogt  i32 %arr_load_21, i32 %arr_load_23" [../src/matmul.cpp:16]   --->   Operation 815 'fcmp' 'tmp_1092' <Predicate = (!icmp_ln32_5)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 74 <SV = 43> <Delay = 4.12>
ST_74 : Operation 816 [1/1] (0.00ns) (grouped into LUT with out node and_ln16_5)   --->   "%and_ln16_35 = and i1 %or_ln13_21, i1 %or_ln13_22" [../src/matmul.cpp:16]   --->   Operation 816 'and' 'and_ln16_35' <Predicate = (!icmp_ln32_5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_74 : Operation 817 [1/2] (3.34ns)   --->   "%tmp_1091 = fcmp_ogt  i32 %arr_load_21, i32 %arr_load_22" [../src/matmul.cpp:16]   --->   Operation 817 'fcmp' 'tmp_1091' <Predicate = (!icmp_ln32_5)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_74 : Operation 818 [1/1] (0.00ns) (grouped into LUT with out node and_ln16_5)   --->   "%and_ln16_36 = and i1 %and_ln16_35, i1 %tmp_1091" [../src/matmul.cpp:16]   --->   Operation 818 'and' 'and_ln16_36' <Predicate = (!icmp_ln32_5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_74 : Operation 819 [1/1] (0.00ns) (grouped into LUT with out node and_ln16_5)   --->   "%and_ln16_37 = and i1 %or_ln13_21, i1 %or_ln13_23" [../src/matmul.cpp:16]   --->   Operation 819 'and' 'and_ln16_37' <Predicate = (!icmp_ln32_5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_74 : Operation 820 [1/2] (3.34ns)   --->   "%tmp_1092 = fcmp_ogt  i32 %arr_load_21, i32 %arr_load_23" [../src/matmul.cpp:16]   --->   Operation 820 'fcmp' 'tmp_1092' <Predicate = (!icmp_ln32_5)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_74 : Operation 821 [1/1] (0.00ns) (grouped into LUT with out node and_ln16_5)   --->   "%and_ln16_38 = and i1 %and_ln16_37, i1 %tmp_1092" [../src/matmul.cpp:16]   --->   Operation 821 'and' 'and_ln16_38' <Predicate = (!icmp_ln32_5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_74 : Operation 822 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln16_5 = and i1 %and_ln16_36, i1 %and_ln16_38" [../src/matmul.cpp:16]   --->   Operation 822 'and' 'and_ln16_5' <Predicate = (!icmp_ln32_5)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_74 : Operation 823 [2/2] (3.34ns)   --->   "%tmp_1093 = fcmp_ogt  i32 %arr_load_22, i32 %arr_load_23" [../src/matmul.cpp:19]   --->   Operation 823 'fcmp' 'tmp_1093' <Predicate = (!icmp_ln32_5)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_74 : Operation 824 [1/1] (0.00ns) (grouped into LUT with out node select_ln16_5)   --->   "%select_ln13_5 = select i1 %and_ln13_15, i11 %add_ln8_20, i11 %add_ln8_23" [../src/matmul.cpp:13]   --->   Operation 824 'select' 'select_ln13_5' <Predicate = (!icmp_ln32_5)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_74 : Operation 825 [1/1] (0.00ns) (grouped into LUT with out node select_ln16_5)   --->   "%xor_ln13_5 = xor i1 %and_ln13_15, i1 1" [../src/matmul.cpp:13]   --->   Operation 825 'xor' 'xor_ln13_5' <Predicate = (!icmp_ln32_5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_74 : Operation 826 [1/1] (0.00ns) (grouped into LUT with out node select_ln16_5)   --->   "%and_ln16_39 = and i1 %and_ln16_5, i1 %xor_ln13_5" [../src/matmul.cpp:16]   --->   Operation 826 'and' 'and_ln16_39' <Predicate = (!icmp_ln32_5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_74 : Operation 827 [1/1] (0.45ns) (out node of the LUT)   --->   "%select_ln16_5 = select i1 %and_ln16_39, i11 %add_ln8_21, i11 %select_ln13_5" [../src/matmul.cpp:16]   --->   Operation 827 'select' 'select_ln16_5' <Predicate = (!icmp_ln32_5)> <Delay = 0.45> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 75 <SV = 44> <Delay = 5.48>
ST_75 : Operation 828 [1/1] (0.00ns) (grouped into LUT with out node and_ln19_17)   --->   "%and_ln19_15 = and i1 %or_ln13_22, i1 %or_ln13_23" [../src/matmul.cpp:19]   --->   Operation 828 'and' 'and_ln19_15' <Predicate = (!icmp_ln32_5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_75 : Operation 829 [1/2] (3.34ns)   --->   "%tmp_1093 = fcmp_ogt  i32 %arr_load_22, i32 %arr_load_23" [../src/matmul.cpp:19]   --->   Operation 829 'fcmp' 'tmp_1093' <Predicate = (!icmp_ln32_5)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_75 : Operation 830 [1/1] (0.00ns) (grouped into LUT with out node and_ln19_17)   --->   "%and_ln19_16 = and i1 %and_ln19_15, i1 %tmp_1093" [../src/matmul.cpp:19]   --->   Operation 830 'and' 'and_ln19_16' <Predicate = (!icmp_ln32_5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_75 : Operation 831 [1/1] (0.00ns) (grouped into LUT with out node and_ln19_17)   --->   "%or_ln16_5 = or i1 %and_ln13_15, i1 %and_ln16_5" [../src/matmul.cpp:16]   --->   Operation 831 'or' 'or_ln16_5' <Predicate = (!icmp_ln32_5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_75 : Operation 832 [1/1] (0.00ns) (grouped into LUT with out node and_ln19_17)   --->   "%xor_ln16_5 = xor i1 %or_ln16_5, i1 1" [../src/matmul.cpp:16]   --->   Operation 832 'xor' 'xor_ln16_5' <Predicate = (!icmp_ln32_5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_75 : Operation 833 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln19_17 = and i1 %and_ln19_16, i1 %xor_ln16_5" [../src/matmul.cpp:19]   --->   Operation 833 'and' 'and_ln19_17' <Predicate = (!icmp_ln32_5)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_75 : Operation 834 [1/1] (0.45ns) (out node of the LUT)   --->   "%select_ln19_5 = select i1 %and_ln19_17, i11 %add_ln8_22, i11 %select_ln16_5" [../src/matmul.cpp:19]   --->   Operation 834 'select' 'select_ln19_5' <Predicate = (!icmp_ln32_5)> <Delay = 0.45> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_75 : Operation 835 [1/1] (0.00ns)   --->   "%zext_ln8_45 = zext i11 %select_ln19_5" [../src/matmul.cpp:8]   --->   Operation 835 'zext' 'zext_ln8_45' <Predicate = (!icmp_ln32_5)> <Delay = 0.00>
ST_75 : Operation 836 [1/1] (0.00ns)   --->   "%arr_addr_45 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_45" [../src/matmul.cpp:8]   --->   Operation 836 'getelementptr' 'arr_addr_45' <Predicate = (!icmp_ln32_5)> <Delay = 0.00>
ST_75 : Operation 837 [2/2] (1.35ns)   --->   "%arr_load_45 = load i11 %arr_addr_45" [../src/matmul.cpp:19]   --->   Operation 837 'load' 'arr_load_45' <Predicate = (!icmp_ln32_5)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>

State 76 <SV = 45> <Delay = 2.70>
ST_76 : Operation 838 [1/1] (0.00ns)   --->   "%t_1_5_cast = zext i11 %t_1_5" [../src/matmul.cpp:34]   --->   Operation 838 'zext' 't_1_5_cast' <Predicate = (!icmp_ln32_5)> <Delay = 0.00>
ST_76 : Operation 839 [1/1] (0.00ns)   --->   "%specloopname_ln28 = specloopname void @_ssdm_op_SpecLoopName, void @empty_0" [../src/matmul.cpp:28]   --->   Operation 839 'specloopname' 'specloopname_ln28' <Predicate = (!icmp_ln32_5)> <Delay = 0.00>
ST_76 : Operation 840 [1/2] (1.35ns)   --->   "%arr_load_45 = load i11 %arr_addr_45" [../src/matmul.cpp:19]   --->   Operation 840 'load' 'arr_load_45' <Predicate = (!icmp_ln32_5)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_76 : Operation 841 [1/1] (0.94ns)   --->   "%add_ln34_5 = add i11 %t_1_5, i11 1" [../src/matmul.cpp:34]   --->   Operation 841 'add' 'add_ln34_5' <Predicate = (!icmp_ln32_5)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_76 : Operation 842 [1/1] (0.00ns)   --->   "%out_addr_5 = getelementptr i32 %out_r, i64 0, i64 %t_1_5_cast" [../src/matmul.cpp:34]   --->   Operation 842 'getelementptr' 'out_addr_5' <Predicate = (!icmp_ln32_5)> <Delay = 0.00>
ST_76 : Operation 843 [1/1] (1.35ns)   --->   "%store_ln34 = store i32 %arr_load_45, i11 %out_addr_5" [../src/matmul.cpp:34]   --->   Operation 843 'store' 'store_ln34' <Predicate = (!icmp_ln32_5)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_76 : Operation 844 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 844 'br' 'br_ln0' <Predicate = (!icmp_ln32_5)> <Delay = 0.00>

State 77 <SV = 40> <Delay = 2.95>
ST_77 : Operation 845 [1/1] (0.00ns)   --->   "%trunc_ln29_6 = trunc i32 %add_ln29_12" [../src/matmul.cpp:29]   --->   Operation 845 'trunc' 'trunc_ln29_6' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 846 [1/1] (1.20ns)   --->   "%add_ln29_15 = add i32 %zext_ln29_3, i32 %add_ln29_12" [../src/matmul.cpp:29]   --->   Operation 846 'add' 'add_ln29_15' <Predicate = true> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_77 : Operation 847 [1/1] (1.47ns)   --->   "%add_ln29_16 = add i64 %i_0, i64 12" [../src/matmul.cpp:29]   --->   Operation 847 'add' 'add_ln29_16' <Predicate = true> <Delay = 1.47> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_77 : Operation 848 [1/1] (0.94ns)   --->   "%add_ln29_17 = add i11 %trunc_ln29_1, i11 12" [../src/matmul.cpp:29]   --->   Operation 848 'add' 'add_ln29_17' <Predicate = true> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_77 : Operation 849 [1/1] (1.48ns)   --->   "%icmp_ln29_6 = icmp_slt  i64 %add_ln29_16, i64 %zext_ln29" [../src/matmul.cpp:29]   --->   Operation 849 'icmp' 'icmp_ln29_6' <Predicate = true> <Delay = 1.48> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_77 : Operation 850 [1/1] (0.00ns)   --->   "%br_ln29 = br i1 %icmp_ln29_6, void %._crit_edge10, void %.split4.6" [../src/matmul.cpp:29]   --->   Operation 850 'br' 'br_ln29' <Predicate = true> <Delay = 0.00>
ST_77 : Operation 851 [1/1] (0.00ns)   --->   "%empty_65 = or i11 %add_ln29_17, i11 1" [../src/matmul.cpp:29]   --->   Operation 851 'or' 'empty_65' <Predicate = (icmp_ln29_6)> <Delay = 0.00>
ST_77 : Operation 852 [4/4] (0.69ns) (root node of the DSP)   --->   "%empty_66 = mul i11 %add_ln29_17, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 852 'mul' 'empty_66' <Predicate = (icmp_ln29_6)> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_77 : Operation 853 [4/4] (0.69ns) (root node of the DSP)   --->   "%empty_67 = mul i11 %empty_65, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 853 'mul' 'empty_67' <Predicate = (icmp_ln29_6)> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 78 <SV = 41> <Delay = 0.69>
ST_78 : Operation 854 [3/4] (0.69ns) (root node of the DSP)   --->   "%empty_66 = mul i11 %add_ln29_17, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 854 'mul' 'empty_66' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_78 : Operation 855 [3/4] (0.69ns) (root node of the DSP)   --->   "%empty_67 = mul i11 %empty_65, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 855 'mul' 'empty_67' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 79 <SV = 42> <Delay = 0.69>
ST_79 : Operation 856 [2/4] (0.69ns) (root node of the DSP)   --->   "%empty_66 = mul i11 %add_ln29_17, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 856 'mul' 'empty_66' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_79 : Operation 857 [2/4] (0.69ns) (root node of the DSP)   --->   "%empty_67 = mul i11 %empty_65, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 857 'mul' 'empty_67' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 80 <SV = 43> <Delay = 0.94>
ST_80 : Operation 858 [1/4] (0.00ns) (root node of the DSP)   --->   "%empty_66 = mul i11 %add_ln29_17, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 858 'mul' 'empty_66' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_80 : Operation 859 [1/4] (0.00ns) (root node of the DSP)   --->   "%empty_67 = mul i11 %empty_65, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 859 'mul' 'empty_67' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_80 : Operation 860 [1/1] (0.94ns)   --->   "%add_ln32_15 = add i11 %zext_ln29_4, i11 %trunc_ln29_6" [../src/matmul.cpp:32]   --->   Operation 860 'add' 'add_ln32_15' <Predicate = true> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_80 : Operation 861 [1/1] (0.48ns)   --->   "%br_ln32 = br void" [../src/matmul.cpp:32]   --->   Operation 861 'br' 'br_ln32' <Predicate = true> <Delay = 0.48>

State 81 <SV = 44> <Delay = 2.29>
ST_81 : Operation 862 [1/1] (0.00ns)   --->   "%t_1_6 = phi i11 %add_ln34_6, void %.split.6_ifconv, i11 %add_ln32_15, void %.split4.6" [../src/matmul.cpp:34]   --->   Operation 862 'phi' 't_1_6' <Predicate = true> <Delay = 0.00>
ST_81 : Operation 863 [1/1] (0.00ns)   --->   "%j_6 = phi i64 %add_ln32_6, void %.split.6_ifconv, i64 0, void %.split4.6" [../src/matmul.cpp:32]   --->   Operation 863 'phi' 'j_6' <Predicate = true> <Delay = 0.00>
ST_81 : Operation 864 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 864 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_81 : Operation 865 [1/1] (1.48ns)   --->   "%icmp_ln32_6 = icmp_eq  i64 %j_6, i64 %zext_ln32" [../src/matmul.cpp:32]   --->   Operation 865 'icmp' 'icmp_ln32_6' <Predicate = true> <Delay = 1.48> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_81 : Operation 866 [1/1] (0.00ns)   --->   "%empty_68 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 0, i64 32, i64 0"   --->   Operation 866 'speclooptripcount' 'empty_68' <Predicate = true> <Delay = 0.00>
ST_81 : Operation 867 [1/1] (0.00ns)   --->   "%br_ln32 = br i1 %icmp_ln32_6, void %.split.6_ifconv, void %._crit_edge.loopexit.6" [../src/matmul.cpp:32]   --->   Operation 867 'br' 'br_ln32' <Predicate = true> <Delay = 0.00>
ST_81 : Operation 868 [1/1] (0.00ns)   --->   "%empty_69 = trunc i64 %j_6" [../src/matmul.cpp:32]   --->   Operation 868 'trunc' 'empty_69' <Predicate = (!icmp_ln32_6)> <Delay = 0.00>
ST_81 : Operation 869 [1/1] (0.94ns)   --->   "%add_ln8_24 = add i11 %empty_69, i11 %empty_66" [../src/matmul.cpp:8]   --->   Operation 869 'add' 'add_ln8_24' <Predicate = (!icmp_ln32_6)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_81 : Operation 870 [1/1] (0.00ns)   --->   "%zext_ln8_24 = zext i11 %add_ln8_24" [../src/matmul.cpp:8]   --->   Operation 870 'zext' 'zext_ln8_24' <Predicate = (!icmp_ln32_6)> <Delay = 0.00>
ST_81 : Operation 871 [1/1] (0.00ns)   --->   "%arr_addr_24 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_24" [../src/matmul.cpp:8]   --->   Operation 871 'getelementptr' 'arr_addr_24' <Predicate = (!icmp_ln32_6)> <Delay = 0.00>
ST_81 : Operation 872 [2/2] (1.35ns)   --->   "%arr_load_24 = load i11 %arr_addr_24" [../src/matmul.cpp:8]   --->   Operation 872 'load' 'arr_load_24' <Predicate = (!icmp_ln32_6)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_81 : Operation 873 [1/1] (0.94ns)   --->   "%add_ln8_25 = add i11 %empty_69, i11 %empty_67" [../src/matmul.cpp:8]   --->   Operation 873 'add' 'add_ln8_25' <Predicate = (!icmp_ln32_6)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_81 : Operation 874 [1/1] (0.00ns)   --->   "%zext_ln8_25 = zext i11 %add_ln8_25" [../src/matmul.cpp:8]   --->   Operation 874 'zext' 'zext_ln8_25' <Predicate = (!icmp_ln32_6)> <Delay = 0.00>
ST_81 : Operation 875 [1/1] (0.00ns)   --->   "%arr_addr_25 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_25" [../src/matmul.cpp:8]   --->   Operation 875 'getelementptr' 'arr_addr_25' <Predicate = (!icmp_ln32_6)> <Delay = 0.00>
ST_81 : Operation 876 [2/2] (1.35ns)   --->   "%arr_load_25 = load i11 %arr_addr_25" [../src/matmul.cpp:8]   --->   Operation 876 'load' 'arr_load_25' <Predicate = (!icmp_ln32_6)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>

State 82 <SV = 45> <Delay = 4.70>
ST_82 : Operation 877 [1/2] (1.35ns)   --->   "%arr_load_24 = load i11 %arr_addr_24" [../src/matmul.cpp:8]   --->   Operation 877 'load' 'arr_load_24' <Predicate = (!icmp_ln32_6)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_82 : Operation 878 [1/2] (1.35ns)   --->   "%arr_load_25 = load i11 %arr_addr_25" [../src/matmul.cpp:8]   --->   Operation 878 'load' 'arr_load_25' <Predicate = (!icmp_ln32_6)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_82 : Operation 879 [1/1] (0.00ns)   --->   "%or_ln34_6 = or i11 %empty_69, i11 1" [../src/matmul.cpp:34]   --->   Operation 879 'or' 'or_ln34_6' <Predicate = (!icmp_ln32_6)> <Delay = 0.00>
ST_82 : Operation 880 [1/1] (0.94ns)   --->   "%add_ln8_26 = add i11 %or_ln34_6, i11 %empty_66" [../src/matmul.cpp:8]   --->   Operation 880 'add' 'add_ln8_26' <Predicate = (!icmp_ln32_6)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_82 : Operation 881 [1/1] (0.00ns)   --->   "%zext_ln8_26 = zext i11 %add_ln8_26" [../src/matmul.cpp:8]   --->   Operation 881 'zext' 'zext_ln8_26' <Predicate = (!icmp_ln32_6)> <Delay = 0.00>
ST_82 : Operation 882 [1/1] (0.00ns)   --->   "%arr_addr_26 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_26" [../src/matmul.cpp:8]   --->   Operation 882 'getelementptr' 'arr_addr_26' <Predicate = (!icmp_ln32_6)> <Delay = 0.00>
ST_82 : Operation 883 [2/2] (1.35ns)   --->   "%arr_load_26 = load i11 %arr_addr_26" [../src/matmul.cpp:8]   --->   Operation 883 'load' 'arr_load_26' <Predicate = (!icmp_ln32_6)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_82 : Operation 884 [1/1] (0.94ns)   --->   "%add_ln8_27 = add i11 %or_ln34_6, i11 %empty_67" [../src/matmul.cpp:8]   --->   Operation 884 'add' 'add_ln8_27' <Predicate = (!icmp_ln32_6)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_82 : Operation 885 [1/1] (0.00ns)   --->   "%zext_ln8_27 = zext i11 %add_ln8_27" [../src/matmul.cpp:8]   --->   Operation 885 'zext' 'zext_ln8_27' <Predicate = (!icmp_ln32_6)> <Delay = 0.00>
ST_82 : Operation 886 [1/1] (0.00ns)   --->   "%arr_addr_27 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_27" [../src/matmul.cpp:8]   --->   Operation 886 'getelementptr' 'arr_addr_27' <Predicate = (!icmp_ln32_6)> <Delay = 0.00>
ST_82 : Operation 887 [2/2] (1.35ns)   --->   "%arr_load_27 = load i11 %arr_addr_27" [../src/matmul.cpp:8]   --->   Operation 887 'load' 'arr_load_27' <Predicate = (!icmp_ln32_6)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_82 : Operation 888 [2/2] (3.34ns)   --->   "%tmp_1096 = fcmp_ogt  i32 %arr_load_24, i32 %arr_load_25" [../src/matmul.cpp:13]   --->   Operation 888 'fcmp' 'tmp_1096' <Predicate = (!icmp_ln32_6)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 83 <SV = 46> <Delay = 4.70>
ST_83 : Operation 889 [1/1] (1.47ns)   --->   "%add_ln32_6 = add i64 %j_6, i64 2" [../src/matmul.cpp:32]   --->   Operation 889 'add' 'add_ln32_6' <Predicate = (!icmp_ln32_6)> <Delay = 1.47> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_83 : Operation 890 [1/2] (1.35ns)   --->   "%arr_load_26 = load i11 %arr_addr_26" [../src/matmul.cpp:8]   --->   Operation 890 'load' 'arr_load_26' <Predicate = (!icmp_ln32_6)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_83 : Operation 891 [1/2] (1.35ns)   --->   "%arr_load_27 = load i11 %arr_addr_27" [../src/matmul.cpp:8]   --->   Operation 891 'load' 'arr_load_27' <Predicate = (!icmp_ln32_6)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_83 : Operation 892 [1/1] (0.00ns)   --->   "%bitcast_ln13_24 = bitcast i32 %arr_load_24" [../src/matmul.cpp:13]   --->   Operation 892 'bitcast' 'bitcast_ln13_24' <Predicate = (!icmp_ln32_6)> <Delay = 0.00>
ST_83 : Operation 893 [1/1] (0.00ns)   --->   "%tmp_1094 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln13_24, i32 23, i32 30" [../src/matmul.cpp:13]   --->   Operation 893 'partselect' 'tmp_1094' <Predicate = (!icmp_ln32_6)> <Delay = 0.00>
ST_83 : Operation 894 [1/1] (0.00ns)   --->   "%trunc_ln13_24 = trunc i32 %bitcast_ln13_24" [../src/matmul.cpp:13]   --->   Operation 894 'trunc' 'trunc_ln13_24' <Predicate = (!icmp_ln32_6)> <Delay = 0.00>
ST_83 : Operation 895 [1/1] (0.85ns)   --->   "%icmp_ln13_48 = icmp_ne  i8 %tmp_1094, i8 255" [../src/matmul.cpp:13]   --->   Operation 895 'icmp' 'icmp_ln13_48' <Predicate = (!icmp_ln32_6)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_83 : Operation 896 [1/1] (0.97ns)   --->   "%icmp_ln13_49 = icmp_eq  i23 %trunc_ln13_24, i23 0" [../src/matmul.cpp:13]   --->   Operation 896 'icmp' 'icmp_ln13_49' <Predicate = (!icmp_ln32_6)> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_83 : Operation 897 [1/1] (0.33ns)   --->   "%or_ln13_24 = or i1 %icmp_ln13_49, i1 %icmp_ln13_48" [../src/matmul.cpp:13]   --->   Operation 897 'or' 'or_ln13_24' <Predicate = (!icmp_ln32_6)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_83 : Operation 898 [1/2] (3.34ns)   --->   "%tmp_1096 = fcmp_ogt  i32 %arr_load_24, i32 %arr_load_25" [../src/matmul.cpp:13]   --->   Operation 898 'fcmp' 'tmp_1096' <Predicate = (!icmp_ln32_6)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_83 : Operation 899 [2/2] (3.34ns)   --->   "%tmp_1098 = fcmp_ogt  i32 %arr_load_24, i32 %arr_load_26" [../src/matmul.cpp:13]   --->   Operation 899 'fcmp' 'tmp_1098' <Predicate = (!icmp_ln32_6)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_83 : Operation 900 [2/2] (3.34ns)   --->   "%tmp_1100 = fcmp_ogt  i32 %arr_load_24, i32 %arr_load_27" [../src/matmul.cpp:13]   --->   Operation 900 'fcmp' 'tmp_1100' <Predicate = (!icmp_ln32_6)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 84 <SV = 47> <Delay = 4.01>
ST_84 : Operation 901 [1/1] (0.00ns)   --->   "%bitcast_ln13_25 = bitcast i32 %arr_load_25" [../src/matmul.cpp:13]   --->   Operation 901 'bitcast' 'bitcast_ln13_25' <Predicate = (!icmp_ln32_6)> <Delay = 0.00>
ST_84 : Operation 902 [1/1] (0.00ns)   --->   "%tmp_1095 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln13_25, i32 23, i32 30" [../src/matmul.cpp:13]   --->   Operation 902 'partselect' 'tmp_1095' <Predicate = (!icmp_ln32_6)> <Delay = 0.00>
ST_84 : Operation 903 [1/1] (0.00ns)   --->   "%trunc_ln13_25 = trunc i32 %bitcast_ln13_25" [../src/matmul.cpp:13]   --->   Operation 903 'trunc' 'trunc_ln13_25' <Predicate = (!icmp_ln32_6)> <Delay = 0.00>
ST_84 : Operation 904 [1/1] (0.85ns)   --->   "%icmp_ln13_50 = icmp_ne  i8 %tmp_1095, i8 255" [../src/matmul.cpp:13]   --->   Operation 904 'icmp' 'icmp_ln13_50' <Predicate = (!icmp_ln32_6)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_84 : Operation 905 [1/1] (0.97ns)   --->   "%icmp_ln13_51 = icmp_eq  i23 %trunc_ln13_25, i23 0" [../src/matmul.cpp:13]   --->   Operation 905 'icmp' 'icmp_ln13_51' <Predicate = (!icmp_ln32_6)> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_84 : Operation 906 [1/1] (0.33ns)   --->   "%or_ln13_25 = or i1 %icmp_ln13_51, i1 %icmp_ln13_50" [../src/matmul.cpp:13]   --->   Operation 906 'or' 'or_ln13_25' <Predicate = (!icmp_ln32_6)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_84 : Operation 907 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_16)   --->   "%and_ln13_52 = and i1 %or_ln13_24, i1 %or_ln13_25" [../src/matmul.cpp:13]   --->   Operation 907 'and' 'and_ln13_52' <Predicate = (!icmp_ln32_6)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_84 : Operation 908 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_16)   --->   "%and_ln13_53 = and i1 %and_ln13_52, i1 %tmp_1096" [../src/matmul.cpp:13]   --->   Operation 908 'and' 'and_ln13_53' <Predicate = (!icmp_ln32_6)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_84 : Operation 909 [1/1] (0.00ns)   --->   "%bitcast_ln13_26 = bitcast i32 %arr_load_26" [../src/matmul.cpp:13]   --->   Operation 909 'bitcast' 'bitcast_ln13_26' <Predicate = (!icmp_ln32_6)> <Delay = 0.00>
ST_84 : Operation 910 [1/1] (0.00ns)   --->   "%tmp_1097 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln13_26, i32 23, i32 30" [../src/matmul.cpp:13]   --->   Operation 910 'partselect' 'tmp_1097' <Predicate = (!icmp_ln32_6)> <Delay = 0.00>
ST_84 : Operation 911 [1/1] (0.00ns)   --->   "%trunc_ln13_26 = trunc i32 %bitcast_ln13_26" [../src/matmul.cpp:13]   --->   Operation 911 'trunc' 'trunc_ln13_26' <Predicate = (!icmp_ln32_6)> <Delay = 0.00>
ST_84 : Operation 912 [1/1] (0.85ns)   --->   "%icmp_ln13_52 = icmp_ne  i8 %tmp_1097, i8 255" [../src/matmul.cpp:13]   --->   Operation 912 'icmp' 'icmp_ln13_52' <Predicate = (!icmp_ln32_6)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_84 : Operation 913 [1/1] (0.97ns)   --->   "%icmp_ln13_53 = icmp_eq  i23 %trunc_ln13_26, i23 0" [../src/matmul.cpp:13]   --->   Operation 913 'icmp' 'icmp_ln13_53' <Predicate = (!icmp_ln32_6)> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_84 : Operation 914 [1/1] (0.33ns)   --->   "%or_ln13_26 = or i1 %icmp_ln13_53, i1 %icmp_ln13_52" [../src/matmul.cpp:13]   --->   Operation 914 'or' 'or_ln13_26' <Predicate = (!icmp_ln32_6)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_84 : Operation 915 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_58)   --->   "%and_ln13_54 = and i1 %or_ln13_24, i1 %or_ln13_26" [../src/matmul.cpp:13]   --->   Operation 915 'and' 'and_ln13_54' <Predicate = (!icmp_ln32_6)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_84 : Operation 916 [1/2] (3.34ns)   --->   "%tmp_1098 = fcmp_ogt  i32 %arr_load_24, i32 %arr_load_26" [../src/matmul.cpp:13]   --->   Operation 916 'fcmp' 'tmp_1098' <Predicate = (!icmp_ln32_6)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_84 : Operation 917 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_58)   --->   "%and_ln13_55 = and i1 %and_ln13_54, i1 %tmp_1098" [../src/matmul.cpp:13]   --->   Operation 917 'and' 'and_ln13_55' <Predicate = (!icmp_ln32_6)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_84 : Operation 918 [1/1] (0.00ns)   --->   "%bitcast_ln13_27 = bitcast i32 %arr_load_27" [../src/matmul.cpp:13]   --->   Operation 918 'bitcast' 'bitcast_ln13_27' <Predicate = (!icmp_ln32_6)> <Delay = 0.00>
ST_84 : Operation 919 [1/1] (0.00ns)   --->   "%tmp_1099 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln13_27, i32 23, i32 30" [../src/matmul.cpp:13]   --->   Operation 919 'partselect' 'tmp_1099' <Predicate = (!icmp_ln32_6)> <Delay = 0.00>
ST_84 : Operation 920 [1/1] (0.00ns)   --->   "%trunc_ln13_27 = trunc i32 %bitcast_ln13_27" [../src/matmul.cpp:13]   --->   Operation 920 'trunc' 'trunc_ln13_27' <Predicate = (!icmp_ln32_6)> <Delay = 0.00>
ST_84 : Operation 921 [1/1] (0.85ns)   --->   "%icmp_ln13_54 = icmp_ne  i8 %tmp_1099, i8 255" [../src/matmul.cpp:13]   --->   Operation 921 'icmp' 'icmp_ln13_54' <Predicate = (!icmp_ln32_6)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_84 : Operation 922 [1/1] (0.97ns)   --->   "%icmp_ln13_55 = icmp_eq  i23 %trunc_ln13_27, i23 0" [../src/matmul.cpp:13]   --->   Operation 922 'icmp' 'icmp_ln13_55' <Predicate = (!icmp_ln32_6)> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_84 : Operation 923 [1/1] (0.33ns)   --->   "%or_ln13_27 = or i1 %icmp_ln13_55, i1 %icmp_ln13_54" [../src/matmul.cpp:13]   --->   Operation 923 'or' 'or_ln13_27' <Predicate = (!icmp_ln32_6)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_84 : Operation 924 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_58)   --->   "%and_ln13_56 = and i1 %or_ln13_24, i1 %or_ln13_27" [../src/matmul.cpp:13]   --->   Operation 924 'and' 'and_ln13_56' <Predicate = (!icmp_ln32_6)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_84 : Operation 925 [1/2] (3.34ns)   --->   "%tmp_1100 = fcmp_ogt  i32 %arr_load_24, i32 %arr_load_27" [../src/matmul.cpp:13]   --->   Operation 925 'fcmp' 'tmp_1100' <Predicate = (!icmp_ln32_6)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_84 : Operation 926 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_58)   --->   "%and_ln13_57 = and i1 %and_ln13_56, i1 %tmp_1100" [../src/matmul.cpp:13]   --->   Operation 926 'and' 'and_ln13_57' <Predicate = (!icmp_ln32_6)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_84 : Operation 927 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln13_58 = and i1 %and_ln13_55, i1 %and_ln13_57" [../src/matmul.cpp:13]   --->   Operation 927 'and' 'and_ln13_58' <Predicate = (!icmp_ln32_6)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_84 : Operation 928 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln13_16 = and i1 %and_ln13_58, i1 %and_ln13_53" [../src/matmul.cpp:13]   --->   Operation 928 'and' 'and_ln13_16' <Predicate = (!icmp_ln32_6)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_84 : Operation 929 [2/2] (3.34ns)   --->   "%tmp_1101 = fcmp_ogt  i32 %arr_load_25, i32 %arr_load_26" [../src/matmul.cpp:16]   --->   Operation 929 'fcmp' 'tmp_1101' <Predicate = (!icmp_ln32_6)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_84 : Operation 930 [2/2] (3.34ns)   --->   "%tmp_1102 = fcmp_ogt  i32 %arr_load_25, i32 %arr_load_27" [../src/matmul.cpp:16]   --->   Operation 930 'fcmp' 'tmp_1102' <Predicate = (!icmp_ln32_6)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 85 <SV = 48> <Delay = 4.12>
ST_85 : Operation 931 [1/1] (0.00ns) (grouped into LUT with out node and_ln16_6)   --->   "%and_ln16_40 = and i1 %or_ln13_25, i1 %or_ln13_26" [../src/matmul.cpp:16]   --->   Operation 931 'and' 'and_ln16_40' <Predicate = (!icmp_ln32_6)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_85 : Operation 932 [1/2] (3.34ns)   --->   "%tmp_1101 = fcmp_ogt  i32 %arr_load_25, i32 %arr_load_26" [../src/matmul.cpp:16]   --->   Operation 932 'fcmp' 'tmp_1101' <Predicate = (!icmp_ln32_6)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_85 : Operation 933 [1/1] (0.00ns) (grouped into LUT with out node and_ln16_6)   --->   "%and_ln16_41 = and i1 %and_ln16_40, i1 %tmp_1101" [../src/matmul.cpp:16]   --->   Operation 933 'and' 'and_ln16_41' <Predicate = (!icmp_ln32_6)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_85 : Operation 934 [1/1] (0.00ns) (grouped into LUT with out node and_ln16_6)   --->   "%and_ln16_42 = and i1 %or_ln13_25, i1 %or_ln13_27" [../src/matmul.cpp:16]   --->   Operation 934 'and' 'and_ln16_42' <Predicate = (!icmp_ln32_6)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_85 : Operation 935 [1/2] (3.34ns)   --->   "%tmp_1102 = fcmp_ogt  i32 %arr_load_25, i32 %arr_load_27" [../src/matmul.cpp:16]   --->   Operation 935 'fcmp' 'tmp_1102' <Predicate = (!icmp_ln32_6)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_85 : Operation 936 [1/1] (0.00ns) (grouped into LUT with out node and_ln16_6)   --->   "%and_ln16_43 = and i1 %and_ln16_42, i1 %tmp_1102" [../src/matmul.cpp:16]   --->   Operation 936 'and' 'and_ln16_43' <Predicate = (!icmp_ln32_6)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_85 : Operation 937 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln16_6 = and i1 %and_ln16_41, i1 %and_ln16_43" [../src/matmul.cpp:16]   --->   Operation 937 'and' 'and_ln16_6' <Predicate = (!icmp_ln32_6)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_85 : Operation 938 [2/2] (3.34ns)   --->   "%tmp_1103 = fcmp_ogt  i32 %arr_load_26, i32 %arr_load_27" [../src/matmul.cpp:19]   --->   Operation 938 'fcmp' 'tmp_1103' <Predicate = (!icmp_ln32_6)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_85 : Operation 939 [1/1] (0.00ns) (grouped into LUT with out node select_ln16_6)   --->   "%select_ln13_6 = select i1 %and_ln13_16, i11 %add_ln8_24, i11 %add_ln8_27" [../src/matmul.cpp:13]   --->   Operation 939 'select' 'select_ln13_6' <Predicate = (!icmp_ln32_6)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_85 : Operation 940 [1/1] (0.00ns) (grouped into LUT with out node select_ln16_6)   --->   "%xor_ln13_6 = xor i1 %and_ln13_16, i1 1" [../src/matmul.cpp:13]   --->   Operation 940 'xor' 'xor_ln13_6' <Predicate = (!icmp_ln32_6)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_85 : Operation 941 [1/1] (0.00ns) (grouped into LUT with out node select_ln16_6)   --->   "%and_ln16_44 = and i1 %and_ln16_6, i1 %xor_ln13_6" [../src/matmul.cpp:16]   --->   Operation 941 'and' 'and_ln16_44' <Predicate = (!icmp_ln32_6)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_85 : Operation 942 [1/1] (0.45ns) (out node of the LUT)   --->   "%select_ln16_6 = select i1 %and_ln16_44, i11 %add_ln8_25, i11 %select_ln13_6" [../src/matmul.cpp:16]   --->   Operation 942 'select' 'select_ln16_6' <Predicate = (!icmp_ln32_6)> <Delay = 0.45> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 86 <SV = 49> <Delay = 5.48>
ST_86 : Operation 943 [1/1] (0.00ns) (grouped into LUT with out node and_ln19_20)   --->   "%and_ln19_18 = and i1 %or_ln13_26, i1 %or_ln13_27" [../src/matmul.cpp:19]   --->   Operation 943 'and' 'and_ln19_18' <Predicate = (!icmp_ln32_6)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_86 : Operation 944 [1/2] (3.34ns)   --->   "%tmp_1103 = fcmp_ogt  i32 %arr_load_26, i32 %arr_load_27" [../src/matmul.cpp:19]   --->   Operation 944 'fcmp' 'tmp_1103' <Predicate = (!icmp_ln32_6)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_86 : Operation 945 [1/1] (0.00ns) (grouped into LUT with out node and_ln19_20)   --->   "%and_ln19_19 = and i1 %and_ln19_18, i1 %tmp_1103" [../src/matmul.cpp:19]   --->   Operation 945 'and' 'and_ln19_19' <Predicate = (!icmp_ln32_6)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_86 : Operation 946 [1/1] (0.00ns) (grouped into LUT with out node and_ln19_20)   --->   "%or_ln16_6 = or i1 %and_ln13_16, i1 %and_ln16_6" [../src/matmul.cpp:16]   --->   Operation 946 'or' 'or_ln16_6' <Predicate = (!icmp_ln32_6)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_86 : Operation 947 [1/1] (0.00ns) (grouped into LUT with out node and_ln19_20)   --->   "%xor_ln16_6 = xor i1 %or_ln16_6, i1 1" [../src/matmul.cpp:16]   --->   Operation 947 'xor' 'xor_ln16_6' <Predicate = (!icmp_ln32_6)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_86 : Operation 948 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln19_20 = and i1 %and_ln19_19, i1 %xor_ln16_6" [../src/matmul.cpp:19]   --->   Operation 948 'and' 'and_ln19_20' <Predicate = (!icmp_ln32_6)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_86 : Operation 949 [1/1] (0.45ns) (out node of the LUT)   --->   "%select_ln19_6 = select i1 %and_ln19_20, i11 %add_ln8_26, i11 %select_ln16_6" [../src/matmul.cpp:19]   --->   Operation 949 'select' 'select_ln19_6' <Predicate = (!icmp_ln32_6)> <Delay = 0.45> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_86 : Operation 950 [1/1] (0.00ns)   --->   "%zext_ln8_46 = zext i11 %select_ln19_6" [../src/matmul.cpp:8]   --->   Operation 950 'zext' 'zext_ln8_46' <Predicate = (!icmp_ln32_6)> <Delay = 0.00>
ST_86 : Operation 951 [1/1] (0.00ns)   --->   "%arr_addr_46 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_46" [../src/matmul.cpp:8]   --->   Operation 951 'getelementptr' 'arr_addr_46' <Predicate = (!icmp_ln32_6)> <Delay = 0.00>
ST_86 : Operation 952 [2/2] (1.35ns)   --->   "%arr_load_46 = load i11 %arr_addr_46" [../src/matmul.cpp:19]   --->   Operation 952 'load' 'arr_load_46' <Predicate = (!icmp_ln32_6)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>

State 87 <SV = 50> <Delay = 2.70>
ST_87 : Operation 953 [1/1] (0.00ns)   --->   "%t_1_6_cast = zext i11 %t_1_6" [../src/matmul.cpp:34]   --->   Operation 953 'zext' 't_1_6_cast' <Predicate = (!icmp_ln32_6)> <Delay = 0.00>
ST_87 : Operation 954 [1/1] (0.00ns)   --->   "%specloopname_ln28 = specloopname void @_ssdm_op_SpecLoopName, void @empty_0" [../src/matmul.cpp:28]   --->   Operation 954 'specloopname' 'specloopname_ln28' <Predicate = (!icmp_ln32_6)> <Delay = 0.00>
ST_87 : Operation 955 [1/2] (1.35ns)   --->   "%arr_load_46 = load i11 %arr_addr_46" [../src/matmul.cpp:19]   --->   Operation 955 'load' 'arr_load_46' <Predicate = (!icmp_ln32_6)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_87 : Operation 956 [1/1] (0.94ns)   --->   "%add_ln34_6 = add i11 %t_1_6, i11 1" [../src/matmul.cpp:34]   --->   Operation 956 'add' 'add_ln34_6' <Predicate = (!icmp_ln32_6)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_87 : Operation 957 [1/1] (0.00ns)   --->   "%out_addr_6 = getelementptr i32 %out_r, i64 0, i64 %t_1_6_cast" [../src/matmul.cpp:34]   --->   Operation 957 'getelementptr' 'out_addr_6' <Predicate = (!icmp_ln32_6)> <Delay = 0.00>
ST_87 : Operation 958 [1/1] (1.35ns)   --->   "%store_ln34 = store i32 %arr_load_46, i11 %out_addr_6" [../src/matmul.cpp:34]   --->   Operation 958 'store' 'store_ln34' <Predicate = (!icmp_ln32_6)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_87 : Operation 959 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 959 'br' 'br_ln0' <Predicate = (!icmp_ln32_6)> <Delay = 0.00>

State 88 <SV = 45> <Delay = 2.95>
ST_88 : Operation 960 [1/1] (0.00ns)   --->   "%trunc_ln29_7 = trunc i32 %add_ln29_15" [../src/matmul.cpp:29]   --->   Operation 960 'trunc' 'trunc_ln29_7' <Predicate = true> <Delay = 0.00>
ST_88 : Operation 961 [1/1] (1.20ns)   --->   "%add_ln29_18 = add i32 %zext_ln29_3, i32 %add_ln29_15" [../src/matmul.cpp:29]   --->   Operation 961 'add' 'add_ln29_18' <Predicate = true> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_88 : Operation 962 [1/1] (1.47ns)   --->   "%add_ln29_19 = add i64 %i_0, i64 14" [../src/matmul.cpp:29]   --->   Operation 962 'add' 'add_ln29_19' <Predicate = true> <Delay = 1.47> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_88 : Operation 963 [1/1] (0.94ns)   --->   "%add_ln29_20 = add i11 %trunc_ln29_1, i11 14" [../src/matmul.cpp:29]   --->   Operation 963 'add' 'add_ln29_20' <Predicate = true> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_88 : Operation 964 [1/1] (1.48ns)   --->   "%icmp_ln29_7 = icmp_slt  i64 %add_ln29_19, i64 %zext_ln29" [../src/matmul.cpp:29]   --->   Operation 964 'icmp' 'icmp_ln29_7' <Predicate = true> <Delay = 1.48> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_88 : Operation 965 [1/1] (0.00ns)   --->   "%br_ln29 = br i1 %icmp_ln29_7, void %._crit_edge10, void %.split4.7" [../src/matmul.cpp:29]   --->   Operation 965 'br' 'br_ln29' <Predicate = true> <Delay = 0.00>
ST_88 : Operation 966 [1/1] (0.00ns)   --->   "%empty_70 = or i11 %add_ln29_20, i11 1" [../src/matmul.cpp:29]   --->   Operation 966 'or' 'empty_70' <Predicate = (icmp_ln29_7)> <Delay = 0.00>
ST_88 : Operation 967 [4/4] (0.69ns) (root node of the DSP)   --->   "%empty_71 = mul i11 %add_ln29_20, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 967 'mul' 'empty_71' <Predicate = (icmp_ln29_7)> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_88 : Operation 968 [4/4] (0.69ns) (root node of the DSP)   --->   "%empty_72 = mul i11 %empty_70, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 968 'mul' 'empty_72' <Predicate = (icmp_ln29_7)> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_88 : Operation 969 [1/1] (0.94ns)   --->   "%add_ln32_16 = add i11 %zext_ln29_4, i11 %trunc_ln29_7" [../src/matmul.cpp:32]   --->   Operation 969 'add' 'add_ln32_16' <Predicate = (icmp_ln29_7)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 89 <SV = 46> <Delay = 0.69>
ST_89 : Operation 970 [3/4] (0.69ns) (root node of the DSP)   --->   "%empty_71 = mul i11 %add_ln29_20, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 970 'mul' 'empty_71' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_89 : Operation 971 [3/4] (0.69ns) (root node of the DSP)   --->   "%empty_72 = mul i11 %empty_70, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 971 'mul' 'empty_72' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 90 <SV = 47> <Delay = 0.69>
ST_90 : Operation 972 [2/4] (0.69ns) (root node of the DSP)   --->   "%empty_71 = mul i11 %add_ln29_20, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 972 'mul' 'empty_71' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_90 : Operation 973 [2/4] (0.69ns) (root node of the DSP)   --->   "%empty_72 = mul i11 %empty_70, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 973 'mul' 'empty_72' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 91 <SV = 48> <Delay = 0.48>
ST_91 : Operation 974 [1/4] (0.00ns) (root node of the DSP)   --->   "%empty_71 = mul i11 %add_ln29_20, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 974 'mul' 'empty_71' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_91 : Operation 975 [1/4] (0.00ns) (root node of the DSP)   --->   "%empty_72 = mul i11 %empty_70, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 975 'mul' 'empty_72' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_91 : Operation 976 [1/1] (0.48ns)   --->   "%br_ln32 = br void" [../src/matmul.cpp:32]   --->   Operation 976 'br' 'br_ln32' <Predicate = true> <Delay = 0.48>

State 92 <SV = 49> <Delay = 2.29>
ST_92 : Operation 977 [1/1] (0.00ns)   --->   "%t_1_7 = phi i11 %add_ln34_7, void %.split.7_ifconv, i11 %add_ln32_16, void %.split4.7" [../src/matmul.cpp:34]   --->   Operation 977 'phi' 't_1_7' <Predicate = true> <Delay = 0.00>
ST_92 : Operation 978 [1/1] (0.00ns)   --->   "%j_7 = phi i64 %add_ln32_7, void %.split.7_ifconv, i64 0, void %.split4.7" [../src/matmul.cpp:32]   --->   Operation 978 'phi' 'j_7' <Predicate = true> <Delay = 0.00>
ST_92 : Operation 979 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 979 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_92 : Operation 980 [1/1] (1.48ns)   --->   "%icmp_ln32_7 = icmp_eq  i64 %j_7, i64 %zext_ln32" [../src/matmul.cpp:32]   --->   Operation 980 'icmp' 'icmp_ln32_7' <Predicate = true> <Delay = 1.48> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_92 : Operation 981 [1/1] (0.00ns)   --->   "%empty_73 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 0, i64 32, i64 0"   --->   Operation 981 'speclooptripcount' 'empty_73' <Predicate = true> <Delay = 0.00>
ST_92 : Operation 982 [1/1] (0.00ns)   --->   "%br_ln32 = br i1 %icmp_ln32_7, void %.split.7_ifconv, void %._crit_edge.loopexit.7" [../src/matmul.cpp:32]   --->   Operation 982 'br' 'br_ln32' <Predicate = true> <Delay = 0.00>
ST_92 : Operation 983 [1/1] (0.00ns)   --->   "%empty_74 = trunc i64 %j_7" [../src/matmul.cpp:32]   --->   Operation 983 'trunc' 'empty_74' <Predicate = (!icmp_ln32_7)> <Delay = 0.00>
ST_92 : Operation 984 [1/1] (0.94ns)   --->   "%add_ln8_28 = add i11 %empty_74, i11 %empty_71" [../src/matmul.cpp:8]   --->   Operation 984 'add' 'add_ln8_28' <Predicate = (!icmp_ln32_7)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_92 : Operation 985 [1/1] (0.00ns)   --->   "%zext_ln8_28 = zext i11 %add_ln8_28" [../src/matmul.cpp:8]   --->   Operation 985 'zext' 'zext_ln8_28' <Predicate = (!icmp_ln32_7)> <Delay = 0.00>
ST_92 : Operation 986 [1/1] (0.00ns)   --->   "%arr_addr_28 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_28" [../src/matmul.cpp:8]   --->   Operation 986 'getelementptr' 'arr_addr_28' <Predicate = (!icmp_ln32_7)> <Delay = 0.00>
ST_92 : Operation 987 [2/2] (1.35ns)   --->   "%arr_load_28 = load i11 %arr_addr_28" [../src/matmul.cpp:8]   --->   Operation 987 'load' 'arr_load_28' <Predicate = (!icmp_ln32_7)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_92 : Operation 988 [1/1] (0.94ns)   --->   "%add_ln8_29 = add i11 %empty_74, i11 %empty_72" [../src/matmul.cpp:8]   --->   Operation 988 'add' 'add_ln8_29' <Predicate = (!icmp_ln32_7)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_92 : Operation 989 [1/1] (0.00ns)   --->   "%zext_ln8_29 = zext i11 %add_ln8_29" [../src/matmul.cpp:8]   --->   Operation 989 'zext' 'zext_ln8_29' <Predicate = (!icmp_ln32_7)> <Delay = 0.00>
ST_92 : Operation 990 [1/1] (0.00ns)   --->   "%arr_addr_29 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_29" [../src/matmul.cpp:8]   --->   Operation 990 'getelementptr' 'arr_addr_29' <Predicate = (!icmp_ln32_7)> <Delay = 0.00>
ST_92 : Operation 991 [2/2] (1.35ns)   --->   "%arr_load_29 = load i11 %arr_addr_29" [../src/matmul.cpp:8]   --->   Operation 991 'load' 'arr_load_29' <Predicate = (!icmp_ln32_7)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>

State 93 <SV = 50> <Delay = 4.70>
ST_93 : Operation 992 [1/2] (1.35ns)   --->   "%arr_load_28 = load i11 %arr_addr_28" [../src/matmul.cpp:8]   --->   Operation 992 'load' 'arr_load_28' <Predicate = (!icmp_ln32_7)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_93 : Operation 993 [1/2] (1.35ns)   --->   "%arr_load_29 = load i11 %arr_addr_29" [../src/matmul.cpp:8]   --->   Operation 993 'load' 'arr_load_29' <Predicate = (!icmp_ln32_7)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_93 : Operation 994 [1/1] (0.00ns)   --->   "%or_ln34_7 = or i11 %empty_74, i11 1" [../src/matmul.cpp:34]   --->   Operation 994 'or' 'or_ln34_7' <Predicate = (!icmp_ln32_7)> <Delay = 0.00>
ST_93 : Operation 995 [1/1] (0.94ns)   --->   "%add_ln8_30 = add i11 %or_ln34_7, i11 %empty_71" [../src/matmul.cpp:8]   --->   Operation 995 'add' 'add_ln8_30' <Predicate = (!icmp_ln32_7)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_93 : Operation 996 [1/1] (0.00ns)   --->   "%zext_ln8_30 = zext i11 %add_ln8_30" [../src/matmul.cpp:8]   --->   Operation 996 'zext' 'zext_ln8_30' <Predicate = (!icmp_ln32_7)> <Delay = 0.00>
ST_93 : Operation 997 [1/1] (0.00ns)   --->   "%arr_addr_30 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_30" [../src/matmul.cpp:8]   --->   Operation 997 'getelementptr' 'arr_addr_30' <Predicate = (!icmp_ln32_7)> <Delay = 0.00>
ST_93 : Operation 998 [2/2] (1.35ns)   --->   "%arr_load_30 = load i11 %arr_addr_30" [../src/matmul.cpp:8]   --->   Operation 998 'load' 'arr_load_30' <Predicate = (!icmp_ln32_7)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_93 : Operation 999 [1/1] (0.94ns)   --->   "%add_ln8_31 = add i11 %or_ln34_7, i11 %empty_72" [../src/matmul.cpp:8]   --->   Operation 999 'add' 'add_ln8_31' <Predicate = (!icmp_ln32_7)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_93 : Operation 1000 [1/1] (0.00ns)   --->   "%zext_ln8_31 = zext i11 %add_ln8_31" [../src/matmul.cpp:8]   --->   Operation 1000 'zext' 'zext_ln8_31' <Predicate = (!icmp_ln32_7)> <Delay = 0.00>
ST_93 : Operation 1001 [1/1] (0.00ns)   --->   "%arr_addr_31 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_31" [../src/matmul.cpp:8]   --->   Operation 1001 'getelementptr' 'arr_addr_31' <Predicate = (!icmp_ln32_7)> <Delay = 0.00>
ST_93 : Operation 1002 [2/2] (1.35ns)   --->   "%arr_load_31 = load i11 %arr_addr_31" [../src/matmul.cpp:8]   --->   Operation 1002 'load' 'arr_load_31' <Predicate = (!icmp_ln32_7)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_93 : Operation 1003 [2/2] (3.34ns)   --->   "%tmp_1106 = fcmp_ogt  i32 %arr_load_28, i32 %arr_load_29" [../src/matmul.cpp:13]   --->   Operation 1003 'fcmp' 'tmp_1106' <Predicate = (!icmp_ln32_7)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 94 <SV = 51> <Delay = 4.70>
ST_94 : Operation 1004 [1/1] (1.47ns)   --->   "%add_ln32_7 = add i64 %j_7, i64 2" [../src/matmul.cpp:32]   --->   Operation 1004 'add' 'add_ln32_7' <Predicate = (!icmp_ln32_7)> <Delay = 1.47> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_94 : Operation 1005 [1/2] (1.35ns)   --->   "%arr_load_30 = load i11 %arr_addr_30" [../src/matmul.cpp:8]   --->   Operation 1005 'load' 'arr_load_30' <Predicate = (!icmp_ln32_7)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_94 : Operation 1006 [1/2] (1.35ns)   --->   "%arr_load_31 = load i11 %arr_addr_31" [../src/matmul.cpp:8]   --->   Operation 1006 'load' 'arr_load_31' <Predicate = (!icmp_ln32_7)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_94 : Operation 1007 [1/1] (0.00ns)   --->   "%bitcast_ln13_28 = bitcast i32 %arr_load_28" [../src/matmul.cpp:13]   --->   Operation 1007 'bitcast' 'bitcast_ln13_28' <Predicate = (!icmp_ln32_7)> <Delay = 0.00>
ST_94 : Operation 1008 [1/1] (0.00ns)   --->   "%tmp_1104 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln13_28, i32 23, i32 30" [../src/matmul.cpp:13]   --->   Operation 1008 'partselect' 'tmp_1104' <Predicate = (!icmp_ln32_7)> <Delay = 0.00>
ST_94 : Operation 1009 [1/1] (0.00ns)   --->   "%trunc_ln13_28 = trunc i32 %bitcast_ln13_28" [../src/matmul.cpp:13]   --->   Operation 1009 'trunc' 'trunc_ln13_28' <Predicate = (!icmp_ln32_7)> <Delay = 0.00>
ST_94 : Operation 1010 [1/1] (0.85ns)   --->   "%icmp_ln13_56 = icmp_ne  i8 %tmp_1104, i8 255" [../src/matmul.cpp:13]   --->   Operation 1010 'icmp' 'icmp_ln13_56' <Predicate = (!icmp_ln32_7)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_94 : Operation 1011 [1/1] (0.97ns)   --->   "%icmp_ln13_57 = icmp_eq  i23 %trunc_ln13_28, i23 0" [../src/matmul.cpp:13]   --->   Operation 1011 'icmp' 'icmp_ln13_57' <Predicate = (!icmp_ln32_7)> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_94 : Operation 1012 [1/1] (0.33ns)   --->   "%or_ln13_28 = or i1 %icmp_ln13_57, i1 %icmp_ln13_56" [../src/matmul.cpp:13]   --->   Operation 1012 'or' 'or_ln13_28' <Predicate = (!icmp_ln32_7)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_94 : Operation 1013 [1/2] (3.34ns)   --->   "%tmp_1106 = fcmp_ogt  i32 %arr_load_28, i32 %arr_load_29" [../src/matmul.cpp:13]   --->   Operation 1013 'fcmp' 'tmp_1106' <Predicate = (!icmp_ln32_7)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_94 : Operation 1014 [2/2] (3.34ns)   --->   "%tmp_1108 = fcmp_ogt  i32 %arr_load_28, i32 %arr_load_30" [../src/matmul.cpp:13]   --->   Operation 1014 'fcmp' 'tmp_1108' <Predicate = (!icmp_ln32_7)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_94 : Operation 1015 [2/2] (3.34ns)   --->   "%tmp_1110 = fcmp_ogt  i32 %arr_load_28, i32 %arr_load_31" [../src/matmul.cpp:13]   --->   Operation 1015 'fcmp' 'tmp_1110' <Predicate = (!icmp_ln32_7)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 95 <SV = 52> <Delay = 4.01>
ST_95 : Operation 1016 [1/1] (0.00ns)   --->   "%bitcast_ln13_29 = bitcast i32 %arr_load_29" [../src/matmul.cpp:13]   --->   Operation 1016 'bitcast' 'bitcast_ln13_29' <Predicate = (!icmp_ln32_7)> <Delay = 0.00>
ST_95 : Operation 1017 [1/1] (0.00ns)   --->   "%tmp_1105 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln13_29, i32 23, i32 30" [../src/matmul.cpp:13]   --->   Operation 1017 'partselect' 'tmp_1105' <Predicate = (!icmp_ln32_7)> <Delay = 0.00>
ST_95 : Operation 1018 [1/1] (0.00ns)   --->   "%trunc_ln13_29 = trunc i32 %bitcast_ln13_29" [../src/matmul.cpp:13]   --->   Operation 1018 'trunc' 'trunc_ln13_29' <Predicate = (!icmp_ln32_7)> <Delay = 0.00>
ST_95 : Operation 1019 [1/1] (0.85ns)   --->   "%icmp_ln13_58 = icmp_ne  i8 %tmp_1105, i8 255" [../src/matmul.cpp:13]   --->   Operation 1019 'icmp' 'icmp_ln13_58' <Predicate = (!icmp_ln32_7)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_95 : Operation 1020 [1/1] (0.97ns)   --->   "%icmp_ln13_59 = icmp_eq  i23 %trunc_ln13_29, i23 0" [../src/matmul.cpp:13]   --->   Operation 1020 'icmp' 'icmp_ln13_59' <Predicate = (!icmp_ln32_7)> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_95 : Operation 1021 [1/1] (0.33ns)   --->   "%or_ln13_29 = or i1 %icmp_ln13_59, i1 %icmp_ln13_58" [../src/matmul.cpp:13]   --->   Operation 1021 'or' 'or_ln13_29' <Predicate = (!icmp_ln32_7)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_95 : Operation 1022 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_17)   --->   "%and_ln13_59 = and i1 %or_ln13_28, i1 %or_ln13_29" [../src/matmul.cpp:13]   --->   Operation 1022 'and' 'and_ln13_59' <Predicate = (!icmp_ln32_7)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_95 : Operation 1023 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_17)   --->   "%and_ln13_60 = and i1 %and_ln13_59, i1 %tmp_1106" [../src/matmul.cpp:13]   --->   Operation 1023 'and' 'and_ln13_60' <Predicate = (!icmp_ln32_7)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_95 : Operation 1024 [1/1] (0.00ns)   --->   "%bitcast_ln13_30 = bitcast i32 %arr_load_30" [../src/matmul.cpp:13]   --->   Operation 1024 'bitcast' 'bitcast_ln13_30' <Predicate = (!icmp_ln32_7)> <Delay = 0.00>
ST_95 : Operation 1025 [1/1] (0.00ns)   --->   "%tmp_1107 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln13_30, i32 23, i32 30" [../src/matmul.cpp:13]   --->   Operation 1025 'partselect' 'tmp_1107' <Predicate = (!icmp_ln32_7)> <Delay = 0.00>
ST_95 : Operation 1026 [1/1] (0.00ns)   --->   "%trunc_ln13_30 = trunc i32 %bitcast_ln13_30" [../src/matmul.cpp:13]   --->   Operation 1026 'trunc' 'trunc_ln13_30' <Predicate = (!icmp_ln32_7)> <Delay = 0.00>
ST_95 : Operation 1027 [1/1] (0.85ns)   --->   "%icmp_ln13_60 = icmp_ne  i8 %tmp_1107, i8 255" [../src/matmul.cpp:13]   --->   Operation 1027 'icmp' 'icmp_ln13_60' <Predicate = (!icmp_ln32_7)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_95 : Operation 1028 [1/1] (0.97ns)   --->   "%icmp_ln13_61 = icmp_eq  i23 %trunc_ln13_30, i23 0" [../src/matmul.cpp:13]   --->   Operation 1028 'icmp' 'icmp_ln13_61' <Predicate = (!icmp_ln32_7)> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_95 : Operation 1029 [1/1] (0.33ns)   --->   "%or_ln13_30 = or i1 %icmp_ln13_61, i1 %icmp_ln13_60" [../src/matmul.cpp:13]   --->   Operation 1029 'or' 'or_ln13_30' <Predicate = (!icmp_ln32_7)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_95 : Operation 1030 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_65)   --->   "%and_ln13_61 = and i1 %or_ln13_28, i1 %or_ln13_30" [../src/matmul.cpp:13]   --->   Operation 1030 'and' 'and_ln13_61' <Predicate = (!icmp_ln32_7)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_95 : Operation 1031 [1/2] (3.34ns)   --->   "%tmp_1108 = fcmp_ogt  i32 %arr_load_28, i32 %arr_load_30" [../src/matmul.cpp:13]   --->   Operation 1031 'fcmp' 'tmp_1108' <Predicate = (!icmp_ln32_7)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_95 : Operation 1032 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_65)   --->   "%and_ln13_62 = and i1 %and_ln13_61, i1 %tmp_1108" [../src/matmul.cpp:13]   --->   Operation 1032 'and' 'and_ln13_62' <Predicate = (!icmp_ln32_7)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_95 : Operation 1033 [1/1] (0.00ns)   --->   "%bitcast_ln13_31 = bitcast i32 %arr_load_31" [../src/matmul.cpp:13]   --->   Operation 1033 'bitcast' 'bitcast_ln13_31' <Predicate = (!icmp_ln32_7)> <Delay = 0.00>
ST_95 : Operation 1034 [1/1] (0.00ns)   --->   "%tmp_1109 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln13_31, i32 23, i32 30" [../src/matmul.cpp:13]   --->   Operation 1034 'partselect' 'tmp_1109' <Predicate = (!icmp_ln32_7)> <Delay = 0.00>
ST_95 : Operation 1035 [1/1] (0.00ns)   --->   "%trunc_ln13_31 = trunc i32 %bitcast_ln13_31" [../src/matmul.cpp:13]   --->   Operation 1035 'trunc' 'trunc_ln13_31' <Predicate = (!icmp_ln32_7)> <Delay = 0.00>
ST_95 : Operation 1036 [1/1] (0.85ns)   --->   "%icmp_ln13_62 = icmp_ne  i8 %tmp_1109, i8 255" [../src/matmul.cpp:13]   --->   Operation 1036 'icmp' 'icmp_ln13_62' <Predicate = (!icmp_ln32_7)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_95 : Operation 1037 [1/1] (0.97ns)   --->   "%icmp_ln13_63 = icmp_eq  i23 %trunc_ln13_31, i23 0" [../src/matmul.cpp:13]   --->   Operation 1037 'icmp' 'icmp_ln13_63' <Predicate = (!icmp_ln32_7)> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_95 : Operation 1038 [1/1] (0.33ns)   --->   "%or_ln13_31 = or i1 %icmp_ln13_63, i1 %icmp_ln13_62" [../src/matmul.cpp:13]   --->   Operation 1038 'or' 'or_ln13_31' <Predicate = (!icmp_ln32_7)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_95 : Operation 1039 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_65)   --->   "%and_ln13_63 = and i1 %or_ln13_28, i1 %or_ln13_31" [../src/matmul.cpp:13]   --->   Operation 1039 'and' 'and_ln13_63' <Predicate = (!icmp_ln32_7)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_95 : Operation 1040 [1/2] (3.34ns)   --->   "%tmp_1110 = fcmp_ogt  i32 %arr_load_28, i32 %arr_load_31" [../src/matmul.cpp:13]   --->   Operation 1040 'fcmp' 'tmp_1110' <Predicate = (!icmp_ln32_7)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_95 : Operation 1041 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_65)   --->   "%and_ln13_64 = and i1 %and_ln13_63, i1 %tmp_1110" [../src/matmul.cpp:13]   --->   Operation 1041 'and' 'and_ln13_64' <Predicate = (!icmp_ln32_7)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_95 : Operation 1042 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln13_65 = and i1 %and_ln13_62, i1 %and_ln13_64" [../src/matmul.cpp:13]   --->   Operation 1042 'and' 'and_ln13_65' <Predicate = (!icmp_ln32_7)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_95 : Operation 1043 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln13_17 = and i1 %and_ln13_65, i1 %and_ln13_60" [../src/matmul.cpp:13]   --->   Operation 1043 'and' 'and_ln13_17' <Predicate = (!icmp_ln32_7)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_95 : Operation 1044 [2/2] (3.34ns)   --->   "%tmp_1111 = fcmp_ogt  i32 %arr_load_29, i32 %arr_load_30" [../src/matmul.cpp:16]   --->   Operation 1044 'fcmp' 'tmp_1111' <Predicate = (!icmp_ln32_7)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_95 : Operation 1045 [2/2] (3.34ns)   --->   "%tmp_1112 = fcmp_ogt  i32 %arr_load_29, i32 %arr_load_31" [../src/matmul.cpp:16]   --->   Operation 1045 'fcmp' 'tmp_1112' <Predicate = (!icmp_ln32_7)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 96 <SV = 53> <Delay = 4.12>
ST_96 : Operation 1046 [1/1] (0.00ns) (grouped into LUT with out node and_ln16_7)   --->   "%and_ln16_45 = and i1 %or_ln13_29, i1 %or_ln13_30" [../src/matmul.cpp:16]   --->   Operation 1046 'and' 'and_ln16_45' <Predicate = (!icmp_ln32_7)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_96 : Operation 1047 [1/2] (3.34ns)   --->   "%tmp_1111 = fcmp_ogt  i32 %arr_load_29, i32 %arr_load_30" [../src/matmul.cpp:16]   --->   Operation 1047 'fcmp' 'tmp_1111' <Predicate = (!icmp_ln32_7)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_96 : Operation 1048 [1/1] (0.00ns) (grouped into LUT with out node and_ln16_7)   --->   "%and_ln16_46 = and i1 %and_ln16_45, i1 %tmp_1111" [../src/matmul.cpp:16]   --->   Operation 1048 'and' 'and_ln16_46' <Predicate = (!icmp_ln32_7)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_96 : Operation 1049 [1/1] (0.00ns) (grouped into LUT with out node and_ln16_7)   --->   "%and_ln16_47 = and i1 %or_ln13_29, i1 %or_ln13_31" [../src/matmul.cpp:16]   --->   Operation 1049 'and' 'and_ln16_47' <Predicate = (!icmp_ln32_7)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_96 : Operation 1050 [1/2] (3.34ns)   --->   "%tmp_1112 = fcmp_ogt  i32 %arr_load_29, i32 %arr_load_31" [../src/matmul.cpp:16]   --->   Operation 1050 'fcmp' 'tmp_1112' <Predicate = (!icmp_ln32_7)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_96 : Operation 1051 [1/1] (0.00ns) (grouped into LUT with out node and_ln16_7)   --->   "%and_ln16_48 = and i1 %and_ln16_47, i1 %tmp_1112" [../src/matmul.cpp:16]   --->   Operation 1051 'and' 'and_ln16_48' <Predicate = (!icmp_ln32_7)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_96 : Operation 1052 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln16_7 = and i1 %and_ln16_46, i1 %and_ln16_48" [../src/matmul.cpp:16]   --->   Operation 1052 'and' 'and_ln16_7' <Predicate = (!icmp_ln32_7)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_96 : Operation 1053 [2/2] (3.34ns)   --->   "%tmp_1113 = fcmp_ogt  i32 %arr_load_30, i32 %arr_load_31" [../src/matmul.cpp:19]   --->   Operation 1053 'fcmp' 'tmp_1113' <Predicate = (!icmp_ln32_7)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_96 : Operation 1054 [1/1] (0.00ns) (grouped into LUT with out node select_ln16_7)   --->   "%select_ln13_7 = select i1 %and_ln13_17, i11 %add_ln8_28, i11 %add_ln8_31" [../src/matmul.cpp:13]   --->   Operation 1054 'select' 'select_ln13_7' <Predicate = (!icmp_ln32_7)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_96 : Operation 1055 [1/1] (0.00ns) (grouped into LUT with out node select_ln16_7)   --->   "%xor_ln13_7 = xor i1 %and_ln13_17, i1 1" [../src/matmul.cpp:13]   --->   Operation 1055 'xor' 'xor_ln13_7' <Predicate = (!icmp_ln32_7)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_96 : Operation 1056 [1/1] (0.00ns) (grouped into LUT with out node select_ln16_7)   --->   "%and_ln16_49 = and i1 %and_ln16_7, i1 %xor_ln13_7" [../src/matmul.cpp:16]   --->   Operation 1056 'and' 'and_ln16_49' <Predicate = (!icmp_ln32_7)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_96 : Operation 1057 [1/1] (0.45ns) (out node of the LUT)   --->   "%select_ln16_7 = select i1 %and_ln16_49, i11 %add_ln8_29, i11 %select_ln13_7" [../src/matmul.cpp:16]   --->   Operation 1057 'select' 'select_ln16_7' <Predicate = (!icmp_ln32_7)> <Delay = 0.45> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 97 <SV = 54> <Delay = 5.48>
ST_97 : Operation 1058 [1/1] (0.00ns) (grouped into LUT with out node and_ln19_23)   --->   "%and_ln19_21 = and i1 %or_ln13_30, i1 %or_ln13_31" [../src/matmul.cpp:19]   --->   Operation 1058 'and' 'and_ln19_21' <Predicate = (!icmp_ln32_7)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_97 : Operation 1059 [1/2] (3.34ns)   --->   "%tmp_1113 = fcmp_ogt  i32 %arr_load_30, i32 %arr_load_31" [../src/matmul.cpp:19]   --->   Operation 1059 'fcmp' 'tmp_1113' <Predicate = (!icmp_ln32_7)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_97 : Operation 1060 [1/1] (0.00ns) (grouped into LUT with out node and_ln19_23)   --->   "%and_ln19_22 = and i1 %and_ln19_21, i1 %tmp_1113" [../src/matmul.cpp:19]   --->   Operation 1060 'and' 'and_ln19_22' <Predicate = (!icmp_ln32_7)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_97 : Operation 1061 [1/1] (0.00ns) (grouped into LUT with out node and_ln19_23)   --->   "%or_ln16_7 = or i1 %and_ln13_17, i1 %and_ln16_7" [../src/matmul.cpp:16]   --->   Operation 1061 'or' 'or_ln16_7' <Predicate = (!icmp_ln32_7)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_97 : Operation 1062 [1/1] (0.00ns) (grouped into LUT with out node and_ln19_23)   --->   "%xor_ln16_7 = xor i1 %or_ln16_7, i1 1" [../src/matmul.cpp:16]   --->   Operation 1062 'xor' 'xor_ln16_7' <Predicate = (!icmp_ln32_7)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_97 : Operation 1063 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln19_23 = and i1 %and_ln19_22, i1 %xor_ln16_7" [../src/matmul.cpp:19]   --->   Operation 1063 'and' 'and_ln19_23' <Predicate = (!icmp_ln32_7)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_97 : Operation 1064 [1/1] (0.45ns) (out node of the LUT)   --->   "%select_ln19_7 = select i1 %and_ln19_23, i11 %add_ln8_30, i11 %select_ln16_7" [../src/matmul.cpp:19]   --->   Operation 1064 'select' 'select_ln19_7' <Predicate = (!icmp_ln32_7)> <Delay = 0.45> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_97 : Operation 1065 [1/1] (0.00ns)   --->   "%zext_ln8_47 = zext i11 %select_ln19_7" [../src/matmul.cpp:8]   --->   Operation 1065 'zext' 'zext_ln8_47' <Predicate = (!icmp_ln32_7)> <Delay = 0.00>
ST_97 : Operation 1066 [1/1] (0.00ns)   --->   "%arr_addr_47 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_47" [../src/matmul.cpp:8]   --->   Operation 1066 'getelementptr' 'arr_addr_47' <Predicate = (!icmp_ln32_7)> <Delay = 0.00>
ST_97 : Operation 1067 [2/2] (1.35ns)   --->   "%arr_load_47 = load i11 %arr_addr_47" [../src/matmul.cpp:19]   --->   Operation 1067 'load' 'arr_load_47' <Predicate = (!icmp_ln32_7)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>

State 98 <SV = 55> <Delay = 2.70>
ST_98 : Operation 1068 [1/1] (0.00ns)   --->   "%t_1_7_cast = zext i11 %t_1_7" [../src/matmul.cpp:34]   --->   Operation 1068 'zext' 't_1_7_cast' <Predicate = (!icmp_ln32_7)> <Delay = 0.00>
ST_98 : Operation 1069 [1/1] (0.00ns)   --->   "%specloopname_ln28 = specloopname void @_ssdm_op_SpecLoopName, void @empty_0" [../src/matmul.cpp:28]   --->   Operation 1069 'specloopname' 'specloopname_ln28' <Predicate = (!icmp_ln32_7)> <Delay = 0.00>
ST_98 : Operation 1070 [1/2] (1.35ns)   --->   "%arr_load_47 = load i11 %arr_addr_47" [../src/matmul.cpp:19]   --->   Operation 1070 'load' 'arr_load_47' <Predicate = (!icmp_ln32_7)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_98 : Operation 1071 [1/1] (0.94ns)   --->   "%add_ln34_7 = add i11 %t_1_7, i11 1" [../src/matmul.cpp:34]   --->   Operation 1071 'add' 'add_ln34_7' <Predicate = (!icmp_ln32_7)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_98 : Operation 1072 [1/1] (0.00ns)   --->   "%out_addr_7 = getelementptr i32 %out_r, i64 0, i64 %t_1_7_cast" [../src/matmul.cpp:34]   --->   Operation 1072 'getelementptr' 'out_addr_7' <Predicate = (!icmp_ln32_7)> <Delay = 0.00>
ST_98 : Operation 1073 [1/1] (1.35ns)   --->   "%store_ln34 = store i32 %arr_load_47, i11 %out_addr_7" [../src/matmul.cpp:34]   --->   Operation 1073 'store' 'store_ln34' <Predicate = (!icmp_ln32_7)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_98 : Operation 1074 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 1074 'br' 'br_ln0' <Predicate = (!icmp_ln32_7)> <Delay = 0.00>

State 99 <SV = 50> <Delay = 2.95>
ST_99 : Operation 1075 [1/1] (0.00ns)   --->   "%trunc_ln29_8 = trunc i32 %add_ln29_18" [../src/matmul.cpp:29]   --->   Operation 1075 'trunc' 'trunc_ln29_8' <Predicate = true> <Delay = 0.00>
ST_99 : Operation 1076 [1/1] (1.20ns)   --->   "%add_ln29_21 = add i32 %zext_ln29_3, i32 %add_ln29_18" [../src/matmul.cpp:29]   --->   Operation 1076 'add' 'add_ln29_21' <Predicate = true> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_99 : Operation 1077 [1/1] (1.47ns)   --->   "%add_ln29_22 = add i64 %i_0, i64 16" [../src/matmul.cpp:29]   --->   Operation 1077 'add' 'add_ln29_22' <Predicate = true> <Delay = 1.47> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_99 : Operation 1078 [1/1] (0.94ns)   --->   "%add_ln29_23 = add i11 %trunc_ln29_1, i11 16" [../src/matmul.cpp:29]   --->   Operation 1078 'add' 'add_ln29_23' <Predicate = true> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_99 : Operation 1079 [1/1] (1.48ns)   --->   "%icmp_ln29_8 = icmp_slt  i64 %add_ln29_22, i64 %zext_ln29" [../src/matmul.cpp:29]   --->   Operation 1079 'icmp' 'icmp_ln29_8' <Predicate = true> <Delay = 1.48> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_99 : Operation 1080 [1/1] (0.00ns)   --->   "%br_ln29 = br i1 %icmp_ln29_8, void %._crit_edge10, void %.split4.8" [../src/matmul.cpp:29]   --->   Operation 1080 'br' 'br_ln29' <Predicate = true> <Delay = 0.00>
ST_99 : Operation 1081 [1/1] (0.00ns)   --->   "%empty_75 = or i11 %add_ln29_23, i11 1" [../src/matmul.cpp:29]   --->   Operation 1081 'or' 'empty_75' <Predicate = (icmp_ln29_8)> <Delay = 0.00>
ST_99 : Operation 1082 [4/4] (0.69ns) (root node of the DSP)   --->   "%empty_76 = mul i11 %add_ln29_23, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 1082 'mul' 'empty_76' <Predicate = (icmp_ln29_8)> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_99 : Operation 1083 [4/4] (0.69ns) (root node of the DSP)   --->   "%empty_77 = mul i11 %empty_75, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 1083 'mul' 'empty_77' <Predicate = (icmp_ln29_8)> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 100 <SV = 51> <Delay = 0.69>
ST_100 : Operation 1084 [3/4] (0.69ns) (root node of the DSP)   --->   "%empty_76 = mul i11 %add_ln29_23, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 1084 'mul' 'empty_76' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_100 : Operation 1085 [3/4] (0.69ns) (root node of the DSP)   --->   "%empty_77 = mul i11 %empty_75, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 1085 'mul' 'empty_77' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 101 <SV = 52> <Delay = 0.69>
ST_101 : Operation 1086 [2/4] (0.69ns) (root node of the DSP)   --->   "%empty_76 = mul i11 %add_ln29_23, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 1086 'mul' 'empty_76' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_101 : Operation 1087 [2/4] (0.69ns) (root node of the DSP)   --->   "%empty_77 = mul i11 %empty_75, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 1087 'mul' 'empty_77' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 102 <SV = 53> <Delay = 0.94>
ST_102 : Operation 1088 [1/4] (0.00ns) (root node of the DSP)   --->   "%empty_76 = mul i11 %add_ln29_23, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 1088 'mul' 'empty_76' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_102 : Operation 1089 [1/4] (0.00ns) (root node of the DSP)   --->   "%empty_77 = mul i11 %empty_75, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 1089 'mul' 'empty_77' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_102 : Operation 1090 [1/1] (0.94ns)   --->   "%add_ln32_17 = add i11 %zext_ln29_4, i11 %trunc_ln29_8" [../src/matmul.cpp:32]   --->   Operation 1090 'add' 'add_ln32_17' <Predicate = true> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_102 : Operation 1091 [1/1] (0.48ns)   --->   "%br_ln32 = br void" [../src/matmul.cpp:32]   --->   Operation 1091 'br' 'br_ln32' <Predicate = true> <Delay = 0.48>

State 103 <SV = 54> <Delay = 2.29>
ST_103 : Operation 1092 [1/1] (0.00ns)   --->   "%t_1_8 = phi i11 %add_ln34_8, void %.split.8_ifconv, i11 %add_ln32_17, void %.split4.8" [../src/matmul.cpp:34]   --->   Operation 1092 'phi' 't_1_8' <Predicate = true> <Delay = 0.00>
ST_103 : Operation 1093 [1/1] (0.00ns)   --->   "%j_8 = phi i64 %add_ln32_8, void %.split.8_ifconv, i64 0, void %.split4.8" [../src/matmul.cpp:32]   --->   Operation 1093 'phi' 'j_8' <Predicate = true> <Delay = 0.00>
ST_103 : Operation 1094 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 1094 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_103 : Operation 1095 [1/1] (1.48ns)   --->   "%icmp_ln32_8 = icmp_eq  i64 %j_8, i64 %zext_ln32" [../src/matmul.cpp:32]   --->   Operation 1095 'icmp' 'icmp_ln32_8' <Predicate = true> <Delay = 1.48> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_103 : Operation 1096 [1/1] (0.00ns)   --->   "%empty_78 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 0, i64 32, i64 0"   --->   Operation 1096 'speclooptripcount' 'empty_78' <Predicate = true> <Delay = 0.00>
ST_103 : Operation 1097 [1/1] (0.00ns)   --->   "%br_ln32 = br i1 %icmp_ln32_8, void %.split.8_ifconv, void %._crit_edge.loopexit.8" [../src/matmul.cpp:32]   --->   Operation 1097 'br' 'br_ln32' <Predicate = true> <Delay = 0.00>
ST_103 : Operation 1098 [1/1] (1.47ns)   --->   "%add_ln32_8 = add i64 %j_8, i64 2" [../src/matmul.cpp:32]   --->   Operation 1098 'add' 'add_ln32_8' <Predicate = (!icmp_ln32_8)> <Delay = 1.47> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_103 : Operation 1099 [1/1] (0.00ns)   --->   "%empty_79 = trunc i64 %j_8" [../src/matmul.cpp:32]   --->   Operation 1099 'trunc' 'empty_79' <Predicate = (!icmp_ln32_8)> <Delay = 0.00>
ST_103 : Operation 1100 [1/1] (0.94ns)   --->   "%add_ln8_32 = add i11 %empty_79, i11 %empty_76" [../src/matmul.cpp:8]   --->   Operation 1100 'add' 'add_ln8_32' <Predicate = (!icmp_ln32_8)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_103 : Operation 1101 [1/1] (0.00ns)   --->   "%zext_ln8_32 = zext i11 %add_ln8_32" [../src/matmul.cpp:8]   --->   Operation 1101 'zext' 'zext_ln8_32' <Predicate = (!icmp_ln32_8)> <Delay = 0.00>
ST_103 : Operation 1102 [1/1] (0.00ns)   --->   "%arr_addr_32 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_32" [../src/matmul.cpp:8]   --->   Operation 1102 'getelementptr' 'arr_addr_32' <Predicate = (!icmp_ln32_8)> <Delay = 0.00>
ST_103 : Operation 1103 [2/2] (1.35ns)   --->   "%arr_load_32 = load i11 %arr_addr_32" [../src/matmul.cpp:8]   --->   Operation 1103 'load' 'arr_load_32' <Predicate = (!icmp_ln32_8)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_103 : Operation 1104 [1/1] (0.94ns)   --->   "%add_ln8_33 = add i11 %empty_79, i11 %empty_77" [../src/matmul.cpp:8]   --->   Operation 1104 'add' 'add_ln8_33' <Predicate = (!icmp_ln32_8)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_103 : Operation 1105 [1/1] (0.00ns)   --->   "%zext_ln8_33 = zext i11 %add_ln8_33" [../src/matmul.cpp:8]   --->   Operation 1105 'zext' 'zext_ln8_33' <Predicate = (!icmp_ln32_8)> <Delay = 0.00>
ST_103 : Operation 1106 [1/1] (0.00ns)   --->   "%arr_addr_33 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_33" [../src/matmul.cpp:8]   --->   Operation 1106 'getelementptr' 'arr_addr_33' <Predicate = (!icmp_ln32_8)> <Delay = 0.00>
ST_103 : Operation 1107 [2/2] (1.35ns)   --->   "%arr_load_33 = load i11 %arr_addr_33" [../src/matmul.cpp:8]   --->   Operation 1107 'load' 'arr_load_33' <Predicate = (!icmp_ln32_8)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>

State 104 <SV = 55> <Delay = 4.70>
ST_104 : Operation 1108 [1/2] (1.35ns)   --->   "%arr_load_32 = load i11 %arr_addr_32" [../src/matmul.cpp:8]   --->   Operation 1108 'load' 'arr_load_32' <Predicate = (!icmp_ln32_8)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_104 : Operation 1109 [1/2] (1.35ns)   --->   "%arr_load_33 = load i11 %arr_addr_33" [../src/matmul.cpp:8]   --->   Operation 1109 'load' 'arr_load_33' <Predicate = (!icmp_ln32_8)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_104 : Operation 1110 [1/1] (0.00ns)   --->   "%or_ln34_8 = or i11 %empty_79, i11 1" [../src/matmul.cpp:34]   --->   Operation 1110 'or' 'or_ln34_8' <Predicate = (!icmp_ln32_8)> <Delay = 0.00>
ST_104 : Operation 1111 [1/1] (0.94ns)   --->   "%add_ln8_34 = add i11 %or_ln34_8, i11 %empty_76" [../src/matmul.cpp:8]   --->   Operation 1111 'add' 'add_ln8_34' <Predicate = (!icmp_ln32_8)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_104 : Operation 1112 [1/1] (0.00ns)   --->   "%zext_ln8_34 = zext i11 %add_ln8_34" [../src/matmul.cpp:8]   --->   Operation 1112 'zext' 'zext_ln8_34' <Predicate = (!icmp_ln32_8)> <Delay = 0.00>
ST_104 : Operation 1113 [1/1] (0.00ns)   --->   "%arr_addr_34 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_34" [../src/matmul.cpp:8]   --->   Operation 1113 'getelementptr' 'arr_addr_34' <Predicate = (!icmp_ln32_8)> <Delay = 0.00>
ST_104 : Operation 1114 [2/2] (1.35ns)   --->   "%arr_load_34 = load i11 %arr_addr_34" [../src/matmul.cpp:8]   --->   Operation 1114 'load' 'arr_load_34' <Predicate = (!icmp_ln32_8)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_104 : Operation 1115 [1/1] (0.94ns)   --->   "%add_ln8_35 = add i11 %or_ln34_8, i11 %empty_77" [../src/matmul.cpp:8]   --->   Operation 1115 'add' 'add_ln8_35' <Predicate = (!icmp_ln32_8)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_104 : Operation 1116 [1/1] (0.00ns)   --->   "%zext_ln8_35 = zext i11 %add_ln8_35" [../src/matmul.cpp:8]   --->   Operation 1116 'zext' 'zext_ln8_35' <Predicate = (!icmp_ln32_8)> <Delay = 0.00>
ST_104 : Operation 1117 [1/1] (0.00ns)   --->   "%arr_addr_35 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_35" [../src/matmul.cpp:8]   --->   Operation 1117 'getelementptr' 'arr_addr_35' <Predicate = (!icmp_ln32_8)> <Delay = 0.00>
ST_104 : Operation 1118 [2/2] (1.35ns)   --->   "%arr_load_35 = load i11 %arr_addr_35" [../src/matmul.cpp:8]   --->   Operation 1118 'load' 'arr_load_35' <Predicate = (!icmp_ln32_8)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_104 : Operation 1119 [2/2] (3.34ns)   --->   "%tmp_1116 = fcmp_ogt  i32 %arr_load_32, i32 %arr_load_33" [../src/matmul.cpp:13]   --->   Operation 1119 'fcmp' 'tmp_1116' <Predicate = (!icmp_ln32_8)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 105 <SV = 56> <Delay = 4.70>
ST_105 : Operation 1120 [1/2] (1.35ns)   --->   "%arr_load_34 = load i11 %arr_addr_34" [../src/matmul.cpp:8]   --->   Operation 1120 'load' 'arr_load_34' <Predicate = (!icmp_ln32_8)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_105 : Operation 1121 [1/2] (1.35ns)   --->   "%arr_load_35 = load i11 %arr_addr_35" [../src/matmul.cpp:8]   --->   Operation 1121 'load' 'arr_load_35' <Predicate = (!icmp_ln32_8)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_105 : Operation 1122 [1/1] (0.00ns)   --->   "%bitcast_ln13_32 = bitcast i32 %arr_load_32" [../src/matmul.cpp:13]   --->   Operation 1122 'bitcast' 'bitcast_ln13_32' <Predicate = (!icmp_ln32_8)> <Delay = 0.00>
ST_105 : Operation 1123 [1/1] (0.00ns)   --->   "%tmp_1114 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln13_32, i32 23, i32 30" [../src/matmul.cpp:13]   --->   Operation 1123 'partselect' 'tmp_1114' <Predicate = (!icmp_ln32_8)> <Delay = 0.00>
ST_105 : Operation 1124 [1/1] (0.00ns)   --->   "%trunc_ln13_32 = trunc i32 %bitcast_ln13_32" [../src/matmul.cpp:13]   --->   Operation 1124 'trunc' 'trunc_ln13_32' <Predicate = (!icmp_ln32_8)> <Delay = 0.00>
ST_105 : Operation 1125 [1/1] (0.85ns)   --->   "%icmp_ln13_64 = icmp_ne  i8 %tmp_1114, i8 255" [../src/matmul.cpp:13]   --->   Operation 1125 'icmp' 'icmp_ln13_64' <Predicate = (!icmp_ln32_8)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_105 : Operation 1126 [1/1] (0.97ns)   --->   "%icmp_ln13_65 = icmp_eq  i23 %trunc_ln13_32, i23 0" [../src/matmul.cpp:13]   --->   Operation 1126 'icmp' 'icmp_ln13_65' <Predicate = (!icmp_ln32_8)> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_105 : Operation 1127 [1/1] (0.33ns)   --->   "%or_ln13_32 = or i1 %icmp_ln13_65, i1 %icmp_ln13_64" [../src/matmul.cpp:13]   --->   Operation 1127 'or' 'or_ln13_32' <Predicate = (!icmp_ln32_8)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_105 : Operation 1128 [1/2] (3.34ns)   --->   "%tmp_1116 = fcmp_ogt  i32 %arr_load_32, i32 %arr_load_33" [../src/matmul.cpp:13]   --->   Operation 1128 'fcmp' 'tmp_1116' <Predicate = (!icmp_ln32_8)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_105 : Operation 1129 [2/2] (3.34ns)   --->   "%tmp_1118 = fcmp_ogt  i32 %arr_load_32, i32 %arr_load_34" [../src/matmul.cpp:13]   --->   Operation 1129 'fcmp' 'tmp_1118' <Predicate = (!icmp_ln32_8)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_105 : Operation 1130 [2/2] (3.34ns)   --->   "%tmp_1120 = fcmp_ogt  i32 %arr_load_32, i32 %arr_load_35" [../src/matmul.cpp:13]   --->   Operation 1130 'fcmp' 'tmp_1120' <Predicate = (!icmp_ln32_8)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 106 <SV = 57> <Delay = 4.01>
ST_106 : Operation 1131 [1/1] (0.00ns)   --->   "%bitcast_ln13_33 = bitcast i32 %arr_load_33" [../src/matmul.cpp:13]   --->   Operation 1131 'bitcast' 'bitcast_ln13_33' <Predicate = (!icmp_ln32_8)> <Delay = 0.00>
ST_106 : Operation 1132 [1/1] (0.00ns)   --->   "%tmp_1115 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln13_33, i32 23, i32 30" [../src/matmul.cpp:13]   --->   Operation 1132 'partselect' 'tmp_1115' <Predicate = (!icmp_ln32_8)> <Delay = 0.00>
ST_106 : Operation 1133 [1/1] (0.00ns)   --->   "%trunc_ln13_33 = trunc i32 %bitcast_ln13_33" [../src/matmul.cpp:13]   --->   Operation 1133 'trunc' 'trunc_ln13_33' <Predicate = (!icmp_ln32_8)> <Delay = 0.00>
ST_106 : Operation 1134 [1/1] (0.85ns)   --->   "%icmp_ln13_66 = icmp_ne  i8 %tmp_1115, i8 255" [../src/matmul.cpp:13]   --->   Operation 1134 'icmp' 'icmp_ln13_66' <Predicate = (!icmp_ln32_8)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_106 : Operation 1135 [1/1] (0.97ns)   --->   "%icmp_ln13_67 = icmp_eq  i23 %trunc_ln13_33, i23 0" [../src/matmul.cpp:13]   --->   Operation 1135 'icmp' 'icmp_ln13_67' <Predicate = (!icmp_ln32_8)> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_106 : Operation 1136 [1/1] (0.33ns)   --->   "%or_ln13_33 = or i1 %icmp_ln13_67, i1 %icmp_ln13_66" [../src/matmul.cpp:13]   --->   Operation 1136 'or' 'or_ln13_33' <Predicate = (!icmp_ln32_8)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_106 : Operation 1137 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_18)   --->   "%and_ln13_66 = and i1 %or_ln13_32, i1 %or_ln13_33" [../src/matmul.cpp:13]   --->   Operation 1137 'and' 'and_ln13_66' <Predicate = (!icmp_ln32_8)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_106 : Operation 1138 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_18)   --->   "%and_ln13_67 = and i1 %and_ln13_66, i1 %tmp_1116" [../src/matmul.cpp:13]   --->   Operation 1138 'and' 'and_ln13_67' <Predicate = (!icmp_ln32_8)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_106 : Operation 1139 [1/1] (0.00ns)   --->   "%bitcast_ln13_34 = bitcast i32 %arr_load_34" [../src/matmul.cpp:13]   --->   Operation 1139 'bitcast' 'bitcast_ln13_34' <Predicate = (!icmp_ln32_8)> <Delay = 0.00>
ST_106 : Operation 1140 [1/1] (0.00ns)   --->   "%tmp_1117 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln13_34, i32 23, i32 30" [../src/matmul.cpp:13]   --->   Operation 1140 'partselect' 'tmp_1117' <Predicate = (!icmp_ln32_8)> <Delay = 0.00>
ST_106 : Operation 1141 [1/1] (0.00ns)   --->   "%trunc_ln13_34 = trunc i32 %bitcast_ln13_34" [../src/matmul.cpp:13]   --->   Operation 1141 'trunc' 'trunc_ln13_34' <Predicate = (!icmp_ln32_8)> <Delay = 0.00>
ST_106 : Operation 1142 [1/1] (0.85ns)   --->   "%icmp_ln13_68 = icmp_ne  i8 %tmp_1117, i8 255" [../src/matmul.cpp:13]   --->   Operation 1142 'icmp' 'icmp_ln13_68' <Predicate = (!icmp_ln32_8)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_106 : Operation 1143 [1/1] (0.97ns)   --->   "%icmp_ln13_69 = icmp_eq  i23 %trunc_ln13_34, i23 0" [../src/matmul.cpp:13]   --->   Operation 1143 'icmp' 'icmp_ln13_69' <Predicate = (!icmp_ln32_8)> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_106 : Operation 1144 [1/1] (0.33ns)   --->   "%or_ln13_34 = or i1 %icmp_ln13_69, i1 %icmp_ln13_68" [../src/matmul.cpp:13]   --->   Operation 1144 'or' 'or_ln13_34' <Predicate = (!icmp_ln32_8)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_106 : Operation 1145 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_72)   --->   "%and_ln13_68 = and i1 %or_ln13_32, i1 %or_ln13_34" [../src/matmul.cpp:13]   --->   Operation 1145 'and' 'and_ln13_68' <Predicate = (!icmp_ln32_8)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_106 : Operation 1146 [1/2] (3.34ns)   --->   "%tmp_1118 = fcmp_ogt  i32 %arr_load_32, i32 %arr_load_34" [../src/matmul.cpp:13]   --->   Operation 1146 'fcmp' 'tmp_1118' <Predicate = (!icmp_ln32_8)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_106 : Operation 1147 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_72)   --->   "%and_ln13_69 = and i1 %and_ln13_68, i1 %tmp_1118" [../src/matmul.cpp:13]   --->   Operation 1147 'and' 'and_ln13_69' <Predicate = (!icmp_ln32_8)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_106 : Operation 1148 [1/1] (0.00ns)   --->   "%bitcast_ln13_35 = bitcast i32 %arr_load_35" [../src/matmul.cpp:13]   --->   Operation 1148 'bitcast' 'bitcast_ln13_35' <Predicate = (!icmp_ln32_8)> <Delay = 0.00>
ST_106 : Operation 1149 [1/1] (0.00ns)   --->   "%tmp_1119 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln13_35, i32 23, i32 30" [../src/matmul.cpp:13]   --->   Operation 1149 'partselect' 'tmp_1119' <Predicate = (!icmp_ln32_8)> <Delay = 0.00>
ST_106 : Operation 1150 [1/1] (0.00ns)   --->   "%trunc_ln13_35 = trunc i32 %bitcast_ln13_35" [../src/matmul.cpp:13]   --->   Operation 1150 'trunc' 'trunc_ln13_35' <Predicate = (!icmp_ln32_8)> <Delay = 0.00>
ST_106 : Operation 1151 [1/1] (0.85ns)   --->   "%icmp_ln13_70 = icmp_ne  i8 %tmp_1119, i8 255" [../src/matmul.cpp:13]   --->   Operation 1151 'icmp' 'icmp_ln13_70' <Predicate = (!icmp_ln32_8)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_106 : Operation 1152 [1/1] (0.97ns)   --->   "%icmp_ln13_71 = icmp_eq  i23 %trunc_ln13_35, i23 0" [../src/matmul.cpp:13]   --->   Operation 1152 'icmp' 'icmp_ln13_71' <Predicate = (!icmp_ln32_8)> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_106 : Operation 1153 [1/1] (0.33ns)   --->   "%or_ln13_35 = or i1 %icmp_ln13_71, i1 %icmp_ln13_70" [../src/matmul.cpp:13]   --->   Operation 1153 'or' 'or_ln13_35' <Predicate = (!icmp_ln32_8)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_106 : Operation 1154 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_72)   --->   "%and_ln13_70 = and i1 %or_ln13_32, i1 %or_ln13_35" [../src/matmul.cpp:13]   --->   Operation 1154 'and' 'and_ln13_70' <Predicate = (!icmp_ln32_8)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_106 : Operation 1155 [1/2] (3.34ns)   --->   "%tmp_1120 = fcmp_ogt  i32 %arr_load_32, i32 %arr_load_35" [../src/matmul.cpp:13]   --->   Operation 1155 'fcmp' 'tmp_1120' <Predicate = (!icmp_ln32_8)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_106 : Operation 1156 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_72)   --->   "%and_ln13_71 = and i1 %and_ln13_70, i1 %tmp_1120" [../src/matmul.cpp:13]   --->   Operation 1156 'and' 'and_ln13_71' <Predicate = (!icmp_ln32_8)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_106 : Operation 1157 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln13_72 = and i1 %and_ln13_69, i1 %and_ln13_71" [../src/matmul.cpp:13]   --->   Operation 1157 'and' 'and_ln13_72' <Predicate = (!icmp_ln32_8)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_106 : Operation 1158 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln13_18 = and i1 %and_ln13_72, i1 %and_ln13_67" [../src/matmul.cpp:13]   --->   Operation 1158 'and' 'and_ln13_18' <Predicate = (!icmp_ln32_8)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_106 : Operation 1159 [2/2] (3.34ns)   --->   "%tmp_1121 = fcmp_ogt  i32 %arr_load_33, i32 %arr_load_34" [../src/matmul.cpp:16]   --->   Operation 1159 'fcmp' 'tmp_1121' <Predicate = (!icmp_ln32_8)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_106 : Operation 1160 [2/2] (3.34ns)   --->   "%tmp_1122 = fcmp_ogt  i32 %arr_load_33, i32 %arr_load_35" [../src/matmul.cpp:16]   --->   Operation 1160 'fcmp' 'tmp_1122' <Predicate = (!icmp_ln32_8)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 107 <SV = 58> <Delay = 4.12>
ST_107 : Operation 1161 [1/1] (0.00ns) (grouped into LUT with out node and_ln16_8)   --->   "%and_ln16_50 = and i1 %or_ln13_33, i1 %or_ln13_34" [../src/matmul.cpp:16]   --->   Operation 1161 'and' 'and_ln16_50' <Predicate = (!icmp_ln32_8)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_107 : Operation 1162 [1/2] (3.34ns)   --->   "%tmp_1121 = fcmp_ogt  i32 %arr_load_33, i32 %arr_load_34" [../src/matmul.cpp:16]   --->   Operation 1162 'fcmp' 'tmp_1121' <Predicate = (!icmp_ln32_8)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_107 : Operation 1163 [1/1] (0.00ns) (grouped into LUT with out node and_ln16_8)   --->   "%and_ln16_51 = and i1 %and_ln16_50, i1 %tmp_1121" [../src/matmul.cpp:16]   --->   Operation 1163 'and' 'and_ln16_51' <Predicate = (!icmp_ln32_8)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_107 : Operation 1164 [1/1] (0.00ns) (grouped into LUT with out node and_ln16_8)   --->   "%and_ln16_52 = and i1 %or_ln13_33, i1 %or_ln13_35" [../src/matmul.cpp:16]   --->   Operation 1164 'and' 'and_ln16_52' <Predicate = (!icmp_ln32_8)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_107 : Operation 1165 [1/2] (3.34ns)   --->   "%tmp_1122 = fcmp_ogt  i32 %arr_load_33, i32 %arr_load_35" [../src/matmul.cpp:16]   --->   Operation 1165 'fcmp' 'tmp_1122' <Predicate = (!icmp_ln32_8)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_107 : Operation 1166 [1/1] (0.00ns) (grouped into LUT with out node and_ln16_8)   --->   "%and_ln16_53 = and i1 %and_ln16_52, i1 %tmp_1122" [../src/matmul.cpp:16]   --->   Operation 1166 'and' 'and_ln16_53' <Predicate = (!icmp_ln32_8)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_107 : Operation 1167 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln16_8 = and i1 %and_ln16_51, i1 %and_ln16_53" [../src/matmul.cpp:16]   --->   Operation 1167 'and' 'and_ln16_8' <Predicate = (!icmp_ln32_8)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_107 : Operation 1168 [2/2] (3.34ns)   --->   "%tmp_1123 = fcmp_ogt  i32 %arr_load_34, i32 %arr_load_35" [../src/matmul.cpp:19]   --->   Operation 1168 'fcmp' 'tmp_1123' <Predicate = (!icmp_ln32_8)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_107 : Operation 1169 [1/1] (0.00ns) (grouped into LUT with out node select_ln16_8)   --->   "%select_ln13_8 = select i1 %and_ln13_18, i11 %add_ln8_32, i11 %add_ln8_35" [../src/matmul.cpp:13]   --->   Operation 1169 'select' 'select_ln13_8' <Predicate = (!icmp_ln32_8)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_107 : Operation 1170 [1/1] (0.00ns) (grouped into LUT with out node select_ln16_8)   --->   "%xor_ln13_8 = xor i1 %and_ln13_18, i1 1" [../src/matmul.cpp:13]   --->   Operation 1170 'xor' 'xor_ln13_8' <Predicate = (!icmp_ln32_8)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_107 : Operation 1171 [1/1] (0.00ns) (grouped into LUT with out node select_ln16_8)   --->   "%and_ln16_54 = and i1 %and_ln16_8, i1 %xor_ln13_8" [../src/matmul.cpp:16]   --->   Operation 1171 'and' 'and_ln16_54' <Predicate = (!icmp_ln32_8)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_107 : Operation 1172 [1/1] (0.45ns) (out node of the LUT)   --->   "%select_ln16_8 = select i1 %and_ln16_54, i11 %add_ln8_33, i11 %select_ln13_8" [../src/matmul.cpp:16]   --->   Operation 1172 'select' 'select_ln16_8' <Predicate = (!icmp_ln32_8)> <Delay = 0.45> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 108 <SV = 59> <Delay = 5.48>
ST_108 : Operation 1173 [1/1] (0.00ns) (grouped into LUT with out node and_ln19_26)   --->   "%and_ln19_24 = and i1 %or_ln13_34, i1 %or_ln13_35" [../src/matmul.cpp:19]   --->   Operation 1173 'and' 'and_ln19_24' <Predicate = (!icmp_ln32_8)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_108 : Operation 1174 [1/2] (3.34ns)   --->   "%tmp_1123 = fcmp_ogt  i32 %arr_load_34, i32 %arr_load_35" [../src/matmul.cpp:19]   --->   Operation 1174 'fcmp' 'tmp_1123' <Predicate = (!icmp_ln32_8)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_108 : Operation 1175 [1/1] (0.00ns) (grouped into LUT with out node and_ln19_26)   --->   "%and_ln19_25 = and i1 %and_ln19_24, i1 %tmp_1123" [../src/matmul.cpp:19]   --->   Operation 1175 'and' 'and_ln19_25' <Predicate = (!icmp_ln32_8)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_108 : Operation 1176 [1/1] (0.00ns) (grouped into LUT with out node and_ln19_26)   --->   "%or_ln16_8 = or i1 %and_ln13_18, i1 %and_ln16_8" [../src/matmul.cpp:16]   --->   Operation 1176 'or' 'or_ln16_8' <Predicate = (!icmp_ln32_8)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_108 : Operation 1177 [1/1] (0.00ns) (grouped into LUT with out node and_ln19_26)   --->   "%xor_ln16_8 = xor i1 %or_ln16_8, i1 1" [../src/matmul.cpp:16]   --->   Operation 1177 'xor' 'xor_ln16_8' <Predicate = (!icmp_ln32_8)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_108 : Operation 1178 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln19_26 = and i1 %and_ln19_25, i1 %xor_ln16_8" [../src/matmul.cpp:19]   --->   Operation 1178 'and' 'and_ln19_26' <Predicate = (!icmp_ln32_8)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_108 : Operation 1179 [1/1] (0.45ns) (out node of the LUT)   --->   "%select_ln19_8 = select i1 %and_ln19_26, i11 %add_ln8_34, i11 %select_ln16_8" [../src/matmul.cpp:19]   --->   Operation 1179 'select' 'select_ln19_8' <Predicate = (!icmp_ln32_8)> <Delay = 0.45> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_108 : Operation 1180 [1/1] (0.00ns)   --->   "%zext_ln8_48 = zext i11 %select_ln19_8" [../src/matmul.cpp:8]   --->   Operation 1180 'zext' 'zext_ln8_48' <Predicate = (!icmp_ln32_8)> <Delay = 0.00>
ST_108 : Operation 1181 [1/1] (0.00ns)   --->   "%arr_addr_48 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_48" [../src/matmul.cpp:8]   --->   Operation 1181 'getelementptr' 'arr_addr_48' <Predicate = (!icmp_ln32_8)> <Delay = 0.00>
ST_108 : Operation 1182 [2/2] (1.35ns)   --->   "%arr_load_48 = load i11 %arr_addr_48" [../src/matmul.cpp:19]   --->   Operation 1182 'load' 'arr_load_48' <Predicate = (!icmp_ln32_8)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>

State 109 <SV = 60> <Delay = 2.70>
ST_109 : Operation 1183 [1/1] (0.00ns)   --->   "%t_1_8_cast = zext i11 %t_1_8" [../src/matmul.cpp:34]   --->   Operation 1183 'zext' 't_1_8_cast' <Predicate = (!icmp_ln32_8)> <Delay = 0.00>
ST_109 : Operation 1184 [1/1] (0.00ns)   --->   "%specloopname_ln28 = specloopname void @_ssdm_op_SpecLoopName, void @empty_0" [../src/matmul.cpp:28]   --->   Operation 1184 'specloopname' 'specloopname_ln28' <Predicate = (!icmp_ln32_8)> <Delay = 0.00>
ST_109 : Operation 1185 [1/2] (1.35ns)   --->   "%arr_load_48 = load i11 %arr_addr_48" [../src/matmul.cpp:19]   --->   Operation 1185 'load' 'arr_load_48' <Predicate = (!icmp_ln32_8)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_109 : Operation 1186 [1/1] (0.94ns)   --->   "%add_ln34_8 = add i11 %t_1_8, i11 1" [../src/matmul.cpp:34]   --->   Operation 1186 'add' 'add_ln34_8' <Predicate = (!icmp_ln32_8)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_109 : Operation 1187 [1/1] (0.00ns)   --->   "%out_addr_8 = getelementptr i32 %out_r, i64 0, i64 %t_1_8_cast" [../src/matmul.cpp:34]   --->   Operation 1187 'getelementptr' 'out_addr_8' <Predicate = (!icmp_ln32_8)> <Delay = 0.00>
ST_109 : Operation 1188 [1/1] (1.35ns)   --->   "%store_ln34 = store i32 %arr_load_48, i11 %out_addr_8" [../src/matmul.cpp:34]   --->   Operation 1188 'store' 'store_ln34' <Predicate = (!icmp_ln32_8)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_109 : Operation 1189 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 1189 'br' 'br_ln0' <Predicate = (!icmp_ln32_8)> <Delay = 0.00>

State 110 <SV = 55> <Delay = 2.95>
ST_110 : Operation 1190 [1/1] (0.00ns)   --->   "%trunc_ln29_9 = trunc i32 %add_ln29_21" [../src/matmul.cpp:29]   --->   Operation 1190 'trunc' 'trunc_ln29_9' <Predicate = true> <Delay = 0.00>
ST_110 : Operation 1191 [1/1] (1.20ns)   --->   "%add_ln29_24 = add i32 %zext_ln29_3, i32 %add_ln29_21" [../src/matmul.cpp:29]   --->   Operation 1191 'add' 'add_ln29_24' <Predicate = true> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_110 : Operation 1192 [1/1] (1.47ns)   --->   "%add_ln29_25 = add i64 %i_0, i64 18" [../src/matmul.cpp:29]   --->   Operation 1192 'add' 'add_ln29_25' <Predicate = true> <Delay = 1.47> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_110 : Operation 1193 [1/1] (0.94ns)   --->   "%add_ln29_26 = add i11 %trunc_ln29_1, i11 18" [../src/matmul.cpp:29]   --->   Operation 1193 'add' 'add_ln29_26' <Predicate = true> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_110 : Operation 1194 [1/1] (1.48ns)   --->   "%icmp_ln29_9 = icmp_slt  i64 %add_ln29_25, i64 %zext_ln29" [../src/matmul.cpp:29]   --->   Operation 1194 'icmp' 'icmp_ln29_9' <Predicate = true> <Delay = 1.48> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_110 : Operation 1195 [1/1] (0.00ns)   --->   "%br_ln29 = br i1 %icmp_ln29_9, void %._crit_edge10, void %.split4.9" [../src/matmul.cpp:29]   --->   Operation 1195 'br' 'br_ln29' <Predicate = true> <Delay = 0.00>
ST_110 : Operation 1196 [1/1] (0.00ns)   --->   "%empty_80 = or i11 %add_ln29_26, i11 1" [../src/matmul.cpp:29]   --->   Operation 1196 'or' 'empty_80' <Predicate = (icmp_ln29_9)> <Delay = 0.00>
ST_110 : Operation 1197 [4/4] (0.69ns) (root node of the DSP)   --->   "%empty_81 = mul i11 %add_ln29_26, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 1197 'mul' 'empty_81' <Predicate = (icmp_ln29_9)> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_110 : Operation 1198 [4/4] (0.69ns) (root node of the DSP)   --->   "%empty_82 = mul i11 %empty_80, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 1198 'mul' 'empty_82' <Predicate = (icmp_ln29_9)> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_110 : Operation 1199 [1/1] (0.94ns)   --->   "%add_ln32_18 = add i11 %zext_ln29_4, i11 %trunc_ln29_9" [../src/matmul.cpp:32]   --->   Operation 1199 'add' 'add_ln32_18' <Predicate = (icmp_ln29_9)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 111 <SV = 56> <Delay = 0.69>
ST_111 : Operation 1200 [3/4] (0.69ns) (root node of the DSP)   --->   "%empty_81 = mul i11 %add_ln29_26, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 1200 'mul' 'empty_81' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_111 : Operation 1201 [3/4] (0.69ns) (root node of the DSP)   --->   "%empty_82 = mul i11 %empty_80, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 1201 'mul' 'empty_82' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 112 <SV = 57> <Delay = 0.69>
ST_112 : Operation 1202 [2/4] (0.69ns) (root node of the DSP)   --->   "%empty_81 = mul i11 %add_ln29_26, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 1202 'mul' 'empty_81' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_112 : Operation 1203 [2/4] (0.69ns) (root node of the DSP)   --->   "%empty_82 = mul i11 %empty_80, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 1203 'mul' 'empty_82' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 113 <SV = 58> <Delay = 0.48>
ST_113 : Operation 1204 [1/4] (0.00ns) (root node of the DSP)   --->   "%empty_81 = mul i11 %add_ln29_26, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 1204 'mul' 'empty_81' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_113 : Operation 1205 [1/4] (0.00ns) (root node of the DSP)   --->   "%empty_82 = mul i11 %empty_80, i11 %zext_ln29_2" [../src/matmul.cpp:29]   --->   Operation 1205 'mul' 'empty_82' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_113 : Operation 1206 [1/1] (0.48ns)   --->   "%br_ln32 = br void" [../src/matmul.cpp:32]   --->   Operation 1206 'br' 'br_ln32' <Predicate = true> <Delay = 0.48>

State 114 <SV = 59> <Delay = 2.29>
ST_114 : Operation 1207 [1/1] (0.00ns)   --->   "%j_9 = phi i64 %add_ln32_9, void %.split.9_ifconv, i64 0, void %.split4.9" [../src/matmul.cpp:32]   --->   Operation 1207 'phi' 'j_9' <Predicate = true> <Delay = 0.00>
ST_114 : Operation 1208 [1/1] (1.48ns)   --->   "%icmp_ln32_9 = icmp_eq  i64 %j_9, i64 %zext_ln32" [../src/matmul.cpp:32]   --->   Operation 1208 'icmp' 'icmp_ln32_9' <Predicate = true> <Delay = 1.48> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_114 : Operation 1209 [1/1] (0.00ns)   --->   "%br_ln32 = br i1 %icmp_ln32_9, void %.split.9_ifconv, void %._crit_edge.loopexit.9" [../src/matmul.cpp:32]   --->   Operation 1209 'br' 'br_ln32' <Predicate = true> <Delay = 0.00>
ST_114 : Operation 1210 [1/1] (0.00ns)   --->   "%empty_84 = trunc i64 %j_9" [../src/matmul.cpp:32]   --->   Operation 1210 'trunc' 'empty_84' <Predicate = (!icmp_ln32_9)> <Delay = 0.00>
ST_114 : Operation 1211 [1/1] (0.94ns)   --->   "%add_ln8_36 = add i11 %empty_84, i11 %empty_81" [../src/matmul.cpp:8]   --->   Operation 1211 'add' 'add_ln8_36' <Predicate = (!icmp_ln32_9)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_114 : Operation 1212 [1/1] (0.00ns)   --->   "%zext_ln8_36 = zext i11 %add_ln8_36" [../src/matmul.cpp:8]   --->   Operation 1212 'zext' 'zext_ln8_36' <Predicate = (!icmp_ln32_9)> <Delay = 0.00>
ST_114 : Operation 1213 [1/1] (0.00ns)   --->   "%arr_addr_36 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_36" [../src/matmul.cpp:8]   --->   Operation 1213 'getelementptr' 'arr_addr_36' <Predicate = (!icmp_ln32_9)> <Delay = 0.00>
ST_114 : Operation 1214 [2/2] (1.35ns)   --->   "%arr_load_36 = load i11 %arr_addr_36" [../src/matmul.cpp:8]   --->   Operation 1214 'load' 'arr_load_36' <Predicate = (!icmp_ln32_9)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_114 : Operation 1215 [1/1] (0.94ns)   --->   "%add_ln8_37 = add i11 %empty_84, i11 %empty_82" [../src/matmul.cpp:8]   --->   Operation 1215 'add' 'add_ln8_37' <Predicate = (!icmp_ln32_9)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_114 : Operation 1216 [1/1] (0.00ns)   --->   "%zext_ln8_37 = zext i11 %add_ln8_37" [../src/matmul.cpp:8]   --->   Operation 1216 'zext' 'zext_ln8_37' <Predicate = (!icmp_ln32_9)> <Delay = 0.00>
ST_114 : Operation 1217 [1/1] (0.00ns)   --->   "%arr_addr_37 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_37" [../src/matmul.cpp:8]   --->   Operation 1217 'getelementptr' 'arr_addr_37' <Predicate = (!icmp_ln32_9)> <Delay = 0.00>
ST_114 : Operation 1218 [2/2] (1.35ns)   --->   "%arr_load_37 = load i11 %arr_addr_37" [../src/matmul.cpp:8]   --->   Operation 1218 'load' 'arr_load_37' <Predicate = (!icmp_ln32_9)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>

State 115 <SV = 60> <Delay = 4.70>
ST_115 : Operation 1219 [1/2] (1.35ns)   --->   "%arr_load_36 = load i11 %arr_addr_36" [../src/matmul.cpp:8]   --->   Operation 1219 'load' 'arr_load_36' <Predicate = (!icmp_ln32_9)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_115 : Operation 1220 [1/2] (1.35ns)   --->   "%arr_load_37 = load i11 %arr_addr_37" [../src/matmul.cpp:8]   --->   Operation 1220 'load' 'arr_load_37' <Predicate = (!icmp_ln32_9)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_115 : Operation 1221 [1/1] (0.00ns)   --->   "%or_ln34_9 = or i11 %empty_84, i11 1" [../src/matmul.cpp:34]   --->   Operation 1221 'or' 'or_ln34_9' <Predicate = (!icmp_ln32_9)> <Delay = 0.00>
ST_115 : Operation 1222 [1/1] (0.94ns)   --->   "%add_ln8_38 = add i11 %or_ln34_9, i11 %empty_81" [../src/matmul.cpp:8]   --->   Operation 1222 'add' 'add_ln8_38' <Predicate = (!icmp_ln32_9)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_115 : Operation 1223 [1/1] (0.00ns)   --->   "%zext_ln8_38 = zext i11 %add_ln8_38" [../src/matmul.cpp:8]   --->   Operation 1223 'zext' 'zext_ln8_38' <Predicate = (!icmp_ln32_9)> <Delay = 0.00>
ST_115 : Operation 1224 [1/1] (0.00ns)   --->   "%arr_addr_38 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_38" [../src/matmul.cpp:8]   --->   Operation 1224 'getelementptr' 'arr_addr_38' <Predicate = (!icmp_ln32_9)> <Delay = 0.00>
ST_115 : Operation 1225 [2/2] (1.35ns)   --->   "%arr_load_38 = load i11 %arr_addr_38" [../src/matmul.cpp:8]   --->   Operation 1225 'load' 'arr_load_38' <Predicate = (!icmp_ln32_9)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_115 : Operation 1226 [1/1] (0.94ns)   --->   "%add_ln8_39 = add i11 %or_ln34_9, i11 %empty_82" [../src/matmul.cpp:8]   --->   Operation 1226 'add' 'add_ln8_39' <Predicate = (!icmp_ln32_9)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_115 : Operation 1227 [1/1] (0.00ns)   --->   "%zext_ln8_39 = zext i11 %add_ln8_39" [../src/matmul.cpp:8]   --->   Operation 1227 'zext' 'zext_ln8_39' <Predicate = (!icmp_ln32_9)> <Delay = 0.00>
ST_115 : Operation 1228 [1/1] (0.00ns)   --->   "%arr_addr_39 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_39" [../src/matmul.cpp:8]   --->   Operation 1228 'getelementptr' 'arr_addr_39' <Predicate = (!icmp_ln32_9)> <Delay = 0.00>
ST_115 : Operation 1229 [2/2] (1.35ns)   --->   "%arr_load_39 = load i11 %arr_addr_39" [../src/matmul.cpp:8]   --->   Operation 1229 'load' 'arr_load_39' <Predicate = (!icmp_ln32_9)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_115 : Operation 1230 [2/2] (3.34ns)   --->   "%tmp_1126 = fcmp_ogt  i32 %arr_load_36, i32 %arr_load_37" [../src/matmul.cpp:13]   --->   Operation 1230 'fcmp' 'tmp_1126' <Predicate = (!icmp_ln32_9)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 116 <SV = 61> <Delay = 4.70>
ST_116 : Operation 1231 [1/1] (1.47ns)   --->   "%add_ln32_9 = add i64 %j_9, i64 2" [../src/matmul.cpp:32]   --->   Operation 1231 'add' 'add_ln32_9' <Predicate = (!icmp_ln32_9)> <Delay = 1.47> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_116 : Operation 1232 [1/2] (1.35ns)   --->   "%arr_load_38 = load i11 %arr_addr_38" [../src/matmul.cpp:8]   --->   Operation 1232 'load' 'arr_load_38' <Predicate = (!icmp_ln32_9)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_116 : Operation 1233 [1/2] (1.35ns)   --->   "%arr_load_39 = load i11 %arr_addr_39" [../src/matmul.cpp:8]   --->   Operation 1233 'load' 'arr_load_39' <Predicate = (!icmp_ln32_9)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_116 : Operation 1234 [1/1] (0.00ns)   --->   "%bitcast_ln13_36 = bitcast i32 %arr_load_36" [../src/matmul.cpp:13]   --->   Operation 1234 'bitcast' 'bitcast_ln13_36' <Predicate = (!icmp_ln32_9)> <Delay = 0.00>
ST_116 : Operation 1235 [1/1] (0.00ns)   --->   "%tmp_1124 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln13_36, i32 23, i32 30" [../src/matmul.cpp:13]   --->   Operation 1235 'partselect' 'tmp_1124' <Predicate = (!icmp_ln32_9)> <Delay = 0.00>
ST_116 : Operation 1236 [1/1] (0.00ns)   --->   "%trunc_ln13_36 = trunc i32 %bitcast_ln13_36" [../src/matmul.cpp:13]   --->   Operation 1236 'trunc' 'trunc_ln13_36' <Predicate = (!icmp_ln32_9)> <Delay = 0.00>
ST_116 : Operation 1237 [1/1] (0.85ns)   --->   "%icmp_ln13_72 = icmp_ne  i8 %tmp_1124, i8 255" [../src/matmul.cpp:13]   --->   Operation 1237 'icmp' 'icmp_ln13_72' <Predicate = (!icmp_ln32_9)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_116 : Operation 1238 [1/1] (0.97ns)   --->   "%icmp_ln13_73 = icmp_eq  i23 %trunc_ln13_36, i23 0" [../src/matmul.cpp:13]   --->   Operation 1238 'icmp' 'icmp_ln13_73' <Predicate = (!icmp_ln32_9)> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_116 : Operation 1239 [1/1] (0.33ns)   --->   "%or_ln13_36 = or i1 %icmp_ln13_73, i1 %icmp_ln13_72" [../src/matmul.cpp:13]   --->   Operation 1239 'or' 'or_ln13_36' <Predicate = (!icmp_ln32_9)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_116 : Operation 1240 [1/2] (3.34ns)   --->   "%tmp_1126 = fcmp_ogt  i32 %arr_load_36, i32 %arr_load_37" [../src/matmul.cpp:13]   --->   Operation 1240 'fcmp' 'tmp_1126' <Predicate = (!icmp_ln32_9)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_116 : Operation 1241 [2/2] (3.34ns)   --->   "%tmp_1128 = fcmp_ogt  i32 %arr_load_36, i32 %arr_load_38" [../src/matmul.cpp:13]   --->   Operation 1241 'fcmp' 'tmp_1128' <Predicate = (!icmp_ln32_9)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_116 : Operation 1242 [2/2] (3.34ns)   --->   "%tmp_1130 = fcmp_ogt  i32 %arr_load_36, i32 %arr_load_39" [../src/matmul.cpp:13]   --->   Operation 1242 'fcmp' 'tmp_1130' <Predicate = (!icmp_ln32_9)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 117 <SV = 62> <Delay = 4.01>
ST_117 : Operation 1243 [1/1] (0.00ns)   --->   "%bitcast_ln13_37 = bitcast i32 %arr_load_37" [../src/matmul.cpp:13]   --->   Operation 1243 'bitcast' 'bitcast_ln13_37' <Predicate = (!icmp_ln32_9)> <Delay = 0.00>
ST_117 : Operation 1244 [1/1] (0.00ns)   --->   "%tmp_1125 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln13_37, i32 23, i32 30" [../src/matmul.cpp:13]   --->   Operation 1244 'partselect' 'tmp_1125' <Predicate = (!icmp_ln32_9)> <Delay = 0.00>
ST_117 : Operation 1245 [1/1] (0.00ns)   --->   "%trunc_ln13_37 = trunc i32 %bitcast_ln13_37" [../src/matmul.cpp:13]   --->   Operation 1245 'trunc' 'trunc_ln13_37' <Predicate = (!icmp_ln32_9)> <Delay = 0.00>
ST_117 : Operation 1246 [1/1] (0.85ns)   --->   "%icmp_ln13_74 = icmp_ne  i8 %tmp_1125, i8 255" [../src/matmul.cpp:13]   --->   Operation 1246 'icmp' 'icmp_ln13_74' <Predicate = (!icmp_ln32_9)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_117 : Operation 1247 [1/1] (0.97ns)   --->   "%icmp_ln13_75 = icmp_eq  i23 %trunc_ln13_37, i23 0" [../src/matmul.cpp:13]   --->   Operation 1247 'icmp' 'icmp_ln13_75' <Predicate = (!icmp_ln32_9)> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_117 : Operation 1248 [1/1] (0.33ns)   --->   "%or_ln13_37 = or i1 %icmp_ln13_75, i1 %icmp_ln13_74" [../src/matmul.cpp:13]   --->   Operation 1248 'or' 'or_ln13_37' <Predicate = (!icmp_ln32_9)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_117 : Operation 1249 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_19)   --->   "%and_ln13_73 = and i1 %or_ln13_36, i1 %or_ln13_37" [../src/matmul.cpp:13]   --->   Operation 1249 'and' 'and_ln13_73' <Predicate = (!icmp_ln32_9)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_117 : Operation 1250 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_19)   --->   "%and_ln13_74 = and i1 %and_ln13_73, i1 %tmp_1126" [../src/matmul.cpp:13]   --->   Operation 1250 'and' 'and_ln13_74' <Predicate = (!icmp_ln32_9)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_117 : Operation 1251 [1/1] (0.00ns)   --->   "%bitcast_ln13_38 = bitcast i32 %arr_load_38" [../src/matmul.cpp:13]   --->   Operation 1251 'bitcast' 'bitcast_ln13_38' <Predicate = (!icmp_ln32_9)> <Delay = 0.00>
ST_117 : Operation 1252 [1/1] (0.00ns)   --->   "%tmp_1127 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln13_38, i32 23, i32 30" [../src/matmul.cpp:13]   --->   Operation 1252 'partselect' 'tmp_1127' <Predicate = (!icmp_ln32_9)> <Delay = 0.00>
ST_117 : Operation 1253 [1/1] (0.00ns)   --->   "%trunc_ln13_38 = trunc i32 %bitcast_ln13_38" [../src/matmul.cpp:13]   --->   Operation 1253 'trunc' 'trunc_ln13_38' <Predicate = (!icmp_ln32_9)> <Delay = 0.00>
ST_117 : Operation 1254 [1/1] (0.85ns)   --->   "%icmp_ln13_76 = icmp_ne  i8 %tmp_1127, i8 255" [../src/matmul.cpp:13]   --->   Operation 1254 'icmp' 'icmp_ln13_76' <Predicate = (!icmp_ln32_9)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_117 : Operation 1255 [1/1] (0.97ns)   --->   "%icmp_ln13_77 = icmp_eq  i23 %trunc_ln13_38, i23 0" [../src/matmul.cpp:13]   --->   Operation 1255 'icmp' 'icmp_ln13_77' <Predicate = (!icmp_ln32_9)> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_117 : Operation 1256 [1/1] (0.33ns)   --->   "%or_ln13_38 = or i1 %icmp_ln13_77, i1 %icmp_ln13_76" [../src/matmul.cpp:13]   --->   Operation 1256 'or' 'or_ln13_38' <Predicate = (!icmp_ln32_9)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_117 : Operation 1257 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_79)   --->   "%and_ln13_75 = and i1 %or_ln13_36, i1 %or_ln13_38" [../src/matmul.cpp:13]   --->   Operation 1257 'and' 'and_ln13_75' <Predicate = (!icmp_ln32_9)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_117 : Operation 1258 [1/2] (3.34ns)   --->   "%tmp_1128 = fcmp_ogt  i32 %arr_load_36, i32 %arr_load_38" [../src/matmul.cpp:13]   --->   Operation 1258 'fcmp' 'tmp_1128' <Predicate = (!icmp_ln32_9)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_117 : Operation 1259 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_79)   --->   "%and_ln13_76 = and i1 %and_ln13_75, i1 %tmp_1128" [../src/matmul.cpp:13]   --->   Operation 1259 'and' 'and_ln13_76' <Predicate = (!icmp_ln32_9)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_117 : Operation 1260 [1/1] (0.00ns)   --->   "%bitcast_ln13_39 = bitcast i32 %arr_load_39" [../src/matmul.cpp:13]   --->   Operation 1260 'bitcast' 'bitcast_ln13_39' <Predicate = (!icmp_ln32_9)> <Delay = 0.00>
ST_117 : Operation 1261 [1/1] (0.00ns)   --->   "%tmp_1129 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln13_39, i32 23, i32 30" [../src/matmul.cpp:13]   --->   Operation 1261 'partselect' 'tmp_1129' <Predicate = (!icmp_ln32_9)> <Delay = 0.00>
ST_117 : Operation 1262 [1/1] (0.00ns)   --->   "%trunc_ln13_39 = trunc i32 %bitcast_ln13_39" [../src/matmul.cpp:13]   --->   Operation 1262 'trunc' 'trunc_ln13_39' <Predicate = (!icmp_ln32_9)> <Delay = 0.00>
ST_117 : Operation 1263 [1/1] (0.85ns)   --->   "%icmp_ln13_78 = icmp_ne  i8 %tmp_1129, i8 255" [../src/matmul.cpp:13]   --->   Operation 1263 'icmp' 'icmp_ln13_78' <Predicate = (!icmp_ln32_9)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_117 : Operation 1264 [1/1] (0.97ns)   --->   "%icmp_ln13_79 = icmp_eq  i23 %trunc_ln13_39, i23 0" [../src/matmul.cpp:13]   --->   Operation 1264 'icmp' 'icmp_ln13_79' <Predicate = (!icmp_ln32_9)> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_117 : Operation 1265 [1/1] (0.33ns)   --->   "%or_ln13_39 = or i1 %icmp_ln13_79, i1 %icmp_ln13_78" [../src/matmul.cpp:13]   --->   Operation 1265 'or' 'or_ln13_39' <Predicate = (!icmp_ln32_9)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_117 : Operation 1266 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_79)   --->   "%and_ln13_77 = and i1 %or_ln13_36, i1 %or_ln13_39" [../src/matmul.cpp:13]   --->   Operation 1266 'and' 'and_ln13_77' <Predicate = (!icmp_ln32_9)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_117 : Operation 1267 [1/2] (3.34ns)   --->   "%tmp_1130 = fcmp_ogt  i32 %arr_load_36, i32 %arr_load_39" [../src/matmul.cpp:13]   --->   Operation 1267 'fcmp' 'tmp_1130' <Predicate = (!icmp_ln32_9)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_117 : Operation 1268 [1/1] (0.00ns) (grouped into LUT with out node and_ln13_79)   --->   "%and_ln13_78 = and i1 %and_ln13_77, i1 %tmp_1130" [../src/matmul.cpp:13]   --->   Operation 1268 'and' 'and_ln13_78' <Predicate = (!icmp_ln32_9)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_117 : Operation 1269 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln13_79 = and i1 %and_ln13_76, i1 %and_ln13_78" [../src/matmul.cpp:13]   --->   Operation 1269 'and' 'and_ln13_79' <Predicate = (!icmp_ln32_9)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_117 : Operation 1270 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln13_19 = and i1 %and_ln13_79, i1 %and_ln13_74" [../src/matmul.cpp:13]   --->   Operation 1270 'and' 'and_ln13_19' <Predicate = (!icmp_ln32_9)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_117 : Operation 1271 [2/2] (3.34ns)   --->   "%tmp_1131 = fcmp_ogt  i32 %arr_load_37, i32 %arr_load_38" [../src/matmul.cpp:16]   --->   Operation 1271 'fcmp' 'tmp_1131' <Predicate = (!icmp_ln32_9)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_117 : Operation 1272 [2/2] (3.34ns)   --->   "%tmp_1132 = fcmp_ogt  i32 %arr_load_37, i32 %arr_load_39" [../src/matmul.cpp:16]   --->   Operation 1272 'fcmp' 'tmp_1132' <Predicate = (!icmp_ln32_9)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 118 <SV = 63> <Delay = 4.12>
ST_118 : Operation 1273 [1/1] (0.00ns) (grouped into LUT with out node and_ln16_9)   --->   "%and_ln16_55 = and i1 %or_ln13_37, i1 %or_ln13_38" [../src/matmul.cpp:16]   --->   Operation 1273 'and' 'and_ln16_55' <Predicate = (!icmp_ln32_9)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_118 : Operation 1274 [1/2] (3.34ns)   --->   "%tmp_1131 = fcmp_ogt  i32 %arr_load_37, i32 %arr_load_38" [../src/matmul.cpp:16]   --->   Operation 1274 'fcmp' 'tmp_1131' <Predicate = (!icmp_ln32_9)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_118 : Operation 1275 [1/1] (0.00ns) (grouped into LUT with out node and_ln16_9)   --->   "%and_ln16_56 = and i1 %and_ln16_55, i1 %tmp_1131" [../src/matmul.cpp:16]   --->   Operation 1275 'and' 'and_ln16_56' <Predicate = (!icmp_ln32_9)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_118 : Operation 1276 [1/1] (0.00ns) (grouped into LUT with out node and_ln16_9)   --->   "%and_ln16_57 = and i1 %or_ln13_37, i1 %or_ln13_39" [../src/matmul.cpp:16]   --->   Operation 1276 'and' 'and_ln16_57' <Predicate = (!icmp_ln32_9)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_118 : Operation 1277 [1/2] (3.34ns)   --->   "%tmp_1132 = fcmp_ogt  i32 %arr_load_37, i32 %arr_load_39" [../src/matmul.cpp:16]   --->   Operation 1277 'fcmp' 'tmp_1132' <Predicate = (!icmp_ln32_9)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_118 : Operation 1278 [1/1] (0.00ns) (grouped into LUT with out node and_ln16_9)   --->   "%and_ln16_58 = and i1 %and_ln16_57, i1 %tmp_1132" [../src/matmul.cpp:16]   --->   Operation 1278 'and' 'and_ln16_58' <Predicate = (!icmp_ln32_9)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_118 : Operation 1279 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln16_9 = and i1 %and_ln16_56, i1 %and_ln16_58" [../src/matmul.cpp:16]   --->   Operation 1279 'and' 'and_ln16_9' <Predicate = (!icmp_ln32_9)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_118 : Operation 1280 [2/2] (3.34ns)   --->   "%tmp_1133 = fcmp_ogt  i32 %arr_load_38, i32 %arr_load_39" [../src/matmul.cpp:19]   --->   Operation 1280 'fcmp' 'tmp_1133' <Predicate = (!icmp_ln32_9)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_118 : Operation 1281 [1/1] (0.00ns) (grouped into LUT with out node select_ln16_9)   --->   "%select_ln13_9 = select i1 %and_ln13_19, i11 %add_ln8_36, i11 %add_ln8_39" [../src/matmul.cpp:13]   --->   Operation 1281 'select' 'select_ln13_9' <Predicate = (!icmp_ln32_9)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_118 : Operation 1282 [1/1] (0.00ns) (grouped into LUT with out node select_ln16_9)   --->   "%xor_ln13_9 = xor i1 %and_ln13_19, i1 1" [../src/matmul.cpp:13]   --->   Operation 1282 'xor' 'xor_ln13_9' <Predicate = (!icmp_ln32_9)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_118 : Operation 1283 [1/1] (0.00ns) (grouped into LUT with out node select_ln16_9)   --->   "%and_ln16_59 = and i1 %and_ln16_9, i1 %xor_ln13_9" [../src/matmul.cpp:16]   --->   Operation 1283 'and' 'and_ln16_59' <Predicate = (!icmp_ln32_9)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_118 : Operation 1284 [1/1] (0.45ns) (out node of the LUT)   --->   "%select_ln16_9 = select i1 %and_ln16_59, i11 %add_ln8_37, i11 %select_ln13_9" [../src/matmul.cpp:16]   --->   Operation 1284 'select' 'select_ln16_9' <Predicate = (!icmp_ln32_9)> <Delay = 0.45> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 119 <SV = 64> <Delay = 5.48>
ST_119 : Operation 1285 [1/1] (0.00ns)   --->   "%t_1_9 = phi i11 %add_ln34_9, void %.split.9_ifconv, i11 %add_ln32_18, void %.split4.9" [../src/matmul.cpp:34]   --->   Operation 1285 'phi' 't_1_9' <Predicate = true> <Delay = 0.00>
ST_119 : Operation 1286 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 1286 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_119 : Operation 1287 [1/1] (0.00ns)   --->   "%empty_83 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 0, i64 32, i64 0"   --->   Operation 1287 'speclooptripcount' 'empty_83' <Predicate = true> <Delay = 0.00>
ST_119 : Operation 1288 [1/1] (0.00ns) (grouped into LUT with out node and_ln19_29)   --->   "%and_ln19_27 = and i1 %or_ln13_38, i1 %or_ln13_39" [../src/matmul.cpp:19]   --->   Operation 1288 'and' 'and_ln19_27' <Predicate = (!icmp_ln32_9)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_119 : Operation 1289 [1/2] (3.34ns)   --->   "%tmp_1133 = fcmp_ogt  i32 %arr_load_38, i32 %arr_load_39" [../src/matmul.cpp:19]   --->   Operation 1289 'fcmp' 'tmp_1133' <Predicate = (!icmp_ln32_9)> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_119 : Operation 1290 [1/1] (0.00ns) (grouped into LUT with out node and_ln19_29)   --->   "%and_ln19_28 = and i1 %and_ln19_27, i1 %tmp_1133" [../src/matmul.cpp:19]   --->   Operation 1290 'and' 'and_ln19_28' <Predicate = (!icmp_ln32_9)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_119 : Operation 1291 [1/1] (0.00ns) (grouped into LUT with out node and_ln19_29)   --->   "%or_ln16_9 = or i1 %and_ln13_19, i1 %and_ln16_9" [../src/matmul.cpp:16]   --->   Operation 1291 'or' 'or_ln16_9' <Predicate = (!icmp_ln32_9)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_119 : Operation 1292 [1/1] (0.00ns) (grouped into LUT with out node and_ln19_29)   --->   "%xor_ln16_9 = xor i1 %or_ln16_9, i1 1" [../src/matmul.cpp:16]   --->   Operation 1292 'xor' 'xor_ln16_9' <Predicate = (!icmp_ln32_9)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_119 : Operation 1293 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln19_29 = and i1 %and_ln19_28, i1 %xor_ln16_9" [../src/matmul.cpp:19]   --->   Operation 1293 'and' 'and_ln19_29' <Predicate = (!icmp_ln32_9)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_119 : Operation 1294 [1/1] (0.45ns) (out node of the LUT)   --->   "%select_ln19_9 = select i1 %and_ln19_29, i11 %add_ln8_38, i11 %select_ln16_9" [../src/matmul.cpp:19]   --->   Operation 1294 'select' 'select_ln19_9' <Predicate = (!icmp_ln32_9)> <Delay = 0.45> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_119 : Operation 1295 [1/1] (0.00ns)   --->   "%zext_ln8_49 = zext i11 %select_ln19_9" [../src/matmul.cpp:8]   --->   Operation 1295 'zext' 'zext_ln8_49' <Predicate = (!icmp_ln32_9)> <Delay = 0.00>
ST_119 : Operation 1296 [1/1] (0.00ns)   --->   "%arr_addr_49 = getelementptr i32 %arr, i64 0, i64 %zext_ln8_49" [../src/matmul.cpp:8]   --->   Operation 1296 'getelementptr' 'arr_addr_49' <Predicate = (!icmp_ln32_9)> <Delay = 0.00>
ST_119 : Operation 1297 [2/2] (1.35ns)   --->   "%arr_load_49 = load i11 %arr_addr_49" [../src/matmul.cpp:19]   --->   Operation 1297 'load' 'arr_load_49' <Predicate = (!icmp_ln32_9)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>

State 120 <SV = 65> <Delay = 2.70>
ST_120 : Operation 1298 [1/1] (0.00ns)   --->   "%t_1_9_cast = zext i11 %t_1_9" [../src/matmul.cpp:34]   --->   Operation 1298 'zext' 't_1_9_cast' <Predicate = (!icmp_ln32_9)> <Delay = 0.00>
ST_120 : Operation 1299 [1/1] (0.00ns)   --->   "%specloopname_ln28 = specloopname void @_ssdm_op_SpecLoopName, void @empty_0" [../src/matmul.cpp:28]   --->   Operation 1299 'specloopname' 'specloopname_ln28' <Predicate = (!icmp_ln32_9)> <Delay = 0.00>
ST_120 : Operation 1300 [1/2] (1.35ns)   --->   "%arr_load_49 = load i11 %arr_addr_49" [../src/matmul.cpp:19]   --->   Operation 1300 'load' 'arr_load_49' <Predicate = (!icmp_ln32_9)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_120 : Operation 1301 [1/1] (0.94ns)   --->   "%add_ln34_9 = add i11 %t_1_9, i11 1" [../src/matmul.cpp:34]   --->   Operation 1301 'add' 'add_ln34_9' <Predicate = (!icmp_ln32_9)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_120 : Operation 1302 [1/1] (0.00ns)   --->   "%out_addr_9 = getelementptr i32 %out_r, i64 0, i64 %t_1_9_cast" [../src/matmul.cpp:34]   --->   Operation 1302 'getelementptr' 'out_addr_9' <Predicate = (!icmp_ln32_9)> <Delay = 0.00>
ST_120 : Operation 1303 [1/1] (1.35ns)   --->   "%store_ln34 = store i32 %arr_load_49, i11 %out_addr_9" [../src/matmul.cpp:34]   --->   Operation 1303 'store' 'store_ln34' <Predicate = (!icmp_ln32_9)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1620> <RAM>
ST_120 : Operation 1304 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 1304 'br' 'br_ln0' <Predicate = (!icmp_ln32_9)> <Delay = 0.00>

State 121 <SV = 65> <Delay = 1.47>
ST_121 : Operation 1305 [1/1] (1.20ns)   --->   "%add_ln29_27 = add i32 %zext_ln29_3, i32 %add_ln29_24" [../src/matmul.cpp:29]   --->   Operation 1305 'add' 'add_ln29_27' <Predicate = true> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_121 : Operation 1306 [1/1] (1.47ns)   --->   "%add_ln29_28 = add i64 %i_0, i64 20" [../src/matmul.cpp:29]   --->   Operation 1306 'add' 'add_ln29_28' <Predicate = true> <Delay = 1.47> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_121 : Operation 1307 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 1307 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 122 <SV = 56> <Delay = 0.00>
ST_122 : Operation 1308 [1/1] (0.00ns)   --->   "%ret_ln37 = ret" [../src/matmul.cpp:37]   --->   Operation 1308 'ret' 'ret_ln37' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 3.5ns
The critical path consists of the following:
	wire read on port 'h' [5]  (0 ns)
	'add' operation ('sub') [7]  (0.878 ns)
	'add' operation ('add_ln29_29', ../src/matmul.cpp:29) [18]  (0.887 ns)
	'urem' operation ('urem_ln29', ../src/matmul.cpp:29) [19]  (1.74 ns)

 <State 2>: 1.74ns
The critical path consists of the following:
	'urem' operation ('urem_ln29', ../src/matmul.cpp:29) [19]  (1.74 ns)

 <State 3>: 1.74ns
The critical path consists of the following:
	'urem' operation ('urem_ln29', ../src/matmul.cpp:29) [19]  (1.74 ns)

 <State 4>: 1.74ns
The critical path consists of the following:
	'urem' operation ('urem_ln29', ../src/matmul.cpp:29) [19]  (1.74 ns)

 <State 5>: 1.74ns
The critical path consists of the following:
	'urem' operation ('urem_ln29', ../src/matmul.cpp:29) [19]  (1.74 ns)

 <State 6>: 1.74ns
The critical path consists of the following:
	'urem' operation ('urem_ln29', ../src/matmul.cpp:29) [19]  (1.74 ns)

 <State 7>: 1.74ns
The critical path consists of the following:
	'urem' operation ('urem_ln29', ../src/matmul.cpp:29) [19]  (1.74 ns)

 <State 8>: 1.74ns
The critical path consists of the following:
	'urem' operation ('urem_ln29', ../src/matmul.cpp:29) [19]  (1.74 ns)

 <State 9>: 1.74ns
The critical path consists of the following:
	'urem' operation ('urem_ln29', ../src/matmul.cpp:29) [19]  (1.74 ns)

 <State 10>: 2.62ns
The critical path consists of the following:
	'urem' operation ('urem_ln29', ../src/matmul.cpp:29) [19]  (1.74 ns)
	'sub' operation ('sub_ln29', ../src/matmul.cpp:29) [22]  (0.887 ns)

 <State 11>: 1.48ns
The critical path consists of the following:
	'phi' operation ('i_0', ../src/matmul.cpp:29) with incoming values : ('add_ln29_28', ../src/matmul.cpp:29) [26]  (0 ns)
	'icmp' operation ('icmp_ln29', ../src/matmul.cpp:29) [28]  (1.48 ns)

 <State 12>: 0.698ns
The critical path consists of the following:
	'mul' operation of DSP[34] ('empty_36', ../src/matmul.cpp:29) [34]  (0.698 ns)

 <State 13>: 0.698ns
The critical path consists of the following:
	'mul' operation of DSP[34] ('empty_36', ../src/matmul.cpp:29) [34]  (0.698 ns)

 <State 14>: 0.489ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('t_1_0', ../src/matmul.cpp:34) with incoming values : ('trunc_ln32', ../src/matmul.cpp:32) ('add_ln34', ../src/matmul.cpp:34) [43]  (0.489 ns)

 <State 15>: 2.3ns
The critical path consists of the following:
	'phi' operation ('j_0', ../src/matmul.cpp:32) with incoming values : ('add_ln32', ../src/matmul.cpp:32) [44]  (0 ns)
	'add' operation ('add_ln8', ../src/matmul.cpp:8) [54]  (0.948 ns)
	'getelementptr' operation ('arr_addr', ../src/matmul.cpp:8) [56]  (0 ns)
	'load' operation ('arr_load', ../src/matmul.cpp:8) on array 'arr' [57]  (1.35 ns)

 <State 16>: 4.7ns
The critical path consists of the following:
	'load' operation ('arr_load', ../src/matmul.cpp:8) on array 'arr' [57]  (1.35 ns)
	'fcmp' operation ('tmp_1036', ../src/matmul.cpp:13) [84]  (3.35 ns)

 <State 17>: 4.7ns
The critical path consists of the following:
	'load' operation ('arr_load_2', ../src/matmul.cpp:8) on array 'arr' [66]  (1.35 ns)
	'fcmp' operation ('tmp_1038', ../src/matmul.cpp:13) [93]  (3.35 ns)

 <State 18>: 4.01ns
The critical path consists of the following:
	'fcmp' operation ('tmp_1038', ../src/matmul.cpp:13) [93]  (3.35 ns)
	'and' operation ('and_ln13_4', ../src/matmul.cpp:13) [94]  (0 ns)
	'and' operation ('and_ln13_7', ../src/matmul.cpp:13) [104]  (0.331 ns)
	'and' operation ('and_ln13_1', ../src/matmul.cpp:13) [105]  (0.331 ns)

 <State 19>: 4.13ns
The critical path consists of the following:
	'fcmp' operation ('tmp_1041', ../src/matmul.cpp:16) [107]  (3.35 ns)
	'and' operation ('and_ln16_11', ../src/matmul.cpp:16) [108]  (0 ns)
	'and' operation ('and_ln16', ../src/matmul.cpp:16) [112]  (0.331 ns)
	'and' operation ('and_ln16_14', ../src/matmul.cpp:16) [118]  (0 ns)
	'select' operation ('select_ln16', ../src/matmul.cpp:16) [119]  (0.451 ns)

 <State 20>: 5.48ns
The critical path consists of the following:
	'fcmp' operation ('tmp_1043', ../src/matmul.cpp:19) [114]  (3.35 ns)
	'and' operation ('and_ln19_1', ../src/matmul.cpp:19) [115]  (0 ns)
	'and' operation ('and_ln19_2', ../src/matmul.cpp:19) [122]  (0.331 ns)
	'select' operation ('select_ln19', ../src/matmul.cpp:19) [123]  (0.451 ns)
	'getelementptr' operation ('arr_addr_40', ../src/matmul.cpp:8) [125]  (0 ns)
	'load' operation ('arr_load_40', ../src/matmul.cpp:19) on array 'arr' [126]  (1.35 ns)

 <State 21>: 2.7ns
The critical path consists of the following:
	'load' operation ('arr_load_40', ../src/matmul.cpp:19) on array 'arr' [126]  (1.35 ns)
	'store' operation ('store_ln34', ../src/matmul.cpp:34) of variable 'arr_load_40', ../src/matmul.cpp:19 on array 'out_r' [129]  (1.35 ns)

 <State 22>: 1.48ns
The critical path consists of the following:
	'or' operation ('or_ln29', ../src/matmul.cpp:29) [133]  (0 ns)
	'icmp' operation ('icmp_ln29_1', ../src/matmul.cpp:29) [135]  (1.48 ns)

 <State 23>: 0.698ns
The critical path consists of the following:
	'mul' operation of DSP[139] ('empty_41', ../src/matmul.cpp:29) [139]  (0.698 ns)

 <State 24>: 0.698ns
The critical path consists of the following:
	'mul' operation of DSP[139] ('empty_41', ../src/matmul.cpp:29) [139]  (0.698 ns)

 <State 25>: 0.948ns
The critical path consists of the following:
	'add' operation ('add_ln32_10', ../src/matmul.cpp:32) [141]  (0.948 ns)

 <State 26>: 2.3ns
The critical path consists of the following:
	'phi' operation ('j_1', ../src/matmul.cpp:32) with incoming values : ('add_ln32_1', ../src/matmul.cpp:32) [145]  (0 ns)
	'add' operation ('add_ln8_4', ../src/matmul.cpp:8) [155]  (0.948 ns)
	'getelementptr' operation ('arr_addr_4', ../src/matmul.cpp:8) [157]  (0 ns)
	'load' operation ('arr_load_4', ../src/matmul.cpp:8) on array 'arr' [158]  (1.35 ns)

 <State 27>: 4.7ns
The critical path consists of the following:
	'load' operation ('arr_load_4', ../src/matmul.cpp:8) on array 'arr' [158]  (1.35 ns)
	'fcmp' operation ('tmp_1046', ../src/matmul.cpp:13) [185]  (3.35 ns)

 <State 28>: 4.7ns
The critical path consists of the following:
	'load' operation ('arr_load_6', ../src/matmul.cpp:8) on array 'arr' [167]  (1.35 ns)
	'fcmp' operation ('tmp_1048', ../src/matmul.cpp:13) [194]  (3.35 ns)

 <State 29>: 4.01ns
The critical path consists of the following:
	'fcmp' operation ('tmp_1048', ../src/matmul.cpp:13) [194]  (3.35 ns)
	'and' operation ('and_ln13_20', ../src/matmul.cpp:13) [195]  (0 ns)
	'and' operation ('and_ln13_23', ../src/matmul.cpp:13) [205]  (0.331 ns)
	'and' operation ('and_ln13_11', ../src/matmul.cpp:13) [206]  (0.331 ns)

 <State 30>: 4.13ns
The critical path consists of the following:
	'fcmp' operation ('tmp_1051', ../src/matmul.cpp:16) [208]  (3.35 ns)
	'and' operation ('and_ln16_16', ../src/matmul.cpp:16) [209]  (0 ns)
	'and' operation ('and_ln16_1', ../src/matmul.cpp:16) [213]  (0.331 ns)
	'and' operation ('and_ln16_19', ../src/matmul.cpp:16) [219]  (0 ns)
	'select' operation ('select_ln16_1', ../src/matmul.cpp:16) [220]  (0.451 ns)

 <State 31>: 5.48ns
The critical path consists of the following:
	'fcmp' operation ('tmp_1053', ../src/matmul.cpp:19) [215]  (3.35 ns)
	'and' operation ('and_ln19_4', ../src/matmul.cpp:19) [216]  (0 ns)
	'and' operation ('and_ln19_5', ../src/matmul.cpp:19) [223]  (0.331 ns)
	'select' operation ('select_ln19_1', ../src/matmul.cpp:19) [224]  (0.451 ns)
	'getelementptr' operation ('arr_addr_41', ../src/matmul.cpp:8) [226]  (0 ns)
	'load' operation ('arr_load_41', ../src/matmul.cpp:19) on array 'arr' [227]  (1.35 ns)

 <State 32>: 2.7ns
The critical path consists of the following:
	'load' operation ('arr_load_41', ../src/matmul.cpp:19) on array 'arr' [227]  (1.35 ns)
	'store' operation ('store_ln34', ../src/matmul.cpp:34) of variable 'arr_load_41', ../src/matmul.cpp:19 on array 'out_r' [230]  (1.35 ns)

 <State 33>: 2.95ns
The critical path consists of the following:
	'add' operation ('add_ln29_4', ../src/matmul.cpp:29) [235]  (1.47 ns)
	'icmp' operation ('icmp_ln29_2', ../src/matmul.cpp:29) [237]  (1.48 ns)

 <State 34>: 0.698ns
The critical path consists of the following:
	'mul' operation of DSP[241] ('empty_46', ../src/matmul.cpp:29) [241]  (0.698 ns)

 <State 35>: 0.698ns
The critical path consists of the following:
	'mul' operation of DSP[241] ('empty_46', ../src/matmul.cpp:29) [241]  (0.698 ns)

 <State 36>: 0.948ns
The critical path consists of the following:
	'add' operation ('add_ln32_11', ../src/matmul.cpp:32) [243]  (0.948 ns)

 <State 37>: 2.3ns
The critical path consists of the following:
	'phi' operation ('j_2', ../src/matmul.cpp:32) with incoming values : ('add_ln32_2', ../src/matmul.cpp:32) [247]  (0 ns)
	'add' operation ('add_ln8_8', ../src/matmul.cpp:8) [257]  (0.948 ns)
	'getelementptr' operation ('arr_addr_8', ../src/matmul.cpp:8) [259]  (0 ns)
	'load' operation ('arr_load_8', ../src/matmul.cpp:8) on array 'arr' [260]  (1.35 ns)

 <State 38>: 4.7ns
The critical path consists of the following:
	'load' operation ('arr_load_8', ../src/matmul.cpp:8) on array 'arr' [260]  (1.35 ns)
	'fcmp' operation ('tmp_1056', ../src/matmul.cpp:13) [287]  (3.35 ns)

 <State 39>: 4.7ns
The critical path consists of the following:
	'load' operation ('arr_load_10', ../src/matmul.cpp:8) on array 'arr' [269]  (1.35 ns)
	'fcmp' operation ('tmp_1058', ../src/matmul.cpp:13) [296]  (3.35 ns)

 <State 40>: 4.01ns
The critical path consists of the following:
	'fcmp' operation ('tmp_1058', ../src/matmul.cpp:13) [296]  (3.35 ns)
	'and' operation ('and_ln13_27', ../src/matmul.cpp:13) [297]  (0 ns)
	'and' operation ('and_ln13_30', ../src/matmul.cpp:13) [307]  (0.331 ns)
	'and' operation ('and_ln13_12', ../src/matmul.cpp:13) [308]  (0.331 ns)

 <State 41>: 4.13ns
The critical path consists of the following:
	'fcmp' operation ('tmp_1061', ../src/matmul.cpp:16) [310]  (3.35 ns)
	'and' operation ('and_ln16_21', ../src/matmul.cpp:16) [311]  (0 ns)
	'and' operation ('and_ln16_2', ../src/matmul.cpp:16) [315]  (0.331 ns)
	'and' operation ('and_ln16_24', ../src/matmul.cpp:16) [321]  (0 ns)
	'select' operation ('select_ln16_2', ../src/matmul.cpp:16) [322]  (0.451 ns)

 <State 42>: 5.48ns
The critical path consists of the following:
	'fcmp' operation ('tmp_1063', ../src/matmul.cpp:19) [317]  (3.35 ns)
	'and' operation ('and_ln19_7', ../src/matmul.cpp:19) [318]  (0 ns)
	'and' operation ('and_ln19_8', ../src/matmul.cpp:19) [325]  (0.331 ns)
	'select' operation ('select_ln19_2', ../src/matmul.cpp:19) [326]  (0.451 ns)
	'getelementptr' operation ('arr_addr_42', ../src/matmul.cpp:8) [328]  (0 ns)
	'load' operation ('arr_load_42', ../src/matmul.cpp:19) on array 'arr' [329]  (1.35 ns)

 <State 43>: 2.7ns
The critical path consists of the following:
	'load' operation ('arr_load_42', ../src/matmul.cpp:19) on array 'arr' [329]  (1.35 ns)
	'store' operation ('store_ln34', ../src/matmul.cpp:34) of variable 'arr_load_42', ../src/matmul.cpp:19 on array 'out_r' [332]  (1.35 ns)

 <State 44>: 2.95ns
The critical path consists of the following:
	'add' operation ('add_ln29_7', ../src/matmul.cpp:29) [337]  (1.47 ns)
	'icmp' operation ('icmp_ln29_3', ../src/matmul.cpp:29) [339]  (1.48 ns)

 <State 45>: 0.698ns
The critical path consists of the following:
	'mul' operation of DSP[343] ('empty_51', ../src/matmul.cpp:29) [343]  (0.698 ns)

 <State 46>: 0.698ns
The critical path consists of the following:
	'mul' operation of DSP[343] ('empty_51', ../src/matmul.cpp:29) [343]  (0.698 ns)

 <State 47>: 0.948ns
The critical path consists of the following:
	'add' operation ('add_ln32_12', ../src/matmul.cpp:32) [345]  (0.948 ns)

 <State 48>: 2.3ns
The critical path consists of the following:
	'phi' operation ('j_3', ../src/matmul.cpp:32) with incoming values : ('add_ln32_3', ../src/matmul.cpp:32) [349]  (0 ns)
	'add' operation ('add_ln8_12', ../src/matmul.cpp:8) [359]  (0.948 ns)
	'getelementptr' operation ('arr_addr_12', ../src/matmul.cpp:8) [361]  (0 ns)
	'load' operation ('arr_load_12', ../src/matmul.cpp:8) on array 'arr' [362]  (1.35 ns)

 <State 49>: 4.7ns
The critical path consists of the following:
	'load' operation ('arr_load_12', ../src/matmul.cpp:8) on array 'arr' [362]  (1.35 ns)
	'fcmp' operation ('tmp_1066', ../src/matmul.cpp:13) [389]  (3.35 ns)

 <State 50>: 4.7ns
The critical path consists of the following:
	'load' operation ('arr_load_14', ../src/matmul.cpp:8) on array 'arr' [371]  (1.35 ns)
	'fcmp' operation ('tmp_1068', ../src/matmul.cpp:13) [398]  (3.35 ns)

 <State 51>: 4.01ns
The critical path consists of the following:
	'fcmp' operation ('tmp_1068', ../src/matmul.cpp:13) [398]  (3.35 ns)
	'and' operation ('and_ln13_34', ../src/matmul.cpp:13) [399]  (0 ns)
	'and' operation ('and_ln13_37', ../src/matmul.cpp:13) [409]  (0.331 ns)
	'and' operation ('and_ln13_13', ../src/matmul.cpp:13) [410]  (0.331 ns)

 <State 52>: 4.13ns
The critical path consists of the following:
	'fcmp' operation ('tmp_1071', ../src/matmul.cpp:16) [412]  (3.35 ns)
	'and' operation ('and_ln16_26', ../src/matmul.cpp:16) [413]  (0 ns)
	'and' operation ('and_ln16_3', ../src/matmul.cpp:16) [417]  (0.331 ns)
	'and' operation ('and_ln16_29', ../src/matmul.cpp:16) [423]  (0 ns)
	'select' operation ('select_ln16_3', ../src/matmul.cpp:16) [424]  (0.451 ns)

 <State 53>: 5.48ns
The critical path consists of the following:
	'fcmp' operation ('tmp_1073', ../src/matmul.cpp:19) [419]  (3.35 ns)
	'and' operation ('and_ln19_10', ../src/matmul.cpp:19) [420]  (0 ns)
	'and' operation ('and_ln19_11', ../src/matmul.cpp:19) [427]  (0.331 ns)
	'select' operation ('select_ln19_3', ../src/matmul.cpp:19) [428]  (0.451 ns)
	'getelementptr' operation ('arr_addr_43', ../src/matmul.cpp:8) [430]  (0 ns)
	'load' operation ('arr_load_43', ../src/matmul.cpp:19) on array 'arr' [431]  (1.35 ns)

 <State 54>: 2.7ns
The critical path consists of the following:
	'load' operation ('arr_load_43', ../src/matmul.cpp:19) on array 'arr' [431]  (1.35 ns)
	'store' operation ('store_ln34', ../src/matmul.cpp:34) of variable 'arr_load_43', ../src/matmul.cpp:19 on array 'out_r' [434]  (1.35 ns)

 <State 55>: 2.95ns
The critical path consists of the following:
	'add' operation ('add_ln29_10', ../src/matmul.cpp:29) [439]  (1.47 ns)
	'icmp' operation ('icmp_ln29_4', ../src/matmul.cpp:29) [441]  (1.48 ns)

 <State 56>: 0.698ns
The critical path consists of the following:
	'mul' operation of DSP[445] ('empty_56', ../src/matmul.cpp:29) [445]  (0.698 ns)

 <State 57>: 0.698ns
The critical path consists of the following:
	'mul' operation of DSP[445] ('empty_56', ../src/matmul.cpp:29) [445]  (0.698 ns)

 <State 58>: 0.489ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('t_1_4', ../src/matmul.cpp:34) with incoming values : ('add_ln32_13', ../src/matmul.cpp:32) ('add_ln34_4', ../src/matmul.cpp:34) [450]  (0.489 ns)

 <State 59>: 2.3ns
The critical path consists of the following:
	'phi' operation ('j_4', ../src/matmul.cpp:32) with incoming values : ('add_ln32_4', ../src/matmul.cpp:32) [451]  (0 ns)
	'add' operation ('add_ln8_16', ../src/matmul.cpp:8) [461]  (0.948 ns)
	'getelementptr' operation ('arr_addr_16', ../src/matmul.cpp:8) [463]  (0 ns)
	'load' operation ('arr_load_16', ../src/matmul.cpp:8) on array 'arr' [464]  (1.35 ns)

 <State 60>: 4.7ns
The critical path consists of the following:
	'load' operation ('arr_load_16', ../src/matmul.cpp:8) on array 'arr' [464]  (1.35 ns)
	'fcmp' operation ('tmp_1076', ../src/matmul.cpp:13) [491]  (3.35 ns)

 <State 61>: 4.7ns
The critical path consists of the following:
	'load' operation ('arr_load_18', ../src/matmul.cpp:8) on array 'arr' [473]  (1.35 ns)
	'fcmp' operation ('tmp_1078', ../src/matmul.cpp:13) [500]  (3.35 ns)

 <State 62>: 4.01ns
The critical path consists of the following:
	'fcmp' operation ('tmp_1078', ../src/matmul.cpp:13) [500]  (3.35 ns)
	'and' operation ('and_ln13_41', ../src/matmul.cpp:13) [501]  (0 ns)
	'and' operation ('and_ln13_44', ../src/matmul.cpp:13) [511]  (0.331 ns)
	'and' operation ('and_ln13_14', ../src/matmul.cpp:13) [512]  (0.331 ns)

 <State 63>: 4.13ns
The critical path consists of the following:
	'fcmp' operation ('tmp_1081', ../src/matmul.cpp:16) [514]  (3.35 ns)
	'and' operation ('and_ln16_31', ../src/matmul.cpp:16) [515]  (0 ns)
	'and' operation ('and_ln16_4', ../src/matmul.cpp:16) [519]  (0.331 ns)
	'and' operation ('and_ln16_34', ../src/matmul.cpp:16) [525]  (0 ns)
	'select' operation ('select_ln16_4', ../src/matmul.cpp:16) [526]  (0.451 ns)

 <State 64>: 5.48ns
The critical path consists of the following:
	'fcmp' operation ('tmp_1083', ../src/matmul.cpp:19) [521]  (3.35 ns)
	'and' operation ('and_ln19_13', ../src/matmul.cpp:19) [522]  (0 ns)
	'and' operation ('and_ln19_14', ../src/matmul.cpp:19) [529]  (0.331 ns)
	'select' operation ('select_ln19_4', ../src/matmul.cpp:19) [530]  (0.451 ns)
	'getelementptr' operation ('arr_addr_44', ../src/matmul.cpp:8) [532]  (0 ns)
	'load' operation ('arr_load_44', ../src/matmul.cpp:19) on array 'arr' [533]  (1.35 ns)

 <State 65>: 2.7ns
The critical path consists of the following:
	'load' operation ('arr_load_44', ../src/matmul.cpp:19) on array 'arr' [533]  (1.35 ns)
	'store' operation ('store_ln34', ../src/matmul.cpp:34) of variable 'arr_load_44', ../src/matmul.cpp:19 on array 'out_r' [536]  (1.35 ns)

 <State 66>: 2.95ns
The critical path consists of the following:
	'add' operation ('add_ln29_13', ../src/matmul.cpp:29) [541]  (1.47 ns)
	'icmp' operation ('icmp_ln29_5', ../src/matmul.cpp:29) [543]  (1.48 ns)

 <State 67>: 0.698ns
The critical path consists of the following:
	'mul' operation of DSP[547] ('empty_61', ../src/matmul.cpp:29) [547]  (0.698 ns)

 <State 68>: 0.698ns
The critical path consists of the following:
	'mul' operation of DSP[547] ('empty_61', ../src/matmul.cpp:29) [547]  (0.698 ns)

 <State 69>: 0.489ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('t_1_5', ../src/matmul.cpp:34) with incoming values : ('add_ln32_14', ../src/matmul.cpp:32) ('add_ln34_5', ../src/matmul.cpp:34) [552]  (0.489 ns)

 <State 70>: 2.3ns
The critical path consists of the following:
	'phi' operation ('j_5', ../src/matmul.cpp:32) with incoming values : ('add_ln32_5', ../src/matmul.cpp:32) [553]  (0 ns)
	'add' operation ('add_ln8_20', ../src/matmul.cpp:8) [563]  (0.948 ns)
	'getelementptr' operation ('arr_addr_20', ../src/matmul.cpp:8) [565]  (0 ns)
	'load' operation ('arr_load_20', ../src/matmul.cpp:8) on array 'arr' [566]  (1.35 ns)

 <State 71>: 4.7ns
The critical path consists of the following:
	'load' operation ('arr_load_20', ../src/matmul.cpp:8) on array 'arr' [566]  (1.35 ns)
	'fcmp' operation ('tmp_1086', ../src/matmul.cpp:13) [593]  (3.35 ns)

 <State 72>: 4.7ns
The critical path consists of the following:
	'load' operation ('arr_load_22', ../src/matmul.cpp:8) on array 'arr' [575]  (1.35 ns)
	'fcmp' operation ('tmp_1088', ../src/matmul.cpp:13) [602]  (3.35 ns)

 <State 73>: 4.01ns
The critical path consists of the following:
	'fcmp' operation ('tmp_1088', ../src/matmul.cpp:13) [602]  (3.35 ns)
	'and' operation ('and_ln13_48', ../src/matmul.cpp:13) [603]  (0 ns)
	'and' operation ('and_ln13_51', ../src/matmul.cpp:13) [613]  (0.331 ns)
	'and' operation ('and_ln13_15', ../src/matmul.cpp:13) [614]  (0.331 ns)

 <State 74>: 4.13ns
The critical path consists of the following:
	'fcmp' operation ('tmp_1091', ../src/matmul.cpp:16) [616]  (3.35 ns)
	'and' operation ('and_ln16_36', ../src/matmul.cpp:16) [617]  (0 ns)
	'and' operation ('and_ln16_5', ../src/matmul.cpp:16) [621]  (0.331 ns)
	'and' operation ('and_ln16_39', ../src/matmul.cpp:16) [627]  (0 ns)
	'select' operation ('select_ln16_5', ../src/matmul.cpp:16) [628]  (0.451 ns)

 <State 75>: 5.48ns
The critical path consists of the following:
	'fcmp' operation ('tmp_1093', ../src/matmul.cpp:19) [623]  (3.35 ns)
	'and' operation ('and_ln19_16', ../src/matmul.cpp:19) [624]  (0 ns)
	'and' operation ('and_ln19_17', ../src/matmul.cpp:19) [631]  (0.331 ns)
	'select' operation ('select_ln19_5', ../src/matmul.cpp:19) [632]  (0.451 ns)
	'getelementptr' operation ('arr_addr_45', ../src/matmul.cpp:8) [634]  (0 ns)
	'load' operation ('arr_load_45', ../src/matmul.cpp:19) on array 'arr' [635]  (1.35 ns)

 <State 76>: 2.7ns
The critical path consists of the following:
	'load' operation ('arr_load_45', ../src/matmul.cpp:19) on array 'arr' [635]  (1.35 ns)
	'store' operation ('store_ln34', ../src/matmul.cpp:34) of variable 'arr_load_45', ../src/matmul.cpp:19 on array 'out_r' [638]  (1.35 ns)

 <State 77>: 2.95ns
The critical path consists of the following:
	'add' operation ('add_ln29_16', ../src/matmul.cpp:29) [643]  (1.47 ns)
	'icmp' operation ('icmp_ln29_6', ../src/matmul.cpp:29) [645]  (1.48 ns)

 <State 78>: 0.698ns
The critical path consists of the following:
	'mul' operation of DSP[649] ('empty_66', ../src/matmul.cpp:29) [649]  (0.698 ns)

 <State 79>: 0.698ns
The critical path consists of the following:
	'mul' operation of DSP[649] ('empty_66', ../src/matmul.cpp:29) [649]  (0.698 ns)

 <State 80>: 0.948ns
The critical path consists of the following:
	'add' operation ('add_ln32_15', ../src/matmul.cpp:32) [651]  (0.948 ns)

 <State 81>: 2.3ns
The critical path consists of the following:
	'phi' operation ('j_6', ../src/matmul.cpp:32) with incoming values : ('add_ln32_6', ../src/matmul.cpp:32) [655]  (0 ns)
	'add' operation ('add_ln8_24', ../src/matmul.cpp:8) [665]  (0.948 ns)
	'getelementptr' operation ('arr_addr_24', ../src/matmul.cpp:8) [667]  (0 ns)
	'load' operation ('arr_load_24', ../src/matmul.cpp:8) on array 'arr' [668]  (1.35 ns)

 <State 82>: 4.7ns
The critical path consists of the following:
	'load' operation ('arr_load_24', ../src/matmul.cpp:8) on array 'arr' [668]  (1.35 ns)
	'fcmp' operation ('tmp_1096', ../src/matmul.cpp:13) [695]  (3.35 ns)

 <State 83>: 4.7ns
The critical path consists of the following:
	'load' operation ('arr_load_26', ../src/matmul.cpp:8) on array 'arr' [677]  (1.35 ns)
	'fcmp' operation ('tmp_1098', ../src/matmul.cpp:13) [704]  (3.35 ns)

 <State 84>: 4.01ns
The critical path consists of the following:
	'fcmp' operation ('tmp_1098', ../src/matmul.cpp:13) [704]  (3.35 ns)
	'and' operation ('and_ln13_55', ../src/matmul.cpp:13) [705]  (0 ns)
	'and' operation ('and_ln13_58', ../src/matmul.cpp:13) [715]  (0.331 ns)
	'and' operation ('and_ln13_16', ../src/matmul.cpp:13) [716]  (0.331 ns)

 <State 85>: 4.13ns
The critical path consists of the following:
	'fcmp' operation ('tmp_1101', ../src/matmul.cpp:16) [718]  (3.35 ns)
	'and' operation ('and_ln16_41', ../src/matmul.cpp:16) [719]  (0 ns)
	'and' operation ('and_ln16_6', ../src/matmul.cpp:16) [723]  (0.331 ns)
	'and' operation ('and_ln16_44', ../src/matmul.cpp:16) [729]  (0 ns)
	'select' operation ('select_ln16_6', ../src/matmul.cpp:16) [730]  (0.451 ns)

 <State 86>: 5.48ns
The critical path consists of the following:
	'fcmp' operation ('tmp_1103', ../src/matmul.cpp:19) [725]  (3.35 ns)
	'and' operation ('and_ln19_19', ../src/matmul.cpp:19) [726]  (0 ns)
	'and' operation ('and_ln19_20', ../src/matmul.cpp:19) [733]  (0.331 ns)
	'select' operation ('select_ln19_6', ../src/matmul.cpp:19) [734]  (0.451 ns)
	'getelementptr' operation ('arr_addr_46', ../src/matmul.cpp:8) [736]  (0 ns)
	'load' operation ('arr_load_46', ../src/matmul.cpp:19) on array 'arr' [737]  (1.35 ns)

 <State 87>: 2.7ns
The critical path consists of the following:
	'load' operation ('arr_load_46', ../src/matmul.cpp:19) on array 'arr' [737]  (1.35 ns)
	'store' operation ('store_ln34', ../src/matmul.cpp:34) of variable 'arr_load_46', ../src/matmul.cpp:19 on array 'out_r' [740]  (1.35 ns)

 <State 88>: 2.95ns
The critical path consists of the following:
	'add' operation ('add_ln29_19', ../src/matmul.cpp:29) [745]  (1.47 ns)
	'icmp' operation ('icmp_ln29_7', ../src/matmul.cpp:29) [747]  (1.48 ns)

 <State 89>: 0.698ns
The critical path consists of the following:
	'mul' operation of DSP[751] ('empty_71', ../src/matmul.cpp:29) [751]  (0.698 ns)

 <State 90>: 0.698ns
The critical path consists of the following:
	'mul' operation of DSP[751] ('empty_71', ../src/matmul.cpp:29) [751]  (0.698 ns)

 <State 91>: 0.489ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('t_1_7', ../src/matmul.cpp:34) with incoming values : ('add_ln32_16', ../src/matmul.cpp:32) ('add_ln34_7', ../src/matmul.cpp:34) [756]  (0.489 ns)

 <State 92>: 2.3ns
The critical path consists of the following:
	'phi' operation ('j_7', ../src/matmul.cpp:32) with incoming values : ('add_ln32_7', ../src/matmul.cpp:32) [757]  (0 ns)
	'add' operation ('add_ln8_28', ../src/matmul.cpp:8) [767]  (0.948 ns)
	'getelementptr' operation ('arr_addr_28', ../src/matmul.cpp:8) [769]  (0 ns)
	'load' operation ('arr_load_28', ../src/matmul.cpp:8) on array 'arr' [770]  (1.35 ns)

 <State 93>: 4.7ns
The critical path consists of the following:
	'load' operation ('arr_load_28', ../src/matmul.cpp:8) on array 'arr' [770]  (1.35 ns)
	'fcmp' operation ('tmp_1106', ../src/matmul.cpp:13) [797]  (3.35 ns)

 <State 94>: 4.7ns
The critical path consists of the following:
	'load' operation ('arr_load_30', ../src/matmul.cpp:8) on array 'arr' [779]  (1.35 ns)
	'fcmp' operation ('tmp_1108', ../src/matmul.cpp:13) [806]  (3.35 ns)

 <State 95>: 4.01ns
The critical path consists of the following:
	'fcmp' operation ('tmp_1108', ../src/matmul.cpp:13) [806]  (3.35 ns)
	'and' operation ('and_ln13_62', ../src/matmul.cpp:13) [807]  (0 ns)
	'and' operation ('and_ln13_65', ../src/matmul.cpp:13) [817]  (0.331 ns)
	'and' operation ('and_ln13_17', ../src/matmul.cpp:13) [818]  (0.331 ns)

 <State 96>: 4.13ns
The critical path consists of the following:
	'fcmp' operation ('tmp_1111', ../src/matmul.cpp:16) [820]  (3.35 ns)
	'and' operation ('and_ln16_46', ../src/matmul.cpp:16) [821]  (0 ns)
	'and' operation ('and_ln16_7', ../src/matmul.cpp:16) [825]  (0.331 ns)
	'and' operation ('and_ln16_49', ../src/matmul.cpp:16) [831]  (0 ns)
	'select' operation ('select_ln16_7', ../src/matmul.cpp:16) [832]  (0.451 ns)

 <State 97>: 5.48ns
The critical path consists of the following:
	'fcmp' operation ('tmp_1113', ../src/matmul.cpp:19) [827]  (3.35 ns)
	'and' operation ('and_ln19_22', ../src/matmul.cpp:19) [828]  (0 ns)
	'and' operation ('and_ln19_23', ../src/matmul.cpp:19) [835]  (0.331 ns)
	'select' operation ('select_ln19_7', ../src/matmul.cpp:19) [836]  (0.451 ns)
	'getelementptr' operation ('arr_addr_47', ../src/matmul.cpp:8) [838]  (0 ns)
	'load' operation ('arr_load_47', ../src/matmul.cpp:19) on array 'arr' [839]  (1.35 ns)

 <State 98>: 2.7ns
The critical path consists of the following:
	'load' operation ('arr_load_47', ../src/matmul.cpp:19) on array 'arr' [839]  (1.35 ns)
	'store' operation ('store_ln34', ../src/matmul.cpp:34) of variable 'arr_load_47', ../src/matmul.cpp:19 on array 'out_r' [842]  (1.35 ns)

 <State 99>: 2.95ns
The critical path consists of the following:
	'add' operation ('add_ln29_22', ../src/matmul.cpp:29) [847]  (1.47 ns)
	'icmp' operation ('icmp_ln29_8', ../src/matmul.cpp:29) [849]  (1.48 ns)

 <State 100>: 0.698ns
The critical path consists of the following:
	'mul' operation of DSP[853] ('empty_76', ../src/matmul.cpp:29) [853]  (0.698 ns)

 <State 101>: 0.698ns
The critical path consists of the following:
	'mul' operation of DSP[853] ('empty_76', ../src/matmul.cpp:29) [853]  (0.698 ns)

 <State 102>: 0.948ns
The critical path consists of the following:
	'add' operation ('add_ln32_17', ../src/matmul.cpp:32) [855]  (0.948 ns)

 <State 103>: 2.3ns
The critical path consists of the following:
	'phi' operation ('j_8', ../src/matmul.cpp:32) with incoming values : ('add_ln32_8', ../src/matmul.cpp:32) [859]  (0 ns)
	'add' operation ('add_ln8_32', ../src/matmul.cpp:8) [869]  (0.948 ns)
	'getelementptr' operation ('arr_addr_32', ../src/matmul.cpp:8) [871]  (0 ns)
	'load' operation ('arr_load_32', ../src/matmul.cpp:8) on array 'arr' [872]  (1.35 ns)

 <State 104>: 4.7ns
The critical path consists of the following:
	'load' operation ('arr_load_32', ../src/matmul.cpp:8) on array 'arr' [872]  (1.35 ns)
	'fcmp' operation ('tmp_1116', ../src/matmul.cpp:13) [899]  (3.35 ns)

 <State 105>: 4.7ns
The critical path consists of the following:
	'load' operation ('arr_load_34', ../src/matmul.cpp:8) on array 'arr' [881]  (1.35 ns)
	'fcmp' operation ('tmp_1118', ../src/matmul.cpp:13) [908]  (3.35 ns)

 <State 106>: 4.01ns
The critical path consists of the following:
	'fcmp' operation ('tmp_1118', ../src/matmul.cpp:13) [908]  (3.35 ns)
	'and' operation ('and_ln13_69', ../src/matmul.cpp:13) [909]  (0 ns)
	'and' operation ('and_ln13_72', ../src/matmul.cpp:13) [919]  (0.331 ns)
	'and' operation ('and_ln13_18', ../src/matmul.cpp:13) [920]  (0.331 ns)

 <State 107>: 4.13ns
The critical path consists of the following:
	'fcmp' operation ('tmp_1121', ../src/matmul.cpp:16) [922]  (3.35 ns)
	'and' operation ('and_ln16_51', ../src/matmul.cpp:16) [923]  (0 ns)
	'and' operation ('and_ln16_8', ../src/matmul.cpp:16) [927]  (0.331 ns)
	'and' operation ('and_ln16_54', ../src/matmul.cpp:16) [933]  (0 ns)
	'select' operation ('select_ln16_8', ../src/matmul.cpp:16) [934]  (0.451 ns)

 <State 108>: 5.48ns
The critical path consists of the following:
	'fcmp' operation ('tmp_1123', ../src/matmul.cpp:19) [929]  (3.35 ns)
	'and' operation ('and_ln19_25', ../src/matmul.cpp:19) [930]  (0 ns)
	'and' operation ('and_ln19_26', ../src/matmul.cpp:19) [937]  (0.331 ns)
	'select' operation ('select_ln19_8', ../src/matmul.cpp:19) [938]  (0.451 ns)
	'getelementptr' operation ('arr_addr_48', ../src/matmul.cpp:8) [940]  (0 ns)
	'load' operation ('arr_load_48', ../src/matmul.cpp:19) on array 'arr' [941]  (1.35 ns)

 <State 109>: 2.7ns
The critical path consists of the following:
	'load' operation ('arr_load_48', ../src/matmul.cpp:19) on array 'arr' [941]  (1.35 ns)
	'store' operation ('store_ln34', ../src/matmul.cpp:34) of variable 'arr_load_48', ../src/matmul.cpp:19 on array 'out_r' [944]  (1.35 ns)

 <State 110>: 2.95ns
The critical path consists of the following:
	'add' operation ('add_ln29_25', ../src/matmul.cpp:29) [949]  (1.47 ns)
	'icmp' operation ('icmp_ln29_9', ../src/matmul.cpp:29) [951]  (1.48 ns)

 <State 111>: 0.698ns
The critical path consists of the following:
	'mul' operation of DSP[955] ('empty_81', ../src/matmul.cpp:29) [955]  (0.698 ns)

 <State 112>: 0.698ns
The critical path consists of the following:
	'mul' operation of DSP[955] ('empty_81', ../src/matmul.cpp:29) [955]  (0.698 ns)

 <State 113>: 0.489ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('t_1_9', ../src/matmul.cpp:34) with incoming values : ('add_ln32_18', ../src/matmul.cpp:32) ('add_ln34_9', ../src/matmul.cpp:34) [960]  (0.489 ns)

 <State 114>: 2.3ns
The critical path consists of the following:
	'phi' operation ('j_9', ../src/matmul.cpp:32) with incoming values : ('add_ln32_9', ../src/matmul.cpp:32) [961]  (0 ns)
	'add' operation ('add_ln8_36', ../src/matmul.cpp:8) [971]  (0.948 ns)
	'getelementptr' operation ('arr_addr_36', ../src/matmul.cpp:8) [973]  (0 ns)
	'load' operation ('arr_load_36', ../src/matmul.cpp:8) on array 'arr' [974]  (1.35 ns)

 <State 115>: 4.7ns
The critical path consists of the following:
	'load' operation ('arr_load_36', ../src/matmul.cpp:8) on array 'arr' [974]  (1.35 ns)
	'fcmp' operation ('tmp_1126', ../src/matmul.cpp:13) [1001]  (3.35 ns)

 <State 116>: 4.7ns
The critical path consists of the following:
	'load' operation ('arr_load_38', ../src/matmul.cpp:8) on array 'arr' [983]  (1.35 ns)
	'fcmp' operation ('tmp_1128', ../src/matmul.cpp:13) [1010]  (3.35 ns)

 <State 117>: 4.01ns
The critical path consists of the following:
	'fcmp' operation ('tmp_1128', ../src/matmul.cpp:13) [1010]  (3.35 ns)
	'and' operation ('and_ln13_76', ../src/matmul.cpp:13) [1011]  (0 ns)
	'and' operation ('and_ln13_79', ../src/matmul.cpp:13) [1021]  (0.331 ns)
	'and' operation ('and_ln13_19', ../src/matmul.cpp:13) [1022]  (0.331 ns)

 <State 118>: 4.13ns
The critical path consists of the following:
	'fcmp' operation ('tmp_1131', ../src/matmul.cpp:16) [1024]  (3.35 ns)
	'and' operation ('and_ln16_56', ../src/matmul.cpp:16) [1025]  (0 ns)
	'and' operation ('and_ln16_9', ../src/matmul.cpp:16) [1029]  (0.331 ns)
	'and' operation ('and_ln16_59', ../src/matmul.cpp:16) [1035]  (0 ns)
	'select' operation ('select_ln16_9', ../src/matmul.cpp:16) [1036]  (0.451 ns)

 <State 119>: 5.48ns
The critical path consists of the following:
	'fcmp' operation ('tmp_1133', ../src/matmul.cpp:19) [1031]  (3.35 ns)
	'and' operation ('and_ln19_28', ../src/matmul.cpp:19) [1032]  (0 ns)
	'and' operation ('and_ln19_29', ../src/matmul.cpp:19) [1039]  (0.331 ns)
	'select' operation ('select_ln19_9', ../src/matmul.cpp:19) [1040]  (0.451 ns)
	'getelementptr' operation ('arr_addr_49', ../src/matmul.cpp:8) [1042]  (0 ns)
	'load' operation ('arr_load_49', ../src/matmul.cpp:19) on array 'arr' [1043]  (1.35 ns)

 <State 120>: 2.7ns
The critical path consists of the following:
	'load' operation ('arr_load_49', ../src/matmul.cpp:19) on array 'arr' [1043]  (1.35 ns)
	'store' operation ('store_ln34', ../src/matmul.cpp:34) of variable 'arr_load_49', ../src/matmul.cpp:19 on array 'out_r' [1046]  (1.35 ns)

 <State 121>: 1.47ns
The critical path consists of the following:
	'add' operation ('add_ln29_28', ../src/matmul.cpp:29) [1050]  (1.47 ns)

 <State 122>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78
	State 79
	State 80
	State 81
	State 82
	State 83
	State 84
	State 85
	State 86
	State 87
	State 88
	State 89
	State 90
	State 91
	State 92
	State 93
	State 94
	State 95
	State 96
	State 97
	State 98
	State 99
	State 100
	State 101
	State 102
	State 103
	State 104
	State 105
	State 106
	State 107
	State 108
	State 109
	State 110
	State 111
	State 112
	State 113
	State 114
	State 115
	State 116
	State 117
	State 118
	State 119
	State 120
	State 121
	State 122


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
