-- ==============================================================
-- Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity nn_inference_mat_mul_layer7_weights_rom is 
    generic(
             DWIDTH     : integer := 32; 
             AWIDTH     : integer := 9; 
             MEM_SIZE    : integer := 320
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of nn_inference_mat_mul_layer7_weights_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "00111110100011100001011001011011", 
    1 => "00111111000000000000010101100100", 
    2 => "10111111010011000110000001101100", 
    3 => "10111110011000010100100010011111", 
    4 => "00111101100011110100000100000011", 
    5 => "10111101001110001111100111100000", 
    6 => "10111111010111001100101110010011", 
    7 => "10111110101100010001110100001000", 
    8 => "10111110110101111001100011111110", 
    9 => "10111110110010000111110000110011", 
    10 => "00111101101111000101101101111010", 
    11 => "10111110001101100010101100110110", 
    12 => "10111111100010010101000100110011", 
    13 => "10111101101010100101101111111001", 
    14 => "00111110001111011001101101000000", 
    15 => "00111100110000111100101001100000", 
    16 => "00111111000011100000111001110010", 
    17 => "10111110100010001011101011010010", 
    18 => "10111111001001101000010101110101", 
    19 => "10111110011000010000010011001111", 
    20 => "00111110100011111111010111101001", 
    21 => "00111110101001011111000000111111", 
    22 => "00111101101100001010110001101000", 
    23 => "10111110000100011010111100011000", 
    24 => "10111110011110111111001101110010", 
    25 => "00111101111110101100001010100111", 
    26 => "00111101110010010001011010100010", 
    27 => "10111111000000100111011000101010", 
    28 => "00111110111100001010000000010101", 
    29 => "00111111000000010000001111001001", 
    30 => "10111110001110001000100110111000", 
    31 => "00111101001011101110100011110001", 
    32 => "00111111000010110011100101010100", 
    33 => "00111110101110000001111100101111", 
    34 => "10111100011101001100010101011110", 
    35 => "10111110011100010000000000000110", 
    36 => "10111101111010101111111100011100", 
    37 => "00111100111011001011110011010011", 
    38 => "00111011001101101100111010001101", 
    39 => "00111100010010000100010010110110", 
    40 => "00111100110111011100010010000111", 
    41 => "10111110010000001010001001011010", 
    42 => "00111100111010011000101110100010", 
    43 => "00111101100100110010110000011101", 
    44 => "10111101011010011011010100101000", 
    45 => "10111101000011100110011101011111", 
    46 => "00111101111111101111100011111001", 
    47 => "10111111000001111010111110101011", 
    48 => "00111101100000001110101000001101", 
    49 => "00111101010001011101000101111111", 
    50 => "00111110110011100110100110000100", 
    51 => "10111111010111110111011110010011", 
    52 => "00111101101101011000001011110000", 
    53 => "10111100100001100001100100110011", 
    54 => "00111101100010001101011101110001", 
    55 => "00111111000100010100000110110011", 
    56 => "00111110011110110101100100011011", 
    57 => "10111110110001101011000111001101", 
    58 => "10111110000000110110111100001000", 
    59 => "00111111001100110000110100001001", 
    60 => "00111110011000100010010101010010", 
    61 => "10111110110001100011101100011110", 
    62 => "10111110000110101110011111111101", 
    63 => "00111110000011000010001001001001", 
    64 => "00111110000100101100011000110000", 
    65 => "00111111010101011110000011011101", 
    66 => "10111111010011100010011001110011", 
    67 => "00111101000001001101111001110111", 
    68 => "00111101110111111001000001001000", 
    69 => "00111101011111001110111000001101", 
    70 => "10111101111101011111110111100110", 
    71 => "10111111000111111110101011111110", 
    72 => "10111111000000000010010010000100", 
    73 => "00111101111001000000100110000101", 
    74 => "10111100001101110011111111100111", 
    75 => "00111111000111010011010110010110", 
    76 => "10111110110101101110001110010011", 
    77 => "00111110011000110100010011010011", 
    78 => "00111110010000100010111110101110", 
    79 => "10111110000010011100110100101010", 
    80 => "00111110101101110101010111011111", 
    81 => "10111110110010010010000001000010", 
    82 => "10111110001001011111111111110110", 
    83 => "10111101101010000111001101101101", 
    84 => "10111101010100011000101010010101", 
    85 => "10111110101100001111011101100101", 
    86 => "10111110101111011100100011111110", 
    87 => "00111111001001010110100100100011", 
    88 => "00111110001001110111110100011111", 
    89 => "00111110000110011101000100001001", 
    90 => "10111110010001100001011001011000", 
    91 => "10111101001000001011100110000110", 
    92 => "10111110011011111111000111110110", 
    93 => "00111100111100110110000011110010", 
    94 => "00111101110011010100000110001001", 
    95 => "00111101101001100100000010010100", 
    96 => "00111111001001100100111100011000", 
    97 => "10111101000010010101101011001101", 
    98 => "10111101011100111010000010100011", 
    99 => "00111101110000111100010000010110", 
    100 => "10111110010101110101010001010000", 
    101 => "00111110011011101111100000110010", 
    102 => "00111110100011110001011010101101", 
    103 => "10111110000111001010111110011100", 
    104 => "00111110000011101110100110110101", 
    105 => "10111110110111111110000001111010", 
    106 => "00111110111111000101111110101111", 
    107 => "10111110000000010000110001010001", 
    108 => "10111101000011011110011101000001", 
    109 => "00111100011100100001010100011001", 
    110 => "10111110100000010010001001110111", 
    111 => "10111111001000001001000101110100", 
    112 => "00111110001101101010001111100100", 
    113 => "00111100001001110101110010010001", 
    114 => "10111101010011110000000101100101", 
    115 => "00111110100001001000101100011101", 
    116 => "00111110000011000001010111110110", 
    117 => "00111110001011110000110110101010", 
    118 => "10111101110110001011111101010010", 
    119 => "00111101001110000001001011011001", 
    120 => "00111101001111110010101001100010", 
    121 => "10111101110001011111011011101110", 
    122 => "10111110000000010011111101110101", 
    123 => "10111101100000100111111011111100", 
    124 => "00111101111110010000000100110110", 
    125 => "10111110000000001101001100010100", 
    126 => "10111110111000000010101011110100", 
    127 => "00111110111000100111110000111111", 
    128 => "00111110101100000101100110101111", 
    129 => "00111101100000111011011101011101", 
    130 => "00111110110011110010010110101111", 
    131 => "10111110010110000010001100000100", 
    132 => "10111110110001110110100101011011", 
    133 => "10111110100010110101101011111010", 
    134 => "00111101000101000110011010101111", 
    135 => "00111111000001110111011110101010", 
    136 => "10111110010001111110010110001110", 
    137 => "10111111000011001110010101100001", 
    138 => "00111011000010010111001100101110", 
    139 => "00111110011111010011111011100011", 
    140 => "10111110110101011100101110111101", 
    141 => "10111111000000100010000111100010", 
    142 => "10111111010111111111000101001001", 
    143 => "10111111001101010101100000100100", 
    144 => "10111101011010011001100100000001", 
    145 => "10111110011101001101101110001000", 
    146 => "00111110001010110000111011110000", 
    147 => "00111110111011011110001101000011", 
    148 => "10111100111110010110010000111000", 
    149 => "10111101101110100111111010100010", 
    150 => "00111110010110011111000110010001", 
    151 => "00111110110101011110110111100011", 
    152 => "10111111001000011011000101000001", 
    153 => "10111111100110010001000001011110", 
    154 => "00111110000111100111001000110000", 
    155 => "00111110101011100100010111100011", 
    156 => "10111110101111010000011100011110", 
    157 => "10111110010101111111100001111101", 
    158 => "00111101010110100000001110010000", 
    159 => "00111101100010000000000000011010", 
    160 => "00111111000000101100110011100111", 
    161 => "00111110011110000010110010100000", 
    162 => "10111110010110010100010111011001", 
    163 => "10111110100010011110011111111000", 
    164 => "10111011111110000100001110110010", 
    165 => "10111100111000011001010011101110", 
    166 => "00111110001001101010010101000011", 
    167 => "10111111001011110101100001001101", 
    168 => "00111101101100110110001001111100", 
    169 => "00111101010111111111010110101001", 
    170 => "10111100111110100110111000110011", 
    171 => "00111110001100110000111101110011", 
    172 => "00111101010001010111010111011100", 
    173 => "00111100011111101111000110110111", 
    174 => "10111100100111001111011001111111", 
    175 => "00111110110101001111110010011110", 
    176 => "10111110111011101000111110111101", 
    177 => "10111111111110111001010001000011", 
    178 => "00111101010101111000000010010001", 
    179 => "10111101010101000011011000101110", 
    180 => "00111101101111111010000011100000", 
    181 => "10111101110101111101011101011000", 
    182 => "10111110111111010110000010000010", 
    183 => "10111111000110110100111011110000", 
    184 => "00111101100001101000001011111000", 
    185 => "00111110000001010111111111110011", 
    186 => "10111101100100111111001011110111", 
    187 => "10111110110101011110101100000110", 
    188 => "00111111010001001100100110011110", 
    189 => "10111101011110001000011111110010", 
    190 => "10111100110110110011010110110010", 
    191 => "10111101100001011111101111000111", 
    192 => "10111110001100101010101100110111", 
    193 => "00111110010000101110110000110001", 
    194 => "00111111001001010011000000101111", 
    195 => "10111110001110101000111111001101", 
    196 => "00111101100000000010111000011001", 
    197 => "00111110011110000100011011110001", 
    198 => "10111101101110110100010100010111", 
    199 => "10111110100110011110011010110000", 
    200 => "00111110110110110101000011101000", 
    201 => "10111110010000001010101011111011", 
    202 => "10111111100000001100100011110100", 
    203 => "10111110000000111011001110111000", 
    204 => "10111101101001111000011000011110", 
    205 => "00111110010101010110000010110000", 
    206 => "10111110111001011000111010011110", 
    207 => "00111110011011010101111110010010", 
    208 => "00111110010011001000011000001000", 
    209 => "00111110000001001100001110000101", 
    210 => "00111100001010111101001010000101", 
    211 => "00111101100100100111001100110101", 
    212 => "00111110010111101101010011011000", 
    213 => "10111111100110101111100111110110", 
    214 => "10111110100100110001110101011110", 
    215 => "00111101101110011110101111000111", 
    216 => "10111101010010001011000101101110", 
    217 => "10111110111110110000100111111001", 
    218 => "10111110000011001010110011001010", 
    219 => "00111110010001101101001010000011", 
    220 => "00111101011110011010110110001011", 
    221 => "00111110100101110111110001110100", 
    222 => "10111110001111100111110010100110", 
    223 => "10111100100111110101111001000001", 
    224 => "00111111001100010101000011001100", 
    225 => "00111110111111100111010100000111", 
    226 => "00111110011110011001000010010111", 
    227 => "00111110111000001001100000110011", 
    228 => "10111110111010000011001001110100", 
    229 => "10111110001101001011010110111011", 
    230 => "00111101101111101101100100111101", 
    231 => "00111110100010111100110011100011", 
    232 => "10111110101010110001011011011111", 
    233 => "10111111100100010000101111110001", 
    234 => "10111110110000101001010100001000", 
    235 => "00111101100111001111111000010101", 
    236 => "00111110110011100111110010110001", 
    237 => "10111101100100100011011110010101", 
    238 => "10111110110001010001010001100111", 
    239 => "10111100111010110001000100000010", 
    240 => "00111101110000011100101000111011", 
    241 => "00111110110001010111101011000110", 
    242 => "00111101110110111010100101011011", 
    243 => "10111110101110111011100100010000", 
    244 => "10111010101101111100110000000110", 
    245 => "00111110110101111110011001101101", 
    246 => "00111110011100000111010100001101", 
    247 => "10111110110111011101110000110111", 
    248 => "10111101110101000000010101110110", 
    249 => "10111011110011001011010010100101", 
    250 => "10111110100011111100100100110001", 
    251 => "00111110010110000011010101110101", 
    252 => "10111110011111111011000001011011", 
    253 => "00111101100001010000011001101010", 
    254 => "00111110001111110111011100101010", 
    255 => "00111110111100100010100110100110", 
    256 => "00111110001000111100101110001100", 
    257 => "10111111100100110001111010011000", 
    258 => "10111111000001111100110101110011", 
    259 => "10111011100000011101101000010010", 
    260 => "00111110000101010110010001011111", 
    261 => "10111110000010011000001110111011", 
    262 => "10111111110010000011110011000100", 
    263 => "10111110011111101110100101100010", 
    264 => "10111101011011001010000010011000", 
    265 => "00111111000000000000001100000001", 
    266 => "00111110110000111011011100110010", 
    267 => "10111110110000001111111001010111", 
    268 => "10111110011100001001000000111111", 
    269 => "00111110100010000001010000000101", 
    270 => "00111111000110100101110110100111", 
    271 => "10111110110011100011111000011110", 
    272 => "10111101111111000111101100011011", 
    273 => "10111101011111100101111110000110", 
    274 => "10111101001101100000001000001101", 
    275 => "10111110011011111010100101001001", 
    276 => "10111110010010000100110100001101", 
    277 => "00111110010000100001001110001101", 
    278 => "00111101100001011101111101101010", 
    279 => "00111101101111010101111000010101", 
    280 => "00111101100101010101011100101010", 
    281 => "00111101001001110010011001100111", 
    282 => "10111111011011000110010101000100", 
    283 => "10111110110000000000111100100001", 
    284 => "00111110000100011100100101111101", 
    285 => "00111110110001010001101001101010", 
    286 => "10111101011000101110000110101101", 
    287 => "10111111000010110011001010010111", 
    288 => "00111101111110011111111111101111", 
    289 => "00111100101110101111001000111010", 
    290 => "00111110001000000000000100110101", 
    291 => "10111101110000110111001000011000", 
    292 => "00111110001011001100110000000011", 
    293 => "00111110001100000010001000111101", 
    294 => "10111110010111100011010111111011", 
    295 => "00111110111110100011011111100001", 
    296 => "00111111011000111111000010011011", 
    297 => "00111110110101110001011000100100", 
    298 => "00111110100110101011010001110111", 
    299 => "00111110010001000011001110100000", 
    300 => "00111110110000110010110111011110", 
    301 => "10111101110111001110011010100110", 
    302 => "10111110011100110101110100110001", 
    303 => "10111100010011000010111000010001", 
    304 => "00111101101010111101111111001100", 
    305 => "10111100101110000010111001001110", 
    306 => "00111100100000010010111101110000", 
    307 => "10111111011010011001011101111000", 
    308 => "00111101000101110101110110011011", 
    309 => "10111100010110010011000100011110", 
    310 => "10111110001101100011001100011100", 
    311 => "10111110011001100001111011011110", 
    312 => "00111111010000101111111100001000", 
    313 => "10111100010110011101110000100001", 
    314 => "00111110111000101011110000001011", 
    315 => "10111110100110111000101111110111", 
    316 => "10111110011011011010000011000010", 
    317 => "10111011011110110001100110011100", 
    318 => "00111110100100000010100010110110", 
    319 => "10111101111010000110110011010001" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity nn_inference_mat_mul_layer7_weights is
    generic (
        DataWidth : INTEGER := 32;
        AddressRange : INTEGER := 320;
        AddressWidth : INTEGER := 9);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of nn_inference_mat_mul_layer7_weights is
    component nn_inference_mat_mul_layer7_weights_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    nn_inference_mat_mul_layer7_weights_rom_U :  component nn_inference_mat_mul_layer7_weights_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


